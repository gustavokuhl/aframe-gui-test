;(() => {
  var t = {
      754: () => {
        if ("undefined" == typeof AFRAME)
          throw new Error(
            "Component attempted to register before AFRAME was available."
          )
        AFRAME.registerComponent("bevelbox", {
          schema: {
            width: { type: "number", default: 1 },
            height: { type: "number", default: 1 },
            depth: { type: "number", default: 1 },
            topLeftRadius: { type: "number", default: 1e-5 },
            topRightRadius: { type: "number", default: 1e-5 },
            bottomLeftRadius: { type: "number", default: 1e-5 },
            bottomRightRadius: { type: "number", default: 1e-5 },
            bevelEnabled: { type: "boolean", default: !0 },
            bevelSegments: { type: "number", default: 2 },
            steps: { type: "number", default: 1 },
            bevelSize: { type: "number", default: 0.1 },
            bevelOffset: { type: "number", default: 0 },
            bevelThickness: { type: "number", default: 0.1 },
          },
          multiple: !1,
          init: function () {
            var t = this.el,
              e = this.data,
              i = e.width,
              r = e.height,
              o = -e.width / 2,
              n = -e.height / 2,
              a = new THREE.Shape()
            a.moveTo(o, n + e.topLeftRadius),
              a.lineTo(o, n + r - e.topLeftRadius),
              a.quadraticCurveTo(o, n + r, o + e.topLeftRadius, n + r),
              a.lineTo(o + i - e.topRightRadius, n + r),
              a.quadraticCurveTo(o + i, n + r, o + i, n + r - e.topRightRadius),
              a.lineTo(o + i, n + e.bottomRightRadius),
              a.quadraticCurveTo(o + i, n, o + i - e.bottomRightRadius, n),
              a.lineTo(o + e.bottomLeftRadius, n),
              a.quadraticCurveTo(o, n, o, n + e.bottomLeftRadius)
            var s = this.extrude(a)
            t.setObject3D("mesh", s)
          },
          extrude: function (t) {
            this.el
            var e = this.data,
              i = {
                steps: e.steps,
                depth: e.depth,
                bevelEnabled: e.bevelEnabled,
                bevelThickness: e.bevelThickness,
                bevelSize: e.bevelSize,
                bevelOffset: e.bevelOffset,
                bevelSegments: e.bevelSegments,
              },
              r = new THREE.ExtrudeGeometry(t, i)
            return new THREE.Mesh(
              r,
              new THREE.MeshStandardMaterial({ side: THREE.DoubleSide })
            )
          },
          update: function (t) {},
          remove: function () {},
          pause: function () {},
          play: function () {},
        })
      },
      843: () => {
        AFRAME.registerComponent("gui-button", {
          schema: {
            on: { default: "click" },
            value: { type: "string", default: "" },
            fontSize: { type: "number", default: 0.2 },
            fontFamily: { type: "string", default: "" },
            fontColor: { type: "string", default: key_offwhite },
            borderColor: { type: "string", default: key_offwhite },
            focusColor: { type: "string", default: key_orange_light },
            backgroundColor: { type: "string", default: key_grey },
            hoverColor: { type: "string", default: key_grey_dark },
            activeColor: { type: "string", default: key_orange },
            toggle: { type: "boolean", default: !1 },
            toggleState: { type: "boolean", default: !1 },
          },
          dependencies: ["aframe-troika-text"],
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item")
            if (((this.guiItem = i), t.fontSize > 20)) {
              var r = t.fontSize / 750
              t.fontSize = r
            }
            var o = e.getAttribute("gui-interactable")
            ;(this.guiInteractable = o),
              e.setAttribute(
                "geometry",
                `primitive: plane; \n                                     height: ${i.height}; \n                                     width: ${i.width};\n                                     `
              ),
              e.setAttribute(
                "material",
                `shader: flat; \n                                     transparent: true; \n                                     opacity: 0.5; \n                                     side:double; \n                                     color:${t.backgroundColor};\n                                     `
              )
            var n = document.createElement("a-entity")
            if (i.bevel) {
              var a = 1 * i.bevelSize,
                s = i.bevelThickness
              n.setAttribute(
                "bevelbox",
                `width: ${
                  i.width - i.width * a
                }; \n                                                      height: ${
                  i.height - i.height * a
                }; \n                                                      depth: ${
                  i.baseDepth - i.baseDepth * s
                };\n                                                      bevelThickness: 0;\n                                                      bevelSize: ${
                  i.bevelSize
                };\n                                                      `
              ),
                n.setAttribute("position", "0 0 0")
            } else
              n.setAttribute(
                "geometry",
                `primitive: box; \n                                                      width: ${i.width}; \n                                                      height: ${i.height}; \n                                                      depth: ${i.baseDepth};\n                                                      `
              ),
                n.setAttribute("position", "0 0 " + i.baseDepth / 2)
            n.setAttribute("rotation", "0 0 0"),
              n.setAttribute(
                "material",
                `shader: flat; \n                                                  opacity: 1; \n                                                  side:double; \n                                                  color: ${t.borderColor}\n                                                  `
              ),
              e.appendChild(n),
              (this.buttonContainer = n)
            var l = document.createElement("a-entity")
            if (i.bevel) {
              ;(a = 1 * i.bevelSize), (s = i.bevelThickness)
              l.setAttribute(
                "bevelbox",
                `width: ${
                  i.width - i.gap - (i.width - i.gap) * a
                }; \n                                                   height: ${
                  i.height - i.gap - (i.height - i.gap) * a
                }; \n                                                   depth: ${
                  i.depth - i.depth * s
                };\n                                                   bevelThickness: ${
                  i.bevelThickness
                };\n                                                   bevelSize: ${
                  i.bevelSize
                };\n                                                   `
              ),
                l.setAttribute("position", "0 0 0")
            } else
              l.setAttribute(
                "geometry",
                `primitive: box;\n                                               width: ${
                  i.width - i.gap
                };\n                                               height: ${
                  i.height - i.gap
                }; \n                                               depth: ${
                  i.depth
                };`
              ),
                l.setAttribute("position", "0 0 " + i.depth / 2)
            l.setAttribute(
              "material",
              `shader: flat; \n                                               opacity: 1; \n                                               side:double; \n                                               color: ${
                t.toggleState ? t.activeColor : t.backgroundColor
              }\n                                               `
            ),
              l.setAttribute("rotation", "0 0 0"),
              e.appendChild(l),
              (this.buttonEntity = l),
              this.setText(t.value),
              e.addEventListener("mouseenter", function (e) {
                l.removeAttribute("animation__leave"),
                  t.toggle ||
                    l.setAttribute(
                      "animation__enter",
                      `property: material.color; from: ${t.backgroundColor}; to:${t.hoverColor}; dur:200;`
                    )
              }),
              e.addEventListener("mouseleave", function (e) {
                t.toggle ||
                  (l.removeAttribute("animation__click"),
                  l.setAttribute(
                    "animation__leave",
                    `property: material.color; from: ${t.hoverColor}; to:${t.backgroundColor}; dur:200; easing: easeOutQuad;`
                  )),
                  l.removeAttribute("animation__enter")
              }),
              e.addEventListener("focus", function (e) {
                n.setAttribute("material", "color", `${t.focusColor}`)
              }),
              e.addEventListener("blur", function (e) {
                n.setAttribute("material", "color", `${t.borderColor}`),
                  t.toggle ||
                    (l.removeAttribute("animation__click"),
                    l.setAttribute(
                      "animation__leave",
                      `property: material.color; from: ${t.hoverColor}; to:${t.backgroundColor}; dur:200; easing: easeOutQuad;`
                    )),
                  l.removeAttribute("animation__enter")
              }),
              e.addEventListener(t.on, function (i) {
                if (t.toggle) {
                  var r = e.components["gui-button"]
                  r.setActiveState(!r.data.toggleState)
                } else l.setAttribute("animation__click", `property: material.color; from: ${t.activeColor}; to:${t.backgroundColor}; dur:400; easing: easeOutQuad;`)
                if (o.windowFunction) {
                  var n = o.clickAction
                  "function" == typeof (a = window[n]) && a(i)
                } else {
                  var a
                  "function" == typeof (a = o.clickAction) && a(i)
                }
              }),
              e.addEventListener("keyup", function (i) {
                i.isComposing ||
                  229 === i.keyCode ||
                  ((13 != i.keyCode && 32 != i.keyCode) || e.emit(t.on),
                  i.preventDefault())
              }),
              e.setAttribute("role", "button"),
              e.setAttribute("tabindex", "0"),
              e.setAttribute("aria-label", t.value)
          },
          play: function () {},
          update: function (t) {
            var e = this.data,
              i = this.el,
              r = i.getAttribute("gui-item")
            if (
              ((this.guiItem = r),
              i.setAttribute(
                "geometry",
                `primitive: plane; \n                                     height: ${r.height}; \n                                     width: ${r.width};\n                                     `
              ),
              i.setAttribute(
                "material",
                `shader: flat; \n                                     transparent: true; \n                                     opacity: 0.5; \n                                     side:double; \n                                     color:${e.backgroundColor};\n                                     `
              ),
              r.bevel)
            ) {
              var o = 1 * r.bevelSize,
                n = r.bevelThickness
              this.buttonContainer.setAttribute(
                "bevelbox",
                `width: ${
                  r.width - r.width * o
                }; \n                                                           height: ${
                  r.height - r.height * o
                }; \n                                                           depth: ${
                  r.baseDepth - r.baseDepth * n
                };\n                                                           bevelThickness: 0;\n                                                           bevelSize: ${
                  r.bevelSize
                };\n                                                           `
              ),
                this.buttonContainer.setAttribute("position", "0 0 0")
            } else
              this.buttonContainer.setAttribute(
                "geometry",
                `primitive: box; \n                                                       width: ${r.width}; \n                                                       height: ${r.height}; \n                                                       depth: ${r.baseDepth};\n                                                       `
              ),
                this.buttonContainer.setAttribute(
                  "position",
                  "0 0 " + r.baseDepth / 2
                )
            if (
              (this.buttonContainer.setAttribute(
                "material",
                `shader: flat; \n                                                       opacity: 1; \n                                                       side:double; \n                                                       color: ${e.borderColor}\n                                                       `
              ),
              r.bevel)
            ) {
              ;(o = 1 * r.bevelSize), (n = r.bevelThickness)
              this.buttonEntity.setAttribute(
                "bevelbox",
                `width: ${
                  r.width - r.gap - (r.width - r.gap) * o
                }; \n                                                        height: ${
                  r.height - r.gap - (r.height - r.gap) * o
                }; \n                                                        depth: ${
                  r.depth - r.depth * n
                };\n                                                        bevelThickness: ${
                  r.bevelThickness
                };\n                                                        bevelSize: ${
                  r.bevelSize
                };\n                                                        `
              ),
                this.buttonEntity.setAttribute("position", "0 0 0")
            } else
              this.buttonEntity.setAttribute(
                "geometry",
                `primitive: box; \n                                               width: ${
                  r.width - r.gap
                }; \n                                               height: ${
                  r.height - r.gap
                }; \n                                               depth: ${
                  r.depth
                };\n                                               `
              ),
                this.buttonEntity.setAttribute("position", "0 0 " + r.depth / 2)
            if (
              (this.buttonEntity.setAttribute(
                "material",
                `shader: flat; \n                                                    opacity: 1; \n                                                    side:double; \n                                                    color: ${
                  e.toggleState ? e.activeColor : e.backgroundColor
                }\n                                                    `
              ),
              this.textEntity)
            ) {
              console.log("has textEntity: " + this.textEntity)
              var a = this.textEntity
              a.parentNode.removeChild(a), this.setText(this.data.value)
            } else console.log("no textEntity!")
          },
          setActiveState: function (t) {
            ;(this.data.toggleState = t),
              t
                ? (console.log("active, about to set active color"),
                  this.buttonEntity.setAttribute(
                    "material",
                    "color",
                    this.data.activeColor
                  ))
                : (console.log("not active, about to set background color"),
                  this.buttonEntity.setAttribute(
                    "material",
                    "color",
                    this.data.backgroundColor
                  ))
          },
          setText: function (t) {
            var e = this.data,
              i = this.el.getAttribute("gui-item"),
              r = document.createElement("a-entity")
            ;(this.textEntity = r),
              r.setAttribute(
                "troika-text",
                `value: ${t}; \n                                                align:center; \n                                                anchor:center; \n                                                baseline:center;\n                                                letterSpacing:0;\n                                                color:${
                  e.fontColor
                };                                                \n                                                font:${
                  e.fontFamily
                };\n                                                fontSize:${
                  e.fontSize
                };\n                                                depthOffset:-1;\n                                                maxWidth:${
                  i.width / 1.05
                };\n                                                `
              ),
              r.setAttribute("troika-text-material", "shader: flat;"),
              i.bevel
                ? r.setAttribute(
                    "position",
                    `0 0 ${i.depth + i.bevelThickness / 2 + 0.06}`
                  )
                : r.setAttribute("position", "0 0 " + (i.depth / 2 + 0.06)),
              this.buttonEntity.appendChild(r)
          },
        }),
          AFRAME.registerPrimitive("a-gui-button", {
            defaultComponents: {
              "gui-interactable": {},
              "gui-item": { type: "button" },
              "gui-button": {},
            },
            mappings: {
              onclick: "gui-interactable.clickAction",
              onhover: "gui-interactable.hoverAction",
              "key-code": "gui-interactable.keyCode",
              "window-function": "gui-interactable.windowFunction",
              width: "gui-item.width",
              height: "gui-item.height",
              depth: "gui-item.depth",
              "base-depth": "gui-item.baseDepth",
              gap: "gui-item.gap",
              radius: "gui-item.radius",
              margin: "gui-item.margin",
              bevel: "gui-item.bevel",
              "bevel-segments": "gui-item.bevelSegments",
              steps: "gui-item.steps",
              "bevel-size": "gui-item.bevelSize",
              "bevel-offset": "gui-item.bevelOffset",
              "bevel-thickness": "gui-item.bevelThickness",
              on: "gui-button.on",
              value: "gui-button.value",
              "font-size": "gui-button.fontSize",
              "font-family": "gui-button.fontFamily",
              "font-color": "gui-button.fontColor",
              "border-color": "gui-button.borderColor",
              "focus-color": "gui-button.focusColor",
              "background-color": "gui-button.backgroundColor",
              "hover-color": "gui-button.hoverColor",
              "active-color": "gui-button.activeColor",
              toggle: "gui-button.toggle",
              "toggle-state": "gui-button.toggleState",
            },
          })
      },
      184: () => {
        AFRAME.registerComponent("gui-circle-loader", {
          schema: {
            loaded: { type: "number", default: 0.5 },
            fontSize: { type: "number", default: 0.2 },
            fontFamily: { type: "string", default: "" },
            fontColor: { type: "string", default: key_grey },
            backgroundColor: { type: "string", default: key_offwhite },
            activeColor: { type: "string", default: key_orange },
          },
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item")
            if (((this.guiItem = i), t.fontSize > 20)) {
              var r = t.fontSize / 750
              t.fontSize = r
            }
            e.setAttribute(
              "geometry",
              `primitive: plane; height: ${i.height}; width: ${i.height};`
            ),
              e.setAttribute(
                "material",
                `shader: flat; transparent: true; opacity: 1; side:back; color:${t.backgroundColor};`
              )
            var o = document.createElement("a-entity")
            o.setAttribute(
              "geometry",
              `primitive: cylinder; radius: ${i.height / 2}; height: 0.02;`
            ),
              o.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.backgroundColor}`
              ),
              o.setAttribute("rotation", "90 0 0"),
              o.setAttribute("position", "0 0 0.01"),
              e.appendChild(o)
            var n = document.createElement("a-ring")
            n.setAttribute(
              "material",
              `shader: flat; opacity: 1; side:double; color: ${t.activeColor}`
            ),
              n.setAttribute("radius-inner", "" + i.height / 3),
              n.setAttribute("radius-outer", "" + i.height / 2),
              n.setAttribute("theta-start", "90"),
              n.setAttribute("theta-length", "" + -360 * t.loaded),
              n.setAttribute("rotation", "0 0 0"),
              n.setAttribute("position", "0 0 0.04"),
              (n.id = "loader_ring"),
              e.appendChild(n),
              this.setText(t.loaded)
          },
          play: function () {},
          update: function (t) {
            this.data, this.el
            if (this.textEntity) {
              console.log("has textEntity: " + this.textEntity)
              var e = this.textEntity
              e.parentNode.removeChild(e), this.setText(this.data.loaded)
            } else console.log("no textEntity!")
          },
          setText: function (t) {
            var e = document.createElement("a-entity")
            ;(this.textEntity = e),
              e.setAttribute(
                "troika-text",
                `value: ${Math.round(
                  100 * t
                )}; \n                                                align:center; \n                                                anchor:center; \n                                                baseline:center;\n                                                letterSpacing:0;\n                                                color:${
                  this.data.fontColor
                };\n                                                font:${
                  this.data.fontFamily
                };\n                                                fontSize:${
                  this.data.fontSize
                };\n                                                depthOffset:1;\n                                                maxWidth:${
                  this.guiItem.width / 1.05
                };\n                                                `
              ),
              e.setAttribute("position", "0 0 0.05"),
              this.el.appendChild(e)
          },
        }),
          AFRAME.registerPrimitive("a-gui-circle-loader", {
            defaultComponents: {
              "gui-item": { type: "circle-loader" },
              "gui-circle-loader": {},
            },
            mappings: {
              width: "gui-item.width",
              height: "gui-item.height",
              margin: "gui-item.margin",
              loaded: "gui-circle-loader.loaded",
              "font-size": "gui-circle-loader.fontSize",
              "font-family": "gui-circle-loader.fontFamily",
              "font-color": "gui-circle-loader.fontColor",
              "background-color": "gui-circle-loader.backgroundColor",
              "active-color": "gui-circle-loader.activeColor",
            },
          })
      },
      975: () => {
        AFRAME.registerComponent("gui-circle-timer", {
          schema: {
            countDown: { type: "number", default: 10 },
            fontSize: { type: "number", default: 0.2 },
            fontFamily: { type: "string", default: "" },
            fontColor: { type: "string", default: key_grey },
            borderColor: { type: "string", default: key_grey },
            backgroundColor: { type: "string", default: key_offwhite },
            activeColor: { type: "string", default: key_orange },
          },
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item")
            this.guiItem = i
            var r = e.getAttribute("gui-interactable")
            if (
              (console.log(
                "in timer callback, guiInteractable: " + JSON.stringify(r)
              ),
              t.fontSize > 20)
            ) {
              var o = t.fontSize / 750
              t.fontSize = o
            }
            e.setAttribute(
              "geometry",
              `primitive: plane; height: ${i.height}; width: ${i.height};`
            ),
              e.setAttribute(
                "material",
                `shader: flat; transparent: true; opacity: 1; side:back; color:${t.backgroundColor};`
              )
            var n = document.createElement("a-entity")
            n.setAttribute(
              "geometry",
              `primitive: cylinder; radius: ${i.height / 2}; height: 0.02;`
            ),
              n.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.backgroundColor}`
              ),
              n.setAttribute("rotation", "90 0 0"),
              n.setAttribute("position", "0 0 0.01"),
              e.appendChild(n)
            var a = document.createElement("a-ring")
            a.setAttribute(
              "material",
              `shader: flat; opacity: 1; side:double; color: ${t.borderColor}`
            ),
              a.setAttribute("radius-inner", "" + i.height / 3),
              a.setAttribute("radius-outer", "" + i.height / 2),
              a.setAttribute("theta-start", "-1"),
              a.setAttribute("theta-length", "3"),
              a.setAttribute("position", "0 0 0.04"),
              e.appendChild(a)
            var s = document.createElement("a-ring")
            s.setAttribute(
              "material",
              `shader: flat; opacity: 1; side:double; color: ${t.borderColor}`
            ),
              s.setAttribute("radius-inner", "" + i.height / 3),
              s.setAttribute("radius-outer", "" + i.height / 2),
              s.setAttribute("theta-start", "89"),
              s.setAttribute("theta-length", "3"),
              s.setAttribute("position", "0 0 0.04"),
              e.appendChild(s)
            var l = document.createElement("a-ring")
            l.setAttribute(
              "material",
              `shader: flat; opacity: 1; side:double; color: ${t.borderColor}`
            ),
              l.setAttribute("radius-inner", "" + i.height / 3),
              l.setAttribute("radius-outer", "" + i.height / 2),
              l.setAttribute("theta-start", "179"),
              l.setAttribute("theta-length", "3"),
              l.setAttribute("position", "0 0 0.04"),
              e.appendChild(l)
            var u = document.createElement("a-ring")
            u.setAttribute(
              "material",
              `shader: flat; opacity: 1; side:double; color: ${t.borderColor}`
            ),
              u.setAttribute("radius-inner", "" + i.height / 3),
              u.setAttribute("radius-outer", "" + i.height / 2),
              u.setAttribute("theta-start", "269"),
              u.setAttribute("theta-length", "3"),
              u.setAttribute("position", "0 0 0.04"),
              e.appendChild(u)
            var d = document.createElement("a-ring")
            d.setAttribute(
              "material",
              `shader: flat; opacity: 1; side:double; color: ${t.activeColor}`
            ),
              d.setAttribute("radius-inner", "" + i.height / 3),
              d.setAttribute("radius-outer", "" + i.height / 2),
              d.setAttribute("theta-start", "0"),
              d.setAttribute("theta-length", "0"),
              d.setAttribute("rotation", "0 180 90"),
              d.setAttribute("position", "0 0 0.03"),
              e.appendChild(d),
              (this.timerRing = d)
            this.initCount = t.countDown
            this.setText(t.countDown)
          },
          update: function (t) {
            var e = this.data,
              i = this.el
            if (0 !== Object.keys(t).length && e.countDown !== t.countDown) {
              i.getObject3D("mesh").material.color = e.color
              var r = e.countDown,
                o = this.initCount,
                n = (Math.round((100 * (o - r)) / o) / 100) * 360
              this.timerRing.setAttribute("theta-length", n),
                this.textEntity.setAttribute(
                  "troika-text",
                  `value: ${e.countDown};`
                ),
                1 == r && console.log("fire callback on the last second")
            }
          },
          setText: function (t) {
            var e = document.createElement("a-entity")
            ;(this.textEntity = e),
              e.setAttribute(
                "troika-text",
                `value: ${t}; \n                                                align:center; \n                                                anchor:center; \n                                                baseline:center;\n                                                letterSpacing:0;\n                                                color:${
                  this.data.fontColor
                };\n                                                font:${
                  this.data.fontFamily
                };\n                                                fontSize:${
                  this.data.fontSize
                };\n                                                depthOffset:1;\n                                                maxWidth:${
                  this.guiItem.width / 1.05
                };\n                                                `
              ),
              e.setAttribute("position", "0 0 0.05"),
              this.el.appendChild(e)
          },
          callback: function () {
            var t = this.el.getAttribute("gui-interactable"),
              e = t.clickAction
            console.log(
              "in timer callback, guiInteractable: " + JSON.stringify(t)
            ),
              console.log("in button, clickActionFunctionName: " + e)
            var i = window[e]
            "function" == typeof i && i()
          },
        }),
          AFRAME.registerPrimitive("a-gui-circle-timer", {
            defaultComponents: {
              "gui-item": { type: "circle-timer" },
              "gui-circle-timer": {},
            },
            mappings: {
              width: "gui-item.width",
              height: "gui-item.height",
              margin: "gui-item.margin",
              "count-down": "gui-circle-timer.countDown",
              "font-size": "gui-circle-timer.fontSize",
              "font-family": "gui-circle-timer.fontFamily",
              "font-color": "gui-circle-timer.fontColor",
              "border-color": "gui-circle-timer.borderColor",
              "background-color": "gui-circle-timer.backgroundColor",
              "active-color": "gui-circle-timer.activeColor",
              callback: "gui-interactable.clickAction",
            },
          })
      },
      624: () => {
        AFRAME.registerComponent("gui-cursor", {
          schema: {
            color: { type: "string", default: key_white },
            hoverColor: { type: "string", default: key_white },
            activeColor: { type: "string", default: key_orange },
            distance: { type: "number", default: -1 },
            design: { type: "string", default: "dot" },
          },
          init: function () {
            var t = (this.cursor = this.el.getAttribute("cursor")),
              e = (this.fuse = t.fuse),
              i = t.fuseTimeout,
              r = this.el,
              o = this.data,
              n = 200,
              a = i - n
            if (
              (AFRAME.utils.entity.setComponentProperty(
                r,
                "raycaster.interval",
                "500"
              ),
              console.log("fuse: " + e + ", fuseTimeout: " + i),
              "dot" == o.design)
            )
              r.setAttribute(
                "geometry",
                "primitive: ring; radiusInner:0.000001; radiusOuter:0.025"
              ),
                r.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                r.setAttribute("position", `0 0 ${o.distance}`),
                r.setAttribute(
                  "animation__radiusInnerIn",
                  "property: geometry.radiusInner; from: 0.000001; to:0.0225; dur:200; easing:linear; startEvents: hovergui"
                ),
                r.setAttribute(
                  "animation__radiusOuterIn",
                  "property: geometry.radiusOuter; from: 0.025; to:0.0275; dur:200; easing:linear; startEvents: hovergui"
                ),
                r.setAttribute(
                  "animation__colorIn",
                  `property: material.color; from: ${o.color}; to:${o.hoverColor}; dur:200; easing:linear; startEvents: hovergui`
                ),
                r.setAttribute(
                  "animation__radiusInnerOut",
                  "property: geometry.radiusInner; from: 0.0225; to:0.000001; dur:200; easing:linear; startEvents: leavegui"
                ),
                r.setAttribute(
                  "animation__radiusOuterOut",
                  "property: geometry.radiusOuter; from: 0.0275; to:0.025; dur:200; easing:linear; startEvents: leavegui"
                ),
                r.setAttribute(
                  "animation__colorOut",
                  `property: material.color; from: ${o.hoverColor}; to:${o.color}; dur:200; easing:linear; startEvents: leavegui`
                ),
                r.setAttribute(
                  "animation__scale",
                  "property: scale; from: 1 1 1; to:1.25 1.25 1.25; dur:200; easing:easeInQuad; startEvents: click"
                ),
                (A = document.createElement("a-entity")).setAttribute(
                  "geometry",
                  "primitive: ring; radiusInner:0.0275; radiusOuter:0.03; thetaLength:360"
                ),
                A.setAttribute(
                  "material",
                  "color: #000000; shader: flat; opacity:0.25;"
                ),
                A.setAttribute("position", "0 0 0"),
                A.setAttribute(
                  "animation__radiusInnerIn",
                  "property: geometry.radiusInner; from: 0.0275; to:0.03; dur:200; easing:linear; startEvents: hovergui"
                ),
                A.setAttribute(
                  "animation__radiusOuterIn",
                  "property: geometry.radiusOuter; from: 0.03; to:0.0325; dur:200; easing:linear; startEvents: hovergui"
                ),
                A.setAttribute(
                  "animation__radiusInnerOut",
                  "property: geometry.radiusInner; from: 0.03; to:0.0275; dur:200; easing:linear; startEvents: leavegui"
                ),
                A.setAttribute(
                  "animation__radiusOuterOut",
                  "property: geometry.radiusOuter; from: 0.0325; to:0.03; dur:200; easing:linear; startEvents: leavegui"
                ),
                r.appendChild(A),
                (this.cursorShadow = A),
                e &&
                  ((x = document.createElement("a-entity")).setAttribute(
                    "geometry",
                    "primitive: ring; radiusInner:0.03; radiusOuter:0.0375; thetaLength:0"
                  ),
                  x.setAttribute(
                    "material",
                    `color: ${o.activeColor}; shader: flat; opacity:1;`
                  ),
                  x.setAttribute("position", "0 0 0"),
                  x.setAttribute(
                    "animation",
                    `property: geometry.thetaLength; from: 0; to:360; dur:${a}; delay: 200; easing:linear; autoplay:false;`
                  ),
                  r.appendChild(x),
                  (this.fuseLoader = x))
            else if ("ring" == o.design) {
              if (
                (r.setAttribute(
                  "geometry",
                  "primitive: ring; radiusInner:0.0225; radiusOuter:0.0275"
                ),
                r.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                r.setAttribute("position", `0 0 ${o.distance}`),
                r.setAttribute(
                  "animation__radiusInnerIn",
                  "property: geometry.radiusInner; from: 0.0225; to:0.025; dur:200; easing:linear; startEvents: hovergui"
                ),
                r.setAttribute(
                  "animation__radiusOuterIn",
                  "property: geometry.radiusOuter; from: 0.0275; to:0.0325; dur:200; easing:linear; startEvents: hovergui"
                ),
                r.setAttribute(
                  "animation__colorIn",
                  `property: material.color; from: ${o.color}; to:${o.hoverColor}; dur:200; easing:linear; startEvents: hovergui`
                ),
                r.setAttribute(
                  "animation__radiusInnerOut",
                  "property: geometry.radiusInner; from: 0.025; to:0.0225; dur:200; easing:linear; startEvents: leavegui"
                ),
                r.setAttribute(
                  "animation__radiusOuterOut",
                  "property: geometry.radiusOuter; from: 0.0325; to:0.0275; dur:200; easing:linear; startEvents: leavegui"
                ),
                r.setAttribute(
                  "animation__colorOut",
                  `property: material.color; from: ${o.hoverColor}; to:${o.color}; dur:200; easing:linear; startEvents: leavegui`
                ),
                r.setAttribute(
                  "animation__scale",
                  "property: scale; from: 1 1 1; to:1.25 1.25 1.25; dur:200; easing:easeInQuad; startEvents: click"
                ),
                (A = document.createElement("a-entity")).setAttribute(
                  "geometry",
                  "primitive: ring; radiusInner:0.03; radiusOuter:0.0325; thetaLength:360"
                ),
                A.setAttribute(
                  "material",
                  "color: #000000; shader: flat; opacity:0.25;"
                ),
                A.setAttribute("position", "0 0 0"),
                A.setAttribute(
                  "animation__radiusInnerIn",
                  "property: geometry.radiusInner; from: 0.03; to:0.0325; dur:200; easing:linear; startEvents: hovergui"
                ),
                A.setAttribute(
                  "animation__radiusOuterIn",
                  "property: geometry.radiusOuter; from: 0.0325; to:0.0375; dur:200; easing:linear; startEvents: hovergui"
                ),
                A.setAttribute(
                  "animation__radiusInnerOut",
                  "property: geometry.radiusInner; from: 0.0325; to:0.03; dur:200; easing:linear; startEvents: leavegui"
                ),
                A.setAttribute(
                  "animation__radiusOuterOut",
                  "property: geometry.radiusOuter; from: 0.0375; to:0.0325; dur:200; easing:linear; startEvents: leavegui"
                ),
                r.appendChild(A),
                (this.cursorShadow = A),
                e)
              )
                (x = document.createElement("a-entity")).setAttribute(
                  "geometry",
                  "primitive: ring; radiusInner:0.035; radiusOuter:0.0425; thetaLength:0"
                ),
                  x.setAttribute(
                    "material",
                    `color: ${o.activeColor}; shader: flat; opacity:1;`
                  ),
                  x.setAttribute("position", "0 0 0"),
                  x.setAttribute(
                    "animation",
                    `property: geometry.thetaLength; from: 0; to:360; dur:${a}; delay: 200; easing:linear; autoplay:false;`
                  ),
                  r.appendChild(x),
                  (this.fuseLoader = x)
            } else if ("reticle" == o.design) {
              r.setAttribute(
                "geometry",
                "primitive: ring; radiusInner:0.000001; radiusOuter:0.0125; thetaLength:180;"
              ),
                r.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                r.setAttribute("position", `0 0 ${o.distance}`),
                r.setAttribute(
                  "animation__opacityIn",
                  "property: material.opacity; from: 1; to: 0; dur:200; easing:linear; startEvents: hovergui"
                ),
                r.setAttribute(
                  "animation__opacityOut",
                  "property: material.opacity; from: 0; to: 1; dur:200; easing:linear; startEvents: leavegui"
                )
              var s = document.createElement("a-entity")
              s.setAttribute(
                "geometry",
                "primitive: ring; radiusInner:0.000001; radiusOuter:0.0125; thetaLength:180; thetaStart:180;"
              ),
                s.setAttribute(
                  "material",
                  "color: #000000; shader: flat; opacity:0.25;"
                ),
                s.setAttribute("position", "0 0 0"),
                s.setAttribute(
                  "animation__opacityIn",
                  "property: material.opacity; from: 0.25; to: 0; dur:200; easing:linear; startEvents: hovergui"
                ),
                s.setAttribute(
                  "animation__opacityOut",
                  "property: material.opacity; from: 0; to: 0.25; dur:200; easing:linear; startEvents: leavegui"
                ),
                r.appendChild(s),
                (this.cursorCenter = s),
                (A = document.createElement("a-entity")).setAttribute(
                  "geometry",
                  "primitive: ring; radiusInner:0.0125; radiusOuter:0.0145"
                ),
                A.setAttribute(
                  "material",
                  "color: #000000; shader: flat; opacity:0.25;"
                ),
                A.setAttribute("position", "0 0 0"),
                A.setAttribute(
                  "animation__colorIn",
                  `property: material.color; from: #000000; to: ${o.color}; dur:200; easing:linear; startEvents: hovergui`
                ),
                A.setAttribute(
                  "animation__opacityIn",
                  "property: material.opacity; from: 0.25; to: 1; dur:200; easing:linear; startEvents: hovergui"
                ),
                A.setAttribute(
                  "animation__colorOut",
                  `property: material.color; from: ${o.color}; to: #000000; dur:200; easing:linear; startEvents: leavegui`
                ),
                A.setAttribute(
                  "animation__opacityOut",
                  "property: material.opacity; from: 1; to: 0.25; dur:200; easing:linear; startEvents: leavegui"
                ),
                r.appendChild(A),
                (this.cursorShadow = A)
              var l = document.createElement("a-entity")
              l.setAttribute(
                "geometry",
                "primitive: plane; width:0.005; height:0.005;"
              ),
                l.setAttribute(
                  "material",
                  "color: #000000; shader: flat; opacity:0.25;"
                ),
                l.setAttribute("position", "-0.0325 0.0325 0"),
                r.appendChild(l),
                (this.cursorShadowTL = l)
              var u = document.createElement("a-entity")
              u.setAttribute(
                "geometry",
                "primitive: plane; width:0.005; height:0.005;"
              ),
                u.setAttribute(
                  "material",
                  "color: #000000; shader: flat; opacity:0.25;"
                ),
                u.setAttribute("position", "-0.0325 -0.0325 0"),
                r.appendChild(u),
                (this.cursorShadowBL = u)
              var d = document.createElement("a-entity")
              d.setAttribute(
                "geometry",
                "primitive: plane; width:0.005; height:0.005;"
              ),
                d.setAttribute(
                  "material",
                  "color: #000000; shader: flat; opacity:0.25;"
                ),
                d.setAttribute("position", "0.0325 0.0325 0"),
                r.appendChild(d),
                (this.cursorShadowTR = d)
              var c = document.createElement("a-entity")
              c.setAttribute(
                "geometry",
                "primitive: plane; width:0.005; height:0.005;"
              ),
                c.setAttribute(
                  "material",
                  "color: #000000; shader: flat; opacity:0.25;"
                ),
                c.setAttribute("position", "0.0325 -0.0325 0"),
                r.appendChild(c),
                (this.cursorShadowBR = c)
              var h = document.createElement("a-entity")
              h.setAttribute(
                "geometry",
                "primitive: plane; width:0.015; height:0.0035;"
              ),
                h.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                h.setAttribute("position", "-0.03 0.0375 0"),
                r.appendChild(h),
                (this.cursorBoundTL = h)
              var f = document.createElement("a-entity")
              f.setAttribute(
                "geometry",
                "primitive: plane; width:0.0035; height:0.015;"
              ),
                f.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                f.setAttribute("position", "-0.0375 0.03 0"),
                r.appendChild(f),
                (this.cursorBoundTL2 = f)
              var g = document.createElement("a-entity")
              g.setAttribute(
                "geometry",
                "primitive: plane; width:0.015; height:0.0035;"
              ),
                g.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                g.setAttribute("position", "0.03 0.0375 0"),
                r.appendChild(g),
                (this.cursorBoundTR = g)
              var p = document.createElement("a-entity")
              p.setAttribute(
                "geometry",
                "primitive: plane; width:0.0035; height:0.015;"
              ),
                p.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                p.setAttribute("position", "0.0375 0.03 0"),
                r.appendChild(p),
                (this.cursorBoundTR2 = p)
              var m = document.createElement("a-entity")
              m.setAttribute(
                "geometry",
                "primitive: plane; width:0.015; height:0.0035;"
              ),
                m.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                m.setAttribute("position", "-0.03 -0.0375 0"),
                r.appendChild(m),
                (this.cursorBoundBL = m)
              var v = document.createElement("a-entity")
              v.setAttribute(
                "geometry",
                "primitive: plane; width:0.0035; height:0.015;"
              ),
                v.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                v.setAttribute("position", "-0.0375 -0.03 0"),
                r.appendChild(v),
                (this.cursorBoundBL2 = v)
              var b = document.createElement("a-entity")
              b.setAttribute(
                "geometry",
                "primitive: plane; width:0.015; height:0.0035;"
              ),
                b.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                b.setAttribute("position", "0.03 -0.0375 0"),
                r.appendChild(b),
                (this.cursorBoundBR = b)
              var y = document.createElement("a-entity")
              if (
                (y.setAttribute(
                  "geometry",
                  "primitive: plane; width:0.0035; height:0.015;"
                ),
                y.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                y.setAttribute("position", "0.0375 -0.03 0"),
                r.appendChild(y),
                (this.cursorBoundBR2 = y),
                e)
              )
                (x = document.createElement("a-entity")).setAttribute(
                  "geometry",
                  "primitive: plane; width:0.000001; height:0.01;"
                ),
                  x.setAttribute(
                    "material",
                    `color: ${o.activeColor}; shader: flat; opacity:1;`
                  ),
                  x.setAttribute("position", "0 -0.05 0"),
                  x.setAttribute(
                    "animation",
                    `property: geometry.width; from: 0; to: 0.075; dur:${a}; delay:200; easing:linear; autoplay:false;`
                  ),
                  r.appendChild(x),
                  (this.fuseLoader = x)
            } else if ("cross" == o.design) {
              var A
              r.setAttribute(
                "geometry",
                "primitive: ring; radiusInner:0.035; radiusOuter:0.0375"
              ),
                r.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                r.setAttribute("position", `0 0 ${o.distance}`),
                r.setAttribute(
                  "animation__radiusInnerIn",
                  "property: geometry.radiusInner; from: 0.035; to: 0.0315; dur:200; easing:linear; startEvents: hovergui"
                ),
                r.setAttribute(
                  "animation__radiusInnerOut",
                  "property: geometry.radiusInner; from: 0.0315; to: 0.035; dur:200; easing:linear; startEvents: leavegui"
                ),
                (A = document.createElement("a-entity")).setAttribute(
                  "geometry",
                  "primitive: ring; radiusInner:0.0375; radiusOuter:0.04; thetaLength:360"
                ),
                A.setAttribute(
                  "material",
                  "color: #000000; shader: flat; opacity:0.25;"
                ),
                A.setAttribute("position", "0 0 0"),
                r.appendChild(A),
                (this.cursorShadow = A)
              var w = document.createElement("a-entity")
              w.setAttribute(
                "geometry",
                "primitive: plane; width:0.0035; height:0.01875"
              ),
                w.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                w.setAttribute("position", "0 0.028125 0"),
                w.setAttribute(
                  "animation__widthIn",
                  `property: geometry.width; from: 0.0035; to: 0.007; dur:${a}; easing:linear; startEvents: hovergui`
                ),
                w.setAttribute(
                  "animation__widthOut",
                  `property: geometry.width; from: 0.007; to: 0.0035; dur:${a}; easing:linear; startEvents: leavegui`
                ),
                r.appendChild(w),
                (this.cursorVerticalTop = w)
              var k = document.createElement("a-entity")
              k.setAttribute(
                "geometry",
                "primitive: plane; width:0.0035; height:0.01875"
              ),
                k.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                k.setAttribute("position", "0 -0.028125 0"),
                k.setAttribute(
                  "animation__widthIn",
                  `property: geometry.width; from: 0.0035; to: 0.007; dur:${a}; easing:linear; startEvents: hovergui`
                ),
                k.setAttribute(
                  "animation__widthOut",
                  `property: geometry.width; from: 0.007; to: 0.0035; dur:${a}; easing:linear; startEvents: leavegui`
                ),
                r.appendChild(k),
                (this.cursorVerticalBottom = k)
              var C = document.createElement("a-entity")
              C.setAttribute(
                "geometry",
                "primitive: plane; width:0.01875; height:0.0035"
              ),
                C.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                C.setAttribute("position", "-0.028125 0 0"),
                C.setAttribute(
                  "animation__heightIn",
                  `property: geometry.height; from: 0.0035; to: 0.007; dur:${a}; easing:linear; startEvents: hovergui`
                ),
                C.setAttribute(
                  "animation__heightOut",
                  `property: geometry.height; from: 0.007; to: 0.0035; dur:${a}; easing:linear; startEvents: leavegui`
                ),
                r.appendChild(C),
                (this.cursorHorizontalLeft = C)
              var x,
                S = document.createElement("a-entity")
              if (
                (S.setAttribute(
                  "geometry",
                  "primitive: plane; width:0.01875; height:0.0035"
                ),
                S.setAttribute(
                  "material",
                  `color: ${o.color}; shader: flat; opacity:1;`
                ),
                S.setAttribute("position", "0.028125 0 0"),
                S.setAttribute(
                  "animation__heightIn",
                  `property: geometry.height; from: 0.0035; to: 0.007; dur:${a}; easing:linear; startEvents: hovergui`
                ),
                S.setAttribute(
                  "animation__heightOut",
                  `property: geometry.height; from: 0.007; to: 0.0035; dur:${a}; easing:linear; startEvents: leavegui`
                ),
                r.appendChild(S),
                (this.cursorHorizontalRight = S),
                e)
              )
                (x = document.createElement("a-entity")).setAttribute(
                  "geometry",
                  "primitive: ring; radiusInner:0.0415; radiusOuter:0.0485; thetaLength:0"
                ),
                  x.setAttribute(
                    "material",
                    `color: ${o.activeColor}; shader: flat; opacity:1;`
                  ),
                  x.setAttribute("position", "0 0 0"),
                  x.setAttribute(
                    "animation",
                    `property: geometry.thetaLength; from: 0; to: 360; dur:${a}; delay:200; easing:linear; autoplay:false;`
                  ),
                  r.appendChild(x),
                  (this.fuseLoader = x)
            }
            r.addEventListener("mouseenter", function () {
              console.log("in gui-cursor mousenter, el: " + r),
                r.emit("hovergui"),
                "dot" == o.design || "ring" == o.design
                  ? A.emit("hovergui")
                  : "cross" == o.design
                  ? (A.emit("hovergui"),
                    w.emit("hovergui"),
                    k.emit("hovergui"),
                    C.emit("hovergui"),
                    S.emit("hovergui"))
                  : "reticle" == o.design &&
                    (centerHoverAniOpacity.emit("hovergui"),
                    cursorHoverAniColor.emit("hovergui"),
                    cursorHoverAniOpacity.emit("hovergui"))
            }),
              r.addEventListener("mouseleave", function () {
                console.log("in gui-cursor mouseleave, el: " + r),
                  r.emit("leavegui"),
                  "dot" == o.design || "ring" == o.design
                    ? A.emit("leavegui")
                    : "cross" == o.design
                    ? (w.emit("leavegui"),
                      k.emit("leavegui"),
                      C.emit("leavegui"),
                      S.emit("leavegui"))
                    : "reticle" == o.design &&
                      (centerHoverAniOpacity.emit("leavegui"),
                      cursorHoverAniColor.emit("leavegui"),
                      cursorHoverAniOpacity.emit("leavegui")),
                  e &&
                    (x.object3D.el.components.animation.animation.pause(),
                    x.object3D.el.components.animation.animation.seek(0)),
                  r.setAttribute("scale", "1 1 1")
              }),
              e &&
                r.addEventListener("fusing", function () {
                  x.object3D.el.components.animation.animation.play()
                }),
              r.addEventListener("stateremoved", function (t) {
                console.log("evt.detail " + t.detail),
                  "cursor-fusing" === t.detail.state ||
                  "cursor-fusing" === t.detail
                    ? "dot" == o.design ||
                      "ring" == o.design ||
                      "cross" == o.design
                      ? e &&
                        (x.object3D.el.components.animation.animation.pause(),
                        x.object3D.el.components.animation.animation.seek(0),
                        AFRAME.utils.entity.setComponentProperty(
                          x,
                          "geometry.thetaLength",
                          "0"
                        ))
                      : "reticle" == o.design &&
                        e &&
                        (x.object3D.el.components.animation.animation.pause(),
                        x.object3D.el.components.animation.animation.seek(0),
                        AFRAME.utils.entity.setComponentProperty(
                          x,
                          "geometry.width",
                          "0.000001"
                        ))
                    : ("cursor-hovering" !== t.detail.state &&
                        "cursor-hovering" !== t.detail) ||
                      ("dot" == o.design || "ring" == o.design
                        ? (AFRAME.utils.entity.setComponentProperty(
                            this,
                            "scale",
                            "1 1 1"
                          ),
                          e &&
                            AFRAME.utils.entity.setComponentProperty(
                              x,
                              "geometry.thetaLength",
                              "0"
                            ))
                        : "cross" == o.design
                        ? e &&
                          AFRAME.utils.entity.setComponentProperty(
                            x,
                            "geometry.thetaLength",
                            "0"
                          )
                        : "reticle" == o.design &&
                          e &&
                          AFRAME.utils.entity.setComponentProperty(
                            x,
                            "geometry.width",
                            "0.000001"
                          ))
              })
          },
          update: function () {},
          tick: function () {},
          remove: function () {},
          pause: function () {},
          play: function () {},
        }),
          AFRAME.registerPrimitive("a-gui-cursor", {
            defaultComponents: { cursor: {}, "gui-cursor": {} },
            mappings: {
              fuse: "cursor.fuse",
              "fuse-timeout": "cursor.fuseTimeout",
              color: "gui-cursor.color",
              "hover-color": "gui-cursor.hoverColor",
              "active-color": "gui-cursor.activeColor",
              distance: "gui-cursor.distance",
              design: "gui-cursor.design",
            },
          })
      },
      72: () => {
        AFRAME.registerComponent("gui-flex-container", {
          schema: {
            flexDirection: { type: "string", default: "row" },
            justifyContent: { type: "string", default: "flexStart" },
            alignItems: { type: "string", default: "flexStart" },
            itemPadding: { type: "number", default: 0 },
            opacity: { type: "number", default: 0 },
            isTopContainer: { type: "boolean", default: !1 },
            panelColor: { type: "string", default: key_grey },
            panelRounded: { type: "number", default: 0.05 },
            styles: {
              fontFamily: { type: "string", default: "Helvetica" },
              fontColor: { type: "string", default: key_offwhite },
              borderColor: { type: "string", default: key_offwhite },
              backgroundColor: { type: "string", default: key_grey },
              hoverColor: { type: "string", default: key_grey_dark },
              activeColor: { type: "string", default: key_orange },
              handleColor: { type: "string", default: key_offwhite },
            },
          },
          init: function () {
            console.log(
              "in aframe-gui-component init for: " + this.el.getAttribute("id")
            )
            var t = this.el.getAttribute("gui-item")
            this.data.isTopContainer
              ? this.setBackground()
              : this.el.setAttribute(
                  "rounded",
                  `height: ${t.height}; width: ${t.width}; opacity: ${this.data.opacity}; color: ${this.data.panelColor}; radius:${this.data.panelRounded}; depthWrite:false; polygonOffset:true; polygonOffsetFactor: 1;`
                ),
              (this.children = this.el.getChildEntities())
            var e = 0,
              i = 0
            if ("row" == this.data.flexDirection) {
              if ("flexStart" == this.data.justifyContent) e = 0
              else if (
                "center" == this.data.justifyContent ||
                "flexEnd" == this.data.justifyContent
              ) {
                for (var r = 0, o = 0; o < this.children.length; o++) {
                  r =
                    r +
                    (u = (l = this.children[o]).getAttribute("gui-item")).margin
                      .w +
                    u.width +
                    u.margin.y
                }
                "center" == this.data.justifyContent
                  ? (e = 0.5 * (t.width - r))
                  : "flexEnd" == this.data.justifyContent && (e = t.width - r)
              }
              "center" == this.data.alignItems
                ? (i = t.height)
                : "flexStart" == this.data.alignItems
                ? (i = 0)
                : "flexEnd" == this.data.alignItems && (i = t.height)
            } else if ("column" == this.data.flexDirection) {
              if ("flexStart" == this.data.justifyContent) i = 0
              else if (
                "center" == this.data.justifyContent ||
                "flexEnd" == this.data.justifyContent
              ) {
                var n = 0
                for (o = 0; o < this.children.length; o++) {
                  n =
                    n +
                    (u = (l = this.children[o]).getAttribute("gui-item")).margin
                      .x +
                    u.height +
                    u.margin.z
                }
                "center" == this.data.justifyContent
                  ? (i = 0.5 * (t.height - n))
                  : "flexEnd" == this.data.justifyContent && (i = t.height - n)
              }
              "flexStart" == this.data.alignItems
                ? (e = 0)
                : "center" == this.data.alignItems
                ? (e = 0.5 * t.width)
                : "flexEnd" == this.data.alignItems && (e = 0)
            }
            var a, s
            for (o = 0; o < this.children.length; o++) {
              var l,
                u,
                d = 0,
                c = 0
              if ((u = (l = this.children[o]).getAttribute("gui-item"))) {
                "row" == this.data.flexDirection
                  ? ("center" == this.data.alignItems
                      ? (c = 0)
                      : "flexStart" == this.data.alignItems
                      ? (c = 0.5 * t.height - u.margin.x - u.height)
                      : "flexEnd" == this.data.alignItems &&
                        (c = 0.5 * -t.height + u.margin.z + u.height),
                    (d = 0.5 * -t.width + e + u.margin.w + 0.5 * u.width),
                    (e = e + u.margin.w + u.width + u.margin.y))
                  : "column" == this.data.flexDirection &&
                    ("center" == this.data.alignItems
                      ? (d = 0)
                      : "flexStart" == this.data.alignItems
                      ? (d = 0.5 * -t.width + u.margin.w + 0.5 * u.width)
                      : "flexEnd" == this.data.alignItems &&
                        (d = 0.5 * t.width - u.margin.y - 0.5 * u.width),
                    (c = 0.5 * t.height - i - -u.margin.x - 0.5 * u.height),
                    (i = i + u.margin.x + u.height + u.margin.z)),
                  l.setAttribute("position", `${d} ${c} 0.01`),
                  l.setAttribute(
                    "geometry",
                    `primitive: plane; height: ${u.height}; width: ${u.width};`
                  )
                var h = l.components["gui-flex-container"]
                h && h.setBackground()
              }
            }
            ;(a = this.el),
              (s = function (t, e) {
                e[0],
                  e[0].addEventListener("loaded", (e) => {
                    t.components["gui-flex-container"].init()
                  })
              }),
              new MutationObserver(function (t, e) {
                t.forEach(function (t) {
                  console.log(t),
                    t.addedNodes.length && s(t.target, t.addedNodes)
                })
              }).observe(a, { childList: !0 })
          },
          update: function () {},
          tick: function () {},
          remove: function () {},
          pause: function () {},
          play: function () {},
          getElementSize: function () {},
          setBackground: function () {
            if (this.data.opacity > 0) {
              console.log(
                "panel position: " +
                  JSON.stringify(this.el.getAttribute("position"))
              )
              var t = this.el.getAttribute("gui-item"),
                e = document.createElement("a-entity")
              e.setAttribute(
                "rounded",
                `height: ${t.height}; width: ${t.width}; opacity: ${this.data.opacity}; color: ${this.data.panelColor}; radius:${this.data.panelRounded}; depthWrite:false; polygonOffset:true; polygonOffsetFactor: 2;`
              ),
                console.log(
                  "about to set panel background color to: : " +
                    this.data.panelColor
                ),
                e.setAttribute(
                  "position",
                  this.el.getAttribute("position").x +
                    " " +
                    this.el.getAttribute("position").y +
                    " " +
                    (this.el.getAttribute("position").z - 0.0125)
                ),
                e.setAttribute(
                  "rotation",
                  this.el.getAttribute("rotation").x +
                    " " +
                    this.el.getAttribute("rotation").y +
                    " " +
                    this.el.getAttribute("rotation").z
                ),
                this.el.parentNode.insertBefore(e, this.el)
            }
          },
        }),
          AFRAME.registerPrimitive("a-gui-flex-container", {
            defaultComponents: {
              "gui-item": { type: "flex-container" },
              "gui-flex-container": {},
            },
            mappings: {
              width: "gui-item.width",
              height: "gui-item.height",
              margin: "gui-item.margin",
              "flex-direction": "gui-flex-container.flexDirection",
              "justify-content": "gui-flex-container.justifyContent",
              "align-items": "gui-flex-container.alignItems",
              "item-padding": "gui-flex-container.itemPadding",
              opacity: "gui-flex-container.opacity",
              "is-top-container": "gui-flex-container.isTopContainer",
              "panel-color": "gui-flex-container.panelColor",
              "panel-rounded": "gui-flex-container.panelRounded",
              "font-family": "gui-flex-container.styles.fontFamily",
              "font-color": "gui-flex-container.styles.fontColor",
              "border-color": "gui-flex-container.styles.borderColor",
              "background-color": "gui-flex-container.styles.backgroundColor",
              "hover-color": "gui-flex-container.styles.hoverColor",
              "active-color": "gui-flex-container.styles.activeColor",
              "handle-color": "gui-flex-container.styles.handleColor",
            },
          })
      },
      537: () => {
        AFRAME.registerComponent("gui-icon-button", {
          schema: {
            on: { default: "click" },
            toggle: { type: "boolean", default: !1 },
            toggleState: { type: "boolean", default: !1 },
            icon: { type: "string", default: "f0f3" },
            iconActive: { type: "string", default: "" },
            iconFontSize: { type: "number", default: 0.4 },
            iconFont: {
              type: "string",
              default: "assets/fonts/fa-regular-400.ttf",
            },
            fontColor: { type: "string", default: key_offwhite },
            borderColor: { type: "string", default: key_offwhite },
            backgroundColor: { type: "string", default: key_grey },
            hoverColor: { type: "string", default: key_grey_dark },
            activeColor: { type: "string", default: key_orange },
          },
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item")
            this.guiItem = i
            this.toggleState = t.toggle
            var r = e.getAttribute("gui-interactable")
            if (((this.guiInteractable = r), t.iconFontSize > 20)) {
              var o = t.iconFontSize / 750
              t.iconFontSize = o
            }
            e.setAttribute(
              "geometry",
              `primitive: plane; height: ${i.height}; width: ${i.width};`
            ),
              e.setAttribute(
                "material",
                `shader: flat; transparent: true; opacity: 0.0; alphaTest: 0.5; side:double; color:${t.backgroundColor};`
              )
            var n = document.createElement("a-entity")
            n.setAttribute(
              "geometry",
              `primitive: cylinder; radius: ${i.height / 2}; height: 0.02;`
            ),
              n.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.borderColor}`
              ),
              n.setAttribute("rotation", "90 0 0"),
              n.setAttribute("position", "0 0 0.01"),
              e.appendChild(n)
            var a = document.createElement("a-entity")
            a.setAttribute(
              "geometry",
              `primitive: cylinder; radius: ${i.height / 2.05}; height: 0.04;`
            ),
              a.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.backgroundColor}`
              ),
              a.setAttribute("rotation", "90 0 0"),
              a.setAttribute("position", "0 0 0.02"),
              e.appendChild(a),
              (this.buttonEntity = a),
              this.setIcon(t.icon),
              e.addEventListener("mouseenter", function (e) {
                a.removeAttribute("animation__leave"),
                  t.toggle ||
                    a.setAttribute(
                      "animation__enter",
                      `property: material.color; from: ${t.backgroundColor}; to:${t.hoverColor}; dur:200;`
                    )
              }),
              e.addEventListener("mouseleave", function (e) {
                t.toggle ||
                  (a.removeAttribute("animation__click"),
                  a.setAttribute(
                    "animation__leave",
                    `property: material.color; from: ${t.hoverColor}; to:${t.backgroundColor}; dur:200; easing: easeOutQuad;`
                  )),
                  a.removeAttribute("animation__enter")
              }),
              e.addEventListener(t.on, function (i) {
                if (t.toggle) {
                  var o = e.components["gui-button"]
                  o.setActiveState(!o.data.toggleState)
                } else a.setAttribute("animation__click", `property: material.color; from: ${t.activeColor}; to:${t.backgroundColor}; dur:400; easing: easeOutQuad;`)
                var n = r.clickAction,
                  s = window[n]
                "function" == typeof s && s(i)
              }),
              e.setAttribute("role", "button")
          },
          play: function () {},
          update: function (t) {
            console.log("In button update, toggle: " + this.toggleState)
            this.data, this.el
            if (this.iconEntity) {
              console.log("has iconEntity: " + this.iconEntity)
              var e = this.iconEntity
              e.parentNode.removeChild(e), this.setIcon(this.data.icon)
            } else console.log("no iconEntity!")
          },
          setActiveState: function (t) {
            ;(this.data.toggleState = t),
              t
                ? (console.log("active, about to set active color"),
                  this.buttonEntity.setAttribute(
                    "material",
                    "color",
                    this.data.activeColor
                  ))
                : (console.log("not active, about to set background color"),
                  this.buttonEntity.setAttribute(
                    "material",
                    "color",
                    this.data.backgroundColor
                  ))
          },
          setIcon: function (t) {
            var e = parseInt(t, 16),
              i = String.fromCharCode(e),
              r = document.createElement("a-entity")
            ;(this.iconEntity = r),
              r.setAttribute(
                "troika-text",
                `value:${i}; \n                                                align:center; \n                                                anchor:center; \n                                                baseline:center;\n                                                lineHeight:${this.guiItem.height};\n                                                maxWidth:${this.guiItem.width};\n                                                color:${this.data.fontColor};\n                                                font:${this.data.iconFont};\n                                                fontSize:${this.data.iconFontSize};\n                                                depthOffset:1;\n                                                `
              ),
              r.setAttribute("position", "0 0 0.05"),
              this.el.appendChild(r)
          },
        }),
          AFRAME.registerPrimitive("a-gui-icon-button", {
            defaultComponents: {
              "gui-interactable": {},
              "gui-item": { type: "icon-button" },
              "gui-icon-button": {},
            },
            mappings: {
              onclick: "gui-interactable.clickAction",
              onhover: "gui-interactable.hoverAction",
              "key-code": "gui-interactable.keyCode",
              width: "gui-item.width",
              height: "gui-item.height",
              margin: "gui-item.margin",
              on: "gui-icon-button.on",
              "font-color": "gui-icon-button.fontColor",
              "font-family": "gui-icon-button.fontFamily",
              "border-color": "gui-icon-button.borderColor",
              "background-color": "gui-icon-button.backgroundColor",
              "hover-color": "gui-icon-button.hoverColor",
              "active-color": "gui-icon-button.activeColor",
              icon: "gui-icon-button.icon",
              "icon-active": "gui-icon-button.iconActive",
              "icon-font": "gui-icon-button.iconFont",
              "icon-font-size": "gui-icon-button.iconFontSize",
              toggle: "gui-icon-button.toggle",
              "toggle-state": "gui-icon-button.toggleState",
            },
          })
      },
      54: () => {
        AFRAME.registerComponent("gui-icon-label-button", {
          schema: {
            on: { default: "click" },
            toggle: { type: "boolean", default: !1 },
            toggleState: { type: "boolean", default: !1 },
            icon: { type: "string", default: "f0f3" },
            iconActive: { type: "string", default: "" },
            iconFontSize: { type: "number", default: 0.35 },
            iconFont: {
              type: "string",
              default: "assets/fonts/fa-regular-400.ttf",
            },
            value: { type: "string", default: "" },
            fontSize: { type: "number", default: 0.2 },
            fontFamily: { type: "string", default: "" },
            fontColor: { type: "string", default: key_offwhite },
            borderColor: { type: "string", default: key_offwhite },
            backgroundColor: { type: "string", default: key_grey },
            hoverColor: { type: "string", default: key_grey_dark },
            activeColor: { type: "string", default: key_orange },
          },
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item")
            this.guiItem = i
            this.toggleState = t.toggle
            var r = e.getAttribute("gui-interactable")
            if (((this.guiInteractable = r), t.iconFontSize > 20)) {
              var o = t.iconFontSize / 750
              t.iconFontSize = o
            }
            if (t.fontSize > 20) {
              o = t.fontSize / 750
              t.fontSize = o
            }
            e.setAttribute(
              "geometry",
              `primitive: plane; height: ${i.height}; width: ${i.width};`
            ),
              e.setAttribute(
                "material",
                `shader: flat; side:front; color:${t.backgroundColor};`
              )
            var n = document.createElement("a-entity")
            n.setAttribute(
              "geometry",
              `primitive: box; width: ${i.width}; height: ${i.height}; depth: 0.02;`
            ),
              n.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.borderColor}`
              ),
              n.setAttribute("rotation", "0 0 0"),
              n.setAttribute("position", "0 0 0.01"),
              e.appendChild(n)
            var a = document.createElement("a-entity")
            a.setAttribute(
              "geometry",
              `primitive: box; width: ${i.width - 0.025}; height: ${
                i.height - 0.025
              }; depth: 0.04;`
            ),
              a.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${
                  t.toggleState ? t.activeColor : t.backgroundColor
                }`
              ),
              a.setAttribute("rotation", "0 0 0"),
              a.setAttribute("position", "0 0 0.02"),
              e.appendChild(a),
              (this.buttonEntity = a),
              this.setIcon(t.icon),
              "" != t.value && this.setText(t.value),
              e.addEventListener("mouseenter", function (e) {
                a.removeAttribute("animation__leave"),
                  t.toggle ||
                    a.setAttribute(
                      "animation__enter",
                      `property: material.color; from: ${t.backgroundColor}; to:${t.hoverColor}; dur:200;`
                    )
              }),
              e.addEventListener("mouseleave", function (e) {
                t.toggle ||
                  (a.removeAttribute("animation__click"),
                  a.setAttribute(
                    "animation__leave",
                    `property: material.color; from: ${t.hoverColor}; to:${t.backgroundColor}; dur:200; easing: easeOutQuad;`
                  )),
                  a.removeAttribute("animation__enter")
              }),
              e.addEventListener(t.on, function (i) {
                if (t.toggle) {
                  var o = e.components["gui-button"]
                  o.setActiveState(!o.data.toggleState)
                } else a.setAttribute("animation__click", `property: material.color; from: ${t.activeColor}; to:${t.backgroundColor}; dur:400; easing: easeOutQuad;`)
                var n = r.clickAction,
                  s = window[n]
                "function" == typeof s && s(i)
              }),
              e.setAttribute("role", "button")
          },
          play: function () {},
          update: function (t) {
            console.log("In button update, toggle: " + this.toggleState)
            var e
            this.data, this.el
            this.iconEntity
              ? (console.log("has iconEntity: " + this.iconEntity),
                (e = this.iconEntity).parentNode.removeChild(e),
                this.setIcon(this.data.icon))
              : console.log("no iconEntity!")
            this.textEntity
              ? (console.log("has textEntity: " + this.textEntity),
                (e = this.textEntity).parentNode.removeChild(e),
                this.setText(this.data.value))
              : console.log("no textEntity!")
          },
          setActiveState: function (t) {
            ;(this.data.toggleState = t),
              t
                ? (console.log("active, about to set active color"),
                  this.buttonEntity.setAttribute(
                    "material",
                    "color",
                    this.data.activeColor
                  ))
                : (console.log("not active, about to set background color"),
                  this.buttonEntity.setAttribute(
                    "material",
                    "color",
                    this.data.backgroundColor
                  ))
          },
          setIcon: function (t) {
            var e = parseInt(t, 16),
              i = String.fromCharCode(e),
              r = document.createElement("a-entity"),
              o = 0
            "" != this.data.value &&
              (o = 0.5 * -this.guiItem.width + 0.5 * this.guiItem.height),
              (this.iconEntity = r),
              r.setAttribute(
                "troika-text",
                `value:${i}; \n                                                align:center; \n                                                anchor:center; \n                                                baseline:center;\n                                                color:${this.data.fontColor};\n                                                font:${this.data.iconFont};\n                                                fontSize:${this.data.iconFontSize};\n                                                depthOffset:1;\n                                                `
              ),
              r.setAttribute("position", `${o} 0 0.05`),
              this.el.appendChild(r)
          },
          setText: function (t) {
            var e = this.guiItem.height - 0.5 * this.guiItem.width,
              i = document.createElement("a-entity")
            ;(this.textEntity = i),
              i.setAttribute(
                "troika-text",
                `value: ${t}; \n                                                align:left; \n                                                anchor:left; \n                                                baseline:center;\n                                                letterSpacing:0;\n                                                color:${
                  this.data.fontColor
                };\n                                                font:${
                  this.data.fontFamily
                };\n                                                fontSize:${
                  this.data.fontSize
                };\n                                                depthOffset:1;\n                                                maxWidth:${
                  this.guiItem.width / 1.05
                };\n                                                `
              ),
              i.setAttribute("position", `${e} 0 0.05`),
              this.el.appendChild(i)
          },
        }),
          AFRAME.registerPrimitive("a-gui-icon-label-button", {
            defaultComponents: {
              "gui-interactable": {},
              "gui-item": { type: "icon-label-button" },
              "gui-icon-label-button": {},
            },
            mappings: {
              onclick: "gui-interactable.clickAction",
              onhover: "gui-interactable.hoverAction",
              "key-code": "gui-interactable.keyCode",
              width: "gui-item.width",
              height: "gui-item.height",
              margin: "gui-item.margin",
              on: "gui-icon-label-button.on",
              "font-color": "gui-icon-label-button.fontColor",
              "font-family": "gui-icon-label-button.fontFamily",
              "font-size": "gui-icon-label-button.fontSize",
              "border-color": "gui-icon-label-button.borderColor",
              "background-color": "gui-icon-label-button.backgroundColor",
              "hover-color": "gui-icon-label-button.hoverColor",
              "active-color": "gui-icon-label-button.activeColor",
              icon: "gui-icon-label-button.icon",
              "icon-active": "gui-icon-label-button.iconActive",
              "icon-font": "gui-icon-label-button.iconFont",
              "icon-font-size": "gui-icon-label-button.iconFontSize",
              value: "gui-icon-label-button.value",
              toggle: "gui-icon-label-button.toggle",
              "toggle-state": "gui-icon-label-button.toggleState",
            },
          })
      },
      363: () => {
        AFRAME.registerComponent("gui-input", {
          schema: {
            align: { type: "string", default: "left" },
            on: { default: "click" },
            value: { type: "string", default: "" },
            toggle: { type: "boolean", default: !1 },
            toggleState: { type: "boolean", default: !1 },
            fontSize: { type: "number", default: 0.2 },
            fontFamily: { type: "string", default: "" },
            fontColor: { type: "string", default: key_grey_dark },
            borderColor: { type: "string", default: key_grey_dark },
            borderHoverColor: { type: "string", default: key_grey },
            backgroundColor: { type: "string", default: key_offwhite },
            hoverColor: { type: "string", default: key_white },
            activeColor: { type: "string", default: key_orange },
          },
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item")
            this.guiItem = i
            this.toggleState = t.toggle
            var r = e.getAttribute("gui-interactable")
            if (((this.guiInteractable = r), t.fontSize > 20)) {
              var o = t.fontSize / 750
              t.fontSize = o
            }
            e.setAttribute(
              "geometry",
              `primitive: plane; height: ${i.height}; width: ${i.width};`
            ),
              e.setAttribute(
                "material",
                `shader: flat; transparent: false; side:front; color:${t.backgroundColor};`
              )
            var n = document.createElement("a-entity")
            n.setAttribute(
              "geometry",
              `primitive: box; width: ${i.width}; height: 0.05; depth: 0.02;`
            ),
              n.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.borderColor}`
              ),
              n.setAttribute("position", `0 -${i.height / 2 - 0.025} 0.01`),
              e.appendChild(n)
            var a = document.createElement("a-entity")
            a.setAttribute(
              "geometry",
              `primitive: box; width: ${i.width}; height: 0.05; depth: 0.02;`
            ),
              a.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.borderColor}`
              ),
              a.setAttribute("position", `0 ${i.height / 2 - 0.025} 0.01`),
              e.appendChild(a)
            var s = document.createElement("a-entity")
            s.setAttribute(
              "geometry",
              `primitive: box; width: 0.05; height: ${i.height}; depth: 0.02;`
            ),
              s.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.borderColor}`
              ),
              s.setAttribute("position", `-${i.width / 2 - 0.025} 0 0.01`),
              e.appendChild(s)
            var l = document.createElement("a-entity")
            l.setAttribute(
              "geometry",
              `primitive: box; width: 0.05; height: ${i.height}; depth: 0.02;`
            ),
              l.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.borderColor}`
              ),
              l.setAttribute("position", i.width / 2 - 0.025 + " 0 0.01"),
              e.appendChild(l),
              this.setText(t.value),
              e.setAttribute("role", "input"),
              e.addEventListener("mouseenter", function (i) {
                e.setAttribute("material", "color", t.hoverColor),
                  n.setAttribute("material", "color", t.borderHoverColor),
                  a.setAttribute("material", "color", t.borderHoverColor),
                  s.setAttribute("material", "color", t.borderHoverColor),
                  l.setAttribute("material", "color", t.borderHoverColor)
              }),
              e.addEventListener("mouseleave", function (i) {
                e.setAttribute("material", "color", t.backgroundColor),
                  n.setAttribute("material", "color", t.borderColor),
                  a.setAttribute("material", "color", t.borderColor),
                  s.setAttribute("material", "color", t.borderColor),
                  l.setAttribute("material", "color", t.borderColor)
              }),
              e.addEventListener(t.on, function (t) {
                console.log("I was clicked at: ", t.detail.intersection.point)
                var i = e.getAttribute("gui-interactable")
                console.log("guiInteractable: " + i)
                var r = i.clickAction
                console.log("clickActionFunctionName: " + r)
                var o = window[r]
                "function" == typeof o && o(t)
              })
          },
          setText: function (t) {
            var e = 0.25 * this.guiItem.height - 0.5 * this.guiItem.width,
              i = document.createElement("a-entity")
            ;(this.textEntity = i),
              i.setAttribute(
                "troika-text",
                `value: ${t}; \n                                                align:left; \n                                                anchor:left; \n                                                baseline:center;\n                                                letterSpacing:0;\n                                                color:${
                  this.data.fontColor
                };\n                                                font:${
                  this.data.fontFamily
                };\n                                                fontSize:${
                  this.data.fontSize
                };\n                                                depthOffset:1;\n                                                maxWidth:${
                  this.guiItem.width / 1.05
                };\n                                                `
              ),
              i.setAttribute("position", `${e} 0 0.05`),
              this.el.appendChild(i)
          },
          play: function () {},
          update: function (t) {
            var e = this.data
            this.el
            this.textEntity.setAttribute("troika-text", `value: ${e.value};`)
          },
          appendText(t) {
            var e = this.data.value + t
            this.el.setAttribute("gui-input", "text", e)
          },
          delete() {
            if (this.data.value && this.data.value.length > 0) {
              var t = this.data.value.slice(0, -1)
              this.el.setAttribute("gui-input", "text", t)
            }
          },
        }),
          AFRAME.registerPrimitive("a-gui-input", {
            defaultComponents: {
              "gui-interactable": {},
              "gui-item": { type: "input" },
              "gui-input": {},
            },
            mappings: {
              onclick: "gui-interactable.clickAction",
              onhover: "gui-interactable.hoverAction",
              width: "gui-item.width",
              height: "gui-item.height",
              margin: "gui-item.margin",
              value: "gui-input.value",
              "font-size": "gui-input.fontSize",
              "font-family": "gui-input.fontFamily",
              "font-color": "gui-input.fontColor",
              "background-color": "gui-input.backgroundColor",
              "hover-color": "gui-input.hoverColor",
              "border-color": "gui-input.borderColor",
              "border-hover-color": "gui-input.borderHoverColor",
            },
          })
      },
      741: () => {
        AFRAME.registerComponent("gui-interactable", {
          schema: {
            clickAction: { type: "string" },
            hoverAction: { type: "string" },
            keyCode: { type: "number", default: -1 },
            key: { type: "string" },
            windowFunction: { type: "boolean", default: !1 },
          },
          init: function () {
            var t = this.data,
              e = this.el
            t.keyCode > 0 &&
              window.addEventListener(
                "keydown",
                function (i) {
                  ;(i.key == t.key || i.keyCode == t.keyCode) &&
                    e.emit("click"),
                    i.preventDefault()
                },
                !0
              )
          },
          update: function () {},
          tick: function () {},
          remove: function () {},
          pause: function () {},
          play: function () {},
          setClickAction: function (t) {
            this.data.clickAction = t
          },
        })
      },
      718: () => {
        AFRAME.registerComponent("gui-item", {
          schema: {
            type: { type: "string" },
            width: { type: "number", default: 1 },
            height: { type: "number", default: 1 },
            baseDepth: { type: "number", default: 0.01 },
            depth: { type: "number", default: 0.02 },
            gap: { type: "number", default: 0.025 },
            radius: { type: "number", default: 0 },
            margin: { type: "vec4", default: { x: 0, y: 0, z: 0, w: 0 } },
            bevel: { type: "boolean", default: !1 },
            bevelSegments: { type: "number", default: 5 },
            steps: { type: "number", default: 2 },
            bevelSize: { type: "number", default: 0.1 },
            bevelOffset: { type: "number", default: 0 },
            bevelThickness: { type: "number", default: 0.1 },
          },
          init: function () {},
          update: function () {},
          tick: function () {},
          remove: function () {},
          pause: function () {},
          play: function () {},
        })
      },
      283: () => {
        AFRAME.registerComponent("gui-label", {
          schema: {
            value: { type: "string", default: "" },
            align: { type: "string", default: "center" },
            anchor: { type: "string", default: "center" },
            fontSize: { type: "number", default: 0.2 },
            lineHeight: { type: "number", default: 0.2 },
            letterSpacing: { type: "number", default: 0 },
            fontFamily: { type: "string", default: "" },
            fontColor: { type: "string", default: key_grey_dark },
            backgroundColor: { type: "string", default: key_offwhite },
            opacity: { type: "number", default: 1 },
            textDepth: { type: "number", default: 0.01 },
          },
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item")
            if (
              ((this.guiItem = i),
              e.setAttribute(
                "geometry",
                `primitive: plane; height: ${i.height}; width: ${i.width};`
              ),
              e.setAttribute(
                "material",
                `shader: flat; side:front; color:${t.backgroundColor}; transparent: true; opacity: ${t.opacity}; alphaTest: 0.5;`
              ),
              t.fontSize > 20)
            ) {
              var r = t.fontSize / 750
              t.fontSize = r
            }
            this.setText(t.value)
          },
          update: function (t) {
            this.data, this.el
            if (this.textEntity) {
              console.log("has textEntity: " + this.textEntity)
              var e = this.textEntity
              e.parentNode.removeChild(e), this.setText(this.data.value)
            } else console.log("no textEntity!")
          },
          setText: function (t) {
            var e = document.createElement("a-entity")
            ;(this.textEntity = e),
              e.setAttribute(
                "troika-text",
                `value: ${t}; \n                                                align: ${
                  this.data.align
                }; \n                                                anchor: ${
                  this.data.anchor
                }; \n                                                baseline:center;\n                                                letterSpacing:0;\n                                                lineHeight: ${
                  this.data.lineHeight
                };\n                                                color:${
                  this.data.fontColor
                };\n                                                font:${
                  this.data.fontFamily
                };\n                                                fontSize:${
                  this.data.fontSize
                };\n                                                depthOffset:1;\n                                                maxWidth:${
                  this.guiItem.width / 1.05
                };\n                                                `
              ),
              e.setAttribute("position", `0 0 ${this.data.textDepth}`),
              this.el.appendChild(e)
          },
        }),
          AFRAME.registerPrimitive("a-gui-label", {
            defaultComponents: {
              "gui-item": { type: "label" },
              "gui-label": {},
            },
            mappings: {
              width: "gui-item.width",
              height: "gui-item.height",
              margin: "gui-item.margin",
              align: "gui-label.align",
              anchor: "gui-label.anchor",
              value: "gui-label.value",
              "font-size": "gui-label.fontSize",
              "line-height": "gui-label.lineHeight",
              "letter-spacing": "gui-label.letterSpacing",
              "font-color": "gui-label.fontColor",
              "font-family": "gui-label.fontFamily",
              "background-color": "gui-label.backgroundColor",
              opacity: "gui-label.opacity",
              "text-depth": "gui-label.textDepth",
            },
          })
      },
      890: () => {
        AFRAME.registerComponent("gui-progressbar", {
          schema: {
            backgroundColor: { type: "string", default: key_grey },
            activeColor: { type: "string", default: key_orange },
          },
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item")
            e.setAttribute(
              "geometry",
              `primitive: plane; height: ${i.height}; width: ${i.width};`
            ),
              e.setAttribute(
                "material",
                `shader: flat; opacity: 1;  color: ${t.backgroundColor}; side:front;`
              )
            var r = document.createElement("a-entity")
            r.setAttribute(
              "geometry",
              `primitive: box; width: 0.04; height: ${i.height}; depth: 0.02;`
            ),
              r.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.activeColor}`
              ),
              r.setAttribute("position", -i.width / 2 + " 0 0.01"),
              (r.id = "progress_meter"),
              e.appendChild(r)
          },
          update: function () {},
          tick: function () {},
          remove: function () {},
          pause: function () {},
          play: function () {},
        }),
          AFRAME.registerPrimitive("a-gui-progressbar", {
            defaultComponents: {
              "gui-item": { type: "progressbar" },
              "gui-progressbar": {},
            },
            mappings: {
              width: "gui-item.width",
              height: "gui-item.height",
              margin: "gui-item.margin",
              "background-color": "gui-progressbar.backgroundColor",
              "active-color": "gui-progressbar.activeColor",
            },
          })
      },
      40: () => {
        AFRAME.registerComponent("gui-radio", {
          schema: {
            on: { default: "click" },
            value: { type: "string", default: "" },
            active: { type: "boolean", default: !0 },
            toggle: { type: "boolean", default: !1 },
            toggleState: { type: "boolean", default: !1 },
            checked: { type: "boolean", default: !1 },
            radiosizecoef: { type: "number", default: 1 },
            fontSize: { type: "number", default: 0.2 },
            fontFamily: { type: "string", default: "" },
            fontColor: { type: "string", default: key_grey_dark },
            borderColor: { type: "string", default: key_white },
            backgroundColor: { type: "string", default: key_offwhite },
            hoverColor: { type: "string", default: key_grey_light },
            activeColor: { type: "string", default: key_orange },
            handleColor: { type: "string", default: key_grey },
          },
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item")
            this.guiItem = i
            this.toggleState = t.toggle
            var r = e.getAttribute("gui-interactable")
            if (((this.guiInteractable = r), t.fontSize > 20)) {
              var o = t.fontSize / 750
              t.fontSize = o
            }
            e.setAttribute(
              "material",
              `shader: flat; depthTest:true;transparent: false; opacity: 1;  color: ${this.data.backgroundColor}; side:front;`
            ),
              e.setAttribute(
                "geometry",
                `primitive: plane; height: ${i.height}; width: ${i.height};`
              )
            var n = 0.5 * -i.width + 0.5 * i.height,
              a = document.createElement("a-cylinder")
            a.setAttribute("radius", 0.2 * i.height * t.radiosizecoef),
              a.setAttribute("height", "0.01"),
              a.setAttribute("rotation", "90 0 0"),
              a.setAttribute(
                "material",
                `color:${t.handleColor}; shader: flat;`
              ),
              a.setAttribute("position", `${n} 0 0`),
              e.appendChild(a)
            var s = document.createElement("a-torus")
            s.setAttribute("radius", 0.19 * i.height * t.radiosizecoef),
              s.setAttribute("radius-tubular", "0.01"),
              s.setAttribute("rotation", "90 0 0"),
              s.setAttribute(
                "material",
                `color:${t.borderColor}; shader: flat;`
              ),
              a.appendChild(s)
            var l = document.createElement("a-cylinder")
            l.setAttribute("radius", 0.18 * i.height * t.radiosizecoef),
              l.setAttribute("height", "0.02"),
              l.setAttribute("rotation", "0 0 0"),
              l.setAttribute(
                "material",
                `color:${t.handleColor}; shader: flat;`
              ),
              a.appendChild(l),
              this.setText(t.value),
              this.updateToggle(t.active),
              e.setAttribute("checked", t.active),
              e.addEventListener("mouseenter", function (e) {
                s.removeAttribute("animation__leave"),
                  s.setAttribute(
                    "animation__enter",
                    `property: material.color; from: ${t.borderColor}; to:${t.hoverColor}; dur:200;`
                  )
              }),
              e.addEventListener("mouseleave", function (e) {
                s.removeAttribute("animation__enter"),
                  s.setAttribute(
                    "animation__leave",
                    `property: material.color; from: ${t.hoverColor}; to:${t.borderColor}; dur:200; easing: easeOutQuad;`
                  )
              }),
              e.addEventListener(t.on, function (i) {
                ;(t.checked = !t.checked),
                  t.checked
                    ? (l.removeAttribute("animation__colorOut"),
                      l.removeAttribute("animation__rotationOut"),
                      l.removeAttribute("animation__position1Out"),
                      l.removeAttribute("animation__position2Out"),
                      l.setAttribute(
                        "animation__colorIn",
                        `property: material.color; from: ${t.handleColor}; to:${t.activeColor}; dur:500; easing:easeInOutCubic;`
                      ),
                      l.setAttribute(
                        "animation__rotationIn",
                        "property: rotation; from: 0 0 0; to:-180 0 0; dur:500; easing:easeInOutCubic;"
                      ),
                      l.setAttribute(
                        "animation__position1In",
                        "property: position; from: 0 0 0; to:0 0.3 0; dur:200; easing:easeInOutCubic;"
                      ),
                      l.setAttribute(
                        "animation__position2In",
                        "property: position; from: 0 0.3 0; to:0 0 0; dur:200; easing:easeInOutCubic; delay:300;"
                      ))
                    : (l.removeAttribute("animation__colorIn"),
                      l.removeAttribute("animation__rotationIn"),
                      l.removeAttribute("animation__position1In"),
                      l.removeAttribute("animation__position2In"),
                      l.setAttribute(
                        "animation__colorOut",
                        `property: material.color; from: ${t.activeColor}; to:${t.handleColor}; dur:500; easing:easeInOutCubic;`
                      ),
                      l.setAttribute(
                        "animation__rotationOut",
                        "property: rotation; from: -180 0 0; to:0 0 0; dur:500; easing:easeInOutCubic;"
                      ),
                      l.setAttribute(
                        "animation__position1Out",
                        "property: position; from: 0 0 0; to:0 0.3 0; dur:200; easing:easeInOutCubic; "
                      ),
                      l.setAttribute(
                        "animation__position2Out",
                        "property: position; from: 0 0.3 0; to:0 0 0; dur:200; easing:easeInOutCubic; delay:300;"
                      ))
                var r = e.getAttribute("gui-interactable").clickAction,
                  o = window[r]
                "function" == typeof o && o(i)
              }),
              e.setAttribute("role", "radio")
          },
          update: function () {
            var t = this.data
            this.el
            if ((this.updateToggle(t.active), this.textEntity)) {
              console.log("has textEntity: " + this.textEntity)
              var e = this.textEntity
              e.parentNode.removeChild(e), this.setText(this.data.value)
            } else console.log("no textEntity!")
          },
          updateToggle: function (t) {},
          setText: function (t) {
            var e = this.guiItem.height - 0.5 * this.guiItem.width,
              i = document.createElement("a-entity")
            ;(this.textEntity = i),
              i.setAttribute(
                "troika-text",
                `value: ${t}; \n                                                align:left; \n                                                anchor:left; \n                                                baseline:center;\n                                                letterSpacing:0;\n                                                color:${
                  this.data.fontColor
                };\n                                                font:${
                  this.data.fontFamily
                };\n                                                fontSize:${
                  this.data.fontSize
                };\n                                                depthOffset:1;\n                                                maxWidth:${
                  this.guiItem.width / 1.05
                };\n                                                `
              ),
              i.setAttribute("position", `${e} 0 0.05`),
              this.el.appendChild(i)
          },
        }),
          AFRAME.registerPrimitive("a-gui-radio", {
            defaultComponents: {
              "gui-interactable": {},
              "gui-item": { type: "radio" },
              "gui-radio": {},
            },
            mappings: {
              onclick: "gui-interactable.clickAction",
              onhover: "gui-interactable.hoverAction",
              "key-code": "gui-interactable.keyCode",
              width: "gui-item.width",
              height: "gui-item.height",
              margin: "gui-item.margin",
              on: "gui-radio.on",
              value: "gui-radio.value",
              active: "gui-radio.active",
              checked: "gui-radio.checked",
              "font-color": "gui-radio.fontColor",
              "font-size": "gui-radio.fontSize",
              "font-family": "gui-radio.fontFamily",
              "border-color": "gui-radio.borderColor",
              "background-color": "gui-radio.backgroundColor",
              "hover-color": "gui-radio.hoverColor",
              "active-color": "gui-radio.activeColor",
              "handle-color": "gui-radio.handleColor",
              radiosizecoef: "gui-radio.radiosizecoef",
            },
          })
      },
      544: () => {
        AFRAME.registerComponent("rounded", {
          schema: {
            enabled: { default: !0 },
            width: { type: "number", default: 1 },
            height: { type: "number", default: 1 },
            radius: { type: "number", default: 0.3 },
            topLeftRadius: { type: "number", default: -1 },
            topRightRadius: { type: "number", default: -1 },
            bottomLeftRadius: { type: "number", default: -1 },
            bottomRightRadius: { type: "number", default: -1 },
            depthWrite: { default: !0 },
            polygonOffset: { default: !1 },
            polygonOffsetFactor: { type: "number", default: 0 },
            color: { type: "color", default: "#F0F0F0" },
            opacity: { type: "number", default: 1 },
          },
          init: function () {
            ;(this.rounded = new THREE.Mesh(
              this.draw(),
              new THREE.MeshStandardMaterial({
                color: new THREE.Color(this.data.color),
              })
            )),
              this.updateOpacity(),
              this.el.setObject3D("mesh", this.rounded)
          },
          update: function () {
            this.data.enabled
              ? this.rounded &&
                ((this.rounded.visible = !0),
                (this.rounded.geometry = this.draw()),
                (this.rounded.material.color = new THREE.Color(
                  this.data.color
                )),
                this.updateOpacity())
              : (this.rounded.visible = !1)
          },
          updateOpacity: function () {
            this.data.opacity < 0 && (this.data.opacity = 0),
              this.data.opacity > 1 && (this.data.opacity = 1),
              this.data.opacity < 1
                ? ((this.rounded.material.transparent = !0),
                  (this.rounded.material.opacity = this.data.opacity),
                  (this.rounded.material.alphaTest = 0))
                : (this.rounded.material.transparent = !1)
          },
          tick: function () {},
          remove: function () {
            this.rounded &&
              (this.el.object3D.remove(this.rounded), (this.rounded = null))
          },
          draw: function () {
            var t = new THREE.Shape()
            var e,
              i,
              r,
              o,
              n,
              a,
              s,
              l,
              u,
              d = [
                this.data.radius,
                this.data.radius,
                this.data.radius,
                this.data.radius,
              ]
            return (
              -1 != this.data.topLeftRadius && (d[0] = this.data.topLeftRadius),
              -1 != this.data.topRightRadius &&
                (d[1] = this.data.topRightRadius),
              -1 != this.data.bottomLeftRadius &&
                (d[2] = this.data.bottomLeftRadius),
              -1 != this.data.bottomRightRadius &&
                (d[3] = this.data.bottomRightRadius),
              (e = t),
              (i = -this.data.width / 2),
              (r = -this.data.height / 2),
              (o = this.data.width),
              (n = this.data.height),
              (a = d[0]),
              (s = d[1]),
              (l = d[2]),
              (u = d[3]),
              a || (a = 1e-5),
              s || (s = 1e-5),
              l || (l = 1e-5),
              u || (u = 1e-5),
              e.moveTo(i, r + a),
              e.lineTo(i, r + n - a),
              e.quadraticCurveTo(i, r + n, i + a, r + n),
              e.lineTo(i + o - s, r + n),
              e.quadraticCurveTo(i + o, r + n, i + o, r + n - s),
              e.lineTo(i + o, r + u),
              e.quadraticCurveTo(i + o, r, i + o - u, r),
              e.lineTo(i + l, r),
              e.quadraticCurveTo(i, r, i, r + l),
              new THREE.ShapeGeometry(t)
            )
          },
          pause: function () {},
          play: function () {},
        }),
          AFRAME.registerPrimitive("a-rounded", {
            defaultComponents: { rounded: {} },
            mappings: {
              enabled: "rounded.enabled",
              width: "rounded.width",
              height: "rounded.height",
              radius: "rounded.radius",
              "depth-write": "rounded.depthWrite",
              "polygon-offset": "rounded.polygonOffset",
              "polygon-offset-factor": "rounded.polygonOffsetFactor",
              "top-left-radius": "rounded.topLeftRadius",
              "top-right-radius": "rounded.topRightRadius",
              "bottom-left-radius": "rounded.bottomLeftRadius",
              "bottom-right-radius": "rounded.bottomRightRadius",
              color: "rounded.color",
              opacity: "rounded.opacity",
            },
          })
      },
      798: () => {
        AFRAME.registerComponent("gui-slider", {
          schema: {
            activeColor: { type: "string", default: key_orange },
            backgroundColor: { type: "string", default: key_offwhite },
            borderColor: { type: "string", default: key_grey },
            handleColor: { type: "string", default: key_white },
            handleInnerDepth: { type: "number", default: 0.02 },
            handleInnerRadius: { type: "number", default: 0.13 },
            handleOuterDepth: { type: "number", default: 0.04 },
            handleOuterRadius: { type: "number", default: 0.17 },
            hoverColor: { type: "string", default: key_grey_light },
            leftRightPadding: { type: "number", default: 0.25 },
            percent: { type: "number", default: 0.5 },
            sliderBarHeight: { type: "number", default: 0.05 },
            sliderBarDepth: { type: "number", default: 0.03 },
            topBottomPadding: { type: "number", default: 0.125 },
          },
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item"),
              r = i.width - 2 * t.leftRightPadding
            i.height, t.topBottomPadding
            e.setAttribute(
              "geometry",
              `primitive: plane; height: ${i.height}; width: ${i.height};`
            ),
              e.setAttribute(
                "material",
                `shader: flat; opacity: 1;  color: ${t.backgroundColor}; side:front;`
              )
            var o = document.createElement("a-entity")
            o.setAttribute(
              "geometry",
              `primitive: box; width: ${t.percent * r}; height: ${
                t.sliderBarHeight
              }; depth: ${t.sliderBarDepth};`
            ),
              o.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.activeColor};`
              ),
              o.setAttribute(
                "position",
                `${t.percent - 0.5 * r} 0 ${t.sliderBarDepth - 0.01}`
              ),
              e.appendChild(o)
            var n = document.createElement("a-entity")
            n.setAttribute(
              "geometry",
              `primitive: box; width: ${r - t.percent * r}; height: ${
                t.sliderBarHeight
              }; depth: ${t.sliderBarDepth};`
            ),
              n.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.borderColor};`
              ),
              n.setAttribute(
                "position",
                `${t.percent * r * 0.5} 0 ${t.sliderBarDepth - 0.01}`
              ),
              e.appendChild(n)
            var a = document.createElement("a-entity")
            a.setAttribute(
              "geometry",
              `primitive: cylinder; radius: ${t.handleOuterRadius}; height: ${t.handleOuterDepth};`
            ),
              a.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.borderColor};`
              ),
              a.setAttribute("rotation", "90 0 0"),
              a.setAttribute(
                "position",
                `${t.percent * r - 0.5 * r} 0 ${t.handleOuterDepth - 0.01}`
              ),
              e.appendChild(a)
            var s = document.createElement("a-entity")
            s.setAttribute(
              "geometry",
              `primitive: cylinder; radius: ${t.handleInnerRadius}; height: ${t.handleInnerDepth};`
            ),
              s.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.handleColor};`
              ),
              s.setAttribute("position", `0 ${t.handleInnerDepth} 0`),
              a.appendChild(s),
              e.addEventListener("mouseenter", function () {
                s.setAttribute("material", "color", t.hoverColor)
              }),
              e.addEventListener("mouseleave", function () {
                s.setAttribute("material", "color", t.handleColor)
              }),
              e.addEventListener("click", function (i) {
                console.log("I was clicked at: ", i.detail.intersection.point)
                var r = e.object3D.worldToLocal(i.detail.intersection.point)
                console.log("local coordinates: ", r),
                  console.log("current percent: " + t.percent)
                r.x <= -1
                  ? (t.percent = 0)
                  : r.x >= 1
                  ? (t.percent = 1)
                  : (t.percent = (r.x + 1) / 2),
                  console.log("handle container: " + a),
                  o.setAttribute(
                    "geometry",
                    `primitive: box; width: ${
                      2 * t.percent
                    }; height: 0.05; depth: 0.03;`
                  ),
                  o.setAttribute("position", t.percent - 1 + " 0 0.02"),
                  n.setAttribute(
                    "geometry",
                    `primitive: box; width: ${
                      2 - 2 * t.percent
                    }; height: 0.05; depth: 0.03;`
                  ),
                  n.setAttribute("position", 1 * t.percent + " 0 0.02"),
                  a.setAttribute("position", 2 * t.percent - 1 + " 0 0.03")
                var s = e.getAttribute("gui-interactable")
                console.log("guiInteractable: " + s)
                var l = s.clickAction
                console.log("clickActionFunctionName: " + l)
                var u = window[l]
                "function" == typeof u && u(i, t.percent)
              })
          },
          update: function () {},
          tick: function () {},
          remove: function () {},
          pause: function () {},
          play: function () {},
        }),
          AFRAME.registerPrimitive("a-gui-slider", {
            defaultComponents: {
              "gui-interactable": {},
              "gui-item": { type: "slider" },
              "gui-slider": {},
            },
            mappings: {
              "active-color": "gui-slider.activeColor",
              "background-color": "gui-slider.backgroundColor",
              "border-color": "gui-slider.borderColor",
              "handle-color": "gui-slider.handleColor",
              "handle-inner-depth": "gui-slider.handleInnerDepth",
              "handle-inner-radius": "gui-slider.handleInnerRadius",
              "handle-outer-depth": "gui-slider.handleOuterDepth",
              "handle-outer-radius": "gui-slider.handleOuterRadius",
              height: "gui-item.height",
              "hover-color": "gui-slider.hoverColor",
              "key-code": "gui-interactable.keyCode",
              "left-right-padding": "gui-slider.leftRightPadding",
              margin: "gui-item.margin",
              onclick: "gui-interactable.clickAction",
              onhover: "gui-interactable.hoverAction",
              percent: "gui-slider.percent",
              "slider-bar-depth": "gui-slider.sliderBarDepth",
              "slider-bar-height": "gui-slider.sliderBarHeight",
              "top-bottom-padding": "gui-slider.topBottomPadding",
              width: "gui-item.width",
            },
          })
      },
      725: () => {
        AFRAME.registerComponent("gui-toggle", {
          schema: {
            on: { default: "click" },
            value: { type: "string", default: "" },
            toggle: { type: "boolean", default: !1 },
            toggleState: { type: "boolean", default: !1 },
            active: { type: "boolean", default: !0 },
            checked: { type: "boolean", default: !1 },
            borderWidth: { type: "number", default: 1 },
            fontSize: { type: "number", default: 0.2 },
            fontFamily: { type: "string", default: "" },
            fontColor: { type: "string", default: key_grey_dark },
            borderColor: { type: "string", default: key_grey },
            backgroundColor: { type: "string", default: key_offwhite },
            hoverColor: { type: "string", default: key_grey_light },
            activeColor: { type: "string", default: key_orange },
            handleColor: { type: "string", default: key_offwhite },
          },
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item")
            this.guiItem = i
            this.toggleState = t.toggle
            var r = e.getAttribute("gui-interactable")
            if (((this.guiInteractable = r), t.fontSize > 20)) {
              var o = t.fontSize / 750
              t.fontSize = o
            }
            e.setAttribute(
              "material",
              `shader: flat; depthTest:true;transparent: false; opacity: 1;  color: ${this.data.backgroundColor}; side:front;`
            ),
              e.setAttribute(
                "geometry",
                `primitive: plane; height: ${i.height}; width: ${i.height};`
              )
            var n = i.height / 1.75,
              a = 0.5 * -i.width + i.height / 2,
              s = document.createElement("a-box")
            s.setAttribute("width", n),
              s.setAttribute("height", 0.5 * i.height),
              s.setAttribute("depth", "0.01"),
              s.setAttribute(
                "material",
                `color:${t.borderColor}; shader: flat;`
              ),
              s.setAttribute("position", `${a} 0 0`),
              e.appendChild(s)
            var l = i.height / 5,
              u = 0.5 * -i.height + 2 * l,
              d = 0.5 * i.height - 2 * l,
              c = document.createElement("a-box")
            c.setAttribute("width", `${l}`),
              c.setAttribute("height", 0.4 * i.height),
              c.setAttribute("depth", "0.02"),
              c.setAttribute("material", `color:${t.handleColor}`),
              c.setAttribute("position", `${u} 0 0.02`),
              s.appendChild(c),
              this.setText(t.value),
              this.updateToggle(t.active),
              e.addEventListener("mouseenter", function (e) {
                c.removeAttribute("animation__leave"),
                  c.setAttribute(
                    "animation__enter",
                    `property: material.color; from: ${t.handleColor}; to:${t.hoverColor}; dur:200;`
                  )
              }),
              e.addEventListener("mouseleave", function (e) {
                c.removeAttribute("animation__enter"),
                  c.setAttribute(
                    "animation__leave",
                    `property: material.color; from: ${t.hoverColor}; to:${t.handleColor}; dur:200; easing: easeOutQuad;`
                  )
              }),
              e.addEventListener("check", function (e) {
                t.checked || (t.checked = !0)
              }),
              e.addEventListener("uncheck", function (e) {
                t.checked && (t.checked = !1)
              }),
              e.addEventListener(t.on, function (i) {
                console.log("I was clicked at: ", i.detail.intersection.point),
                  (t.checked = !t.checked),
                  t.checked
                    ? (s.removeAttribute("animation__colorOut"),
                      c.removeAttribute("animation__positionOut"),
                      s.setAttribute(
                        "animation__colorIn",
                        `property: material.color; from: ${t.borderColor}; to:${t.activeColor}; dur:200; easing:easeInOutCubic;`
                      ),
                      c.setAttribute(
                        "animation__positionIn",
                        `property: position; from: ${u} 0 0.02; to:${d} 0 0.02; dur:200; easing:easeInOutCubic;`
                      ))
                    : (s.removeAttribute("animation__colorIn"),
                      c.removeAttribute("animation__positionIn"),
                      s.setAttribute(
                        "animation__colorOut",
                        `property: material.color; from: ${t.activeColor}; to:${t.borderColor}; dur:200; easing:easeInOutCubic;`
                      ),
                      c.setAttribute(
                        "animation__positionOut",
                        `property: position; from: ${d} 0 0.02; to:${u} 0 0.02; dur:200; easing:easeInOutCubic;`
                      ))
                var r = e.getAttribute("gui-interactable")
                console.log("guiInteractable: " + r)
                var o = r.clickAction
                console.log("clickActionFunctionName: " + o)
                var n = window[o]
                "function" == typeof n && n(i)
              })
          },
          update: function () {
            var t = this.data
            this.el
            if ((this.updateToggle(t.active), this.textEntity)) {
              console.log("has textEntity: " + this.textEntity)
              var e = this.textEntity
              e.parentNode.removeChild(e), this.setText(this.data.value)
            } else console.log("no textEntity!")
          },
          updateToggle: function (t) {},
          setText: function (t) {
            var e = this.guiItem.height - 0.5 * this.guiItem.width,
              i = document.createElement("a-entity")
            ;(this.textEntity = i),
              i.setAttribute(
                "troika-text",
                `value: ${t}; \n                                                align:left; \n                                                anchor:left; \n                                                baseline:center;\n                                                letterSpacing:0;\n                                                color:${
                  this.data.fontColor
                };\n                                                font:${
                  this.data.fontFamily
                };\n                                                fontSize:${
                  this.data.fontSize
                };\n                                                depthOffset:1;\n                                                maxWidth:${
                  this.guiItem.width / 1.05
                };\n                                                `
              ),
              i.setAttribute("position", `${e} 0 0.05`),
              this.el.appendChild(i)
          },
        }),
          AFRAME.registerPrimitive("a-gui-toggle", {
            defaultComponents: {
              "gui-interactable": {},
              "gui-item": { type: "toggle" },
              "gui-toggle": {},
            },
            mappings: {
              onclick: "gui-interactable.clickAction",
              onhover: "gui-interactable.hoverAction",
              "key-code": "gui-interactable.keyCode",
              width: "gui-item.width",
              height: "gui-item.height",
              margin: "gui-item.margin",
              on: "gui-toggle.on",
              active: "gui-toggle.active",
              checked: "gui-toggle.checked",
              value: "gui-toggle.value",
              "font-color": "gui-toggle.fontColor",
              "font-family": "gui-toggle.fontFamily",
              "font-size": "gui-toggle.fontSize",
              "border-width": "gui-toggle.borderWidth",
              "border-color": "gui-toggle.borderColor",
              "background-color": "gui-toggle.backgroundColor",
              "hover-color": "gui-toggle.hoverColor",
              "active-color": "gui-toggle.activeColor",
              "handle-color": "gui-toggle.handleColor",
            },
          })
      },
      594: () => {
        AFRAME.registerComponent("gui-vertical-slider", {
          schema: {
            activeColor: { type: "string", default: key_orange },
            backgroundColor: { type: "string", default: key_offwhite },
            borderColor: { type: "string", default: key_grey },
            handleColor: { type: "string", default: key_white },
            handleInnerDepth: { type: "number", default: 0.02 },
            handleInnerRadius: { type: "number", default: 0.13 },
            handleOuterDepth: { type: "number", default: 0.04 },
            handleOuterRadius: { type: "number", default: 0.17 },
            hoverColor: { type: "string", default: key_grey_light },
            hoverFontSize: { type: "number", default: 100 },
            hoverHeight: { type: "number", default: 0.35 },
            hoverPercent: { type: "number" },
            hoverWidth: { type: "number", default: 0.7 },
            hoverMargin: { type: "vec4", default: { x: 0, y: 0, z: 0, w: 0 } },
            leftRightPadding: { type: "number", default: 0.125 },
            percent: { type: "number", default: 0.5 },
            opacity: { type: "number", default: 1 },
            outputFontSize: { type: "string", default: "0.2" },
            outputFunction: { type: "string" },
            outputHeight: { type: "number", default: 1 },
            outputMargin: { type: "vec4", default: { x: 0, y: 0, z: 0, w: 0 } },
            outputTextDepth: { type: "number", default: 0.25 },
            outputWidth: { type: "number", default: 1 },
            sliderBarDepth: { type: "number", default: 0.03 },
            sliderBarWidth: { type: "number", default: 0.08 },
            topBottomPadding: { type: "number", default: 0.25 },
          },
          init: function () {
            var t = this.data,
              e = this.el,
              i = e.getAttribute("gui-item"),
              r =
                (i.width, t.leftRightPadding, i.height - 2 * t.topBottomPadding)
            ;(this.sliderHeight = r),
              e.setAttribute(
                "geometry",
                `primitive: plane; height: ${i.height}; width: ${i.width};`
              ),
              e.setAttribute(
                "material",
                `shader: flat; opacity: ${t.opacity};  alphaTest: 0.5; color: ${t.backgroundColor}; side:front;`
              ),
              console.log(
                "**** in vertical slider init, percent: " +
                  t.percent +
                  ", sliderHeight: " +
                  r
              )
            var o = document.createElement("a-entity")
            o.setAttribute(
              "geometry",
              `primitive: box; height: ${t.percent * r}; width: ${
                t.sliderBarWidth
              }; depth: ${t.sliderBarDepth};`
            ),
              o.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.activeColor};`
              ),
              o.setAttribute(
                "position",
                `0 ${t.percent * r - 0.5 * r - t.percent * r * 0.5} ${
                  t.sliderBarDepth - 0.01
                }`
              ),
              (this.sliderActiveBar = o),
              e.appendChild(o)
            var n = document.createElement("a-entity")
            n.setAttribute(
              "geometry",
              `primitive: box; height: ${r - t.percent * r}; width: ${
                t.sliderBarWidth
              }; depth: ${t.sliderBarDepth};`
            ),
              n.setAttribute(
                "material",
                `shader: flat; opacity: 1; alphaTest: 0.5; side:double; color:${t.borderColor};`
              ),
              n.setAttribute(
                "position",
                `0 ${t.percent * r * 0.5} ${t.sliderBarDepth - 0.01}`
              ),
              (this.sliderBar = n),
              e.appendChild(n)
            var a = document.createElement("a-entity")
            a.setAttribute(
              "geometry",
              `primitive: cylinder; radius: ${t.handleOuterRadius}; height: ${t.handleOuterDepth};`
            ),
              a.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.activeColor};`
              ),
              a.setAttribute("rotation", "90 0 0"),
              a.setAttribute(
                "position",
                `0 ${t.percent * r - 0.5 * r} ${t.handleOuterDepth - 0.01}`
              ),
              (this.handleContainer = a),
              e.appendChild(a)
            var s = document.createElement("a-entity")
            s.setAttribute(
              "geometry",
              `primitive: cylinder; radius: ${t.handleInnerRadius}; height: ${t.handleInnerDepth};`
            ),
              s.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.handleColor};`
              ),
              s.setAttribute("position", `0 ${t.handleInnerDepth} 0`),
              a.appendChild(s)
            var l = document.createElement("a-gui-label")
            l.setAttribute("width", "" + 1.4 * i.width * t.outputWidth),
              l.setAttribute("height", "" + 0.7 * i.width),
              l.setAttribute("value", "0.0"),
              l.setAttribute("opacity", "1.0"),
              l.setAttribute(
                "position",
                `${1.4 * i.width} 0 ${t.sliderBarDepth}`
              ),
              l.setAttribute("rotation", "-90 0 0"),
              l.setAttribute("font-color", t.activeColor),
              l.setAttribute("font-size", 240 * i.width + "px"),
              l.setAttribute("font-weight", "bold"),
              l.setAttribute("text-depth", t.outputTextDepth),
              (this.valueLabel = l),
              a.appendChild(l)
            var u = document.createElement("a-entity")
            u.setAttribute(
              "geometry",
              `primitive: box; height: 0.02; width: ${0.5 * i.width}; depth: ${
                t.sliderBarDepth
              };`
            ),
              u.setAttribute(
                "material",
                `shader: flat; opacity: 1; side:double; color: ${t.activeColor};`
              ),
              u.setAttribute(
                "position",
                `${0.5 * -i.width} 0 ${t.sliderBarDepth - 0.01}`
              ),
              u.setAttribute("visible", "false"),
              (this.hoverIndicator = u),
              e.appendChild(u)
            var d = document.createElement("a-gui-label")
            d.setAttribute("width", "" + i.width * t.hoverWidth),
              d.setAttribute("height", "" + i.width * t.hoverHeight),
              d.setAttribute("value", ""),
              d.setAttribute("opacity", "0.5"),
              d.setAttribute(
                "position",
                `${-i.width * t.hoverWidth} 0 ${t.sliderBarDepth}`
              ),
              d.setAttribute("font-color", t.borderColor),
              d.setAttribute("font-size", i.width * t.hoverFontSize + "px"),
              d.setAttribute("text-depth", t.outputTextDepth),
              (this.hoverLabel = d),
              u.appendChild(d),
              e.addEventListener("mouseenter", function () {
                s.setAttribute("material", "color", t.hoverColor)
              }),
              e.addEventListener("mouseleave", function () {
                s.setAttribute("material", "color", t.handleColor)
              }),
              e.addEventListener("click", function (i) {
                var o = e.object3D.worldToLocal(i.detail.intersection.point)
                console.log("click local coordinates: ", o),
                  console.log("current percent: " + t.percent)
                var n = null
                ;(n = o.y <= -r / 2 ? 0 : o.y >= r / 2 ? 1 : (o.y + r / 2) / r),
                  console.log("new percent: " + n),
                  e.setAttribute("gui-vertical-slider", "percent", String(n)),
                  e.setAttribute(
                    "gui-vertical-slider",
                    "hoverPercent",
                    String(n)
                  ),
                  console.log("handle container: " + a)
                var s = e.getAttribute("gui-interactable")
                console.log("guiInteractable: " + s)
                var l = s.clickAction
                console.log("clickActionFunctionName: " + l)
                var u = window[l]
                "function" == typeof u && u(t.percent)
              }),
              this.el.addEventListener("raycaster-intersected", (t) => {
                this.raycaster = t.detail.el
              }),
              this.el.addEventListener("raycaster-intersected-cleared", (t) => {
                ;(this.raycaster = null),
                  this.hoverIndicator.setAttribute("visible", !1),
                  this.hoverLabel.setAttribute("visible", !1)
              })
          },
          update: function (t) {
            var e = this.data,
              i = this.el.getAttribute("gui-item"),
              r =
                (i.width, e.leftRightPadding, i.height - 2 * e.topBottomPadding)
            if (
              e.percent != t.percent &&
              this.sliderActiveBar &&
              this.sliderBar &&
              this.handleContainer
            ) {
              r = i.height - 2 * e.topBottomPadding
              this.sliderActiveBar.setAttribute(
                "geometry",
                `primitive: box; height: ${e.percent * r}; width: ${
                  e.sliderBarWidth
                }; depth: ${e.sliderBarDepth};`
              ),
                this.sliderActiveBar.setAttribute(
                  "position",
                  `0 ${e.percent * r - 0.5 * r - e.percent * r * 0.5} ${
                    e.sliderBarDepth - 0.01
                  }`
                ),
                this.sliderBar.setAttribute(
                  "geometry",
                  `primitive: box; width: ${e.sliderBarWidth}; height: ${
                    r - e.percent * r
                  }; depth: ${e.sliderBarDepth};`
                ),
                this.sliderBar.setAttribute(
                  "position",
                  `0 ${e.percent * r * 0.5} ${e.sliderBarDepth - 0.01}`
                ),
                this.handleContainer.setAttribute(
                  "position",
                  `0 ${e.percent * r - 0.5 * r} ${e.handleOuterDepth - 0.01}`
                )
              var o = this.getOutputValue(!1)
              o && this.valueLabel.setAttribute("value", o),
                this.hoverIndicator.setAttribute("visible", !1),
                this.hoverLabel.setAttribute("visible", !1)
            } else if (
              e.hoverPercent != t.hoverPercent &&
              e.hoverPercent != e.percent &&
              this.hoverIndicator
            ) {
              var n = this.getOutputValue(!0)
              n && this.hoverLabel.setAttribute("value", n),
                this.hoverIndicator.setAttribute(
                  "position",
                  `0 ${e.hoverPercent * r - 0.5 * r} ${e.sliderBarDepth - 0.01}`
                ),
                this.hoverIndicator.setAttribute("visible", !0),
                this.hoverLabel.setAttribute("visible", !0)
            }
          },
          tick: function () {
            if (!this.raycaster) return
            var t = this.el,
              e = (this.data, this.sliderHeight)
            this.handleContainer
            let i = this.raycaster.components.raycaster.getIntersection(t)
            if (i) {
              if (this.previousLocalY && this.previousLocalY == i.point.y)
                return (
                  this.hoverIndicator.setAttribute("visible", !1),
                  void this.hoverLabel.setAttribute("visible", !1)
                )
              var r = this.el.object3D
              r.updateMatrixWorld()
              var o = new THREE.Vector3(),
                n = new THREE.Quaternion(),
                a = new THREE.Vector3()
              r.matrixWorld.decompose(o, n, a)
              var s = new THREE.Vector3()
              ;(s.x = i.point.x - o.x),
                (s.y = i.point.y - o.y),
                (s.z = i.point.z - o.z),
                (this.previousLocalY = s.y)
              var l = null
              ;(l = s.y <= -e / 2 ? 0 : s.y >= e / 2 ? 1 : (s.y + e / 2) / e) !=
                this.data.hoverPercent &&
                t.setAttribute("gui-vertical-slider", "hoverPercent", String(l))
              var u = t.getAttribute("gui-interactable").hoverAction,
                d = window[u]
              "function" == typeof d && d(l)
            }
          },
          remove: function () {},
          pause: function () {},
          play: function () {},
          getOutputValue: function (t) {
            var e = window[this.data.outputFunction]
            return "function" == typeof e
              ? e(t ? this.data.hoverPercent : this.data.percent)
              : null
          },
        }),
          AFRAME.registerPrimitive("a-gui-vertical-slider", {
            defaultComponents: {
              "gui-interactable": {},
              "gui-item": { type: "slider" },
              "gui-vertical-slider": {},
            },
            mappings: {
              "active-color": "gui-vertical-slider.activeColor",
              "background-color": "gui-vertical-slider.backgroundColor",
              "border-color": "gui-vertical-slider.borderColor",
              "handle-color": "gui-vertical-slider.handleColor",
              "handle-inner-depth": "gui-vertical-slider.handleInnerDepth",
              "handle-inner-radius": "gui-vertical-slider.handleInnerRadius",
              "handle-outer-depth": "gui-vertical-slider.handleOuterDepth",
              "handle-outer-radius": "gui-vertical-slider.handleOuterRadius",
              height: "gui-item.height",
              "hover-color": "gui-vertical-slider.hoverColor",
              "hover-font-size": "gui-vertical-slider.hoverFontSize",
              "hover-height": "gui-vertical-slider.hoverHeight",
              "hover-margin": "gui-vertical-slider.hoverMargin",
              "hover-percent": "gui-vertical-slider.hoverPercent",
              "hover-width": "gui-vertical-slider.hoverWidth",
              "key-code": "gui-interactable.keyCode",
              "left-right-padding": "gui-vertical-slider.leftRightPadding",
              margin: "gui-item.margin",
              onclick: "gui-interactable.clickAction",
              onhover: "gui-interactable.hoverAction",
              opacity: "gui-vertical-slider.opacity",
              "output-font-size": "gui-vertical-slider.outputFontSize",
              "output-function": "gui-vertical-slider.outputFunction",
              "output-height": "gui-vertical-slider.outputHeight",
              "output-margin": "gui-vertical-slider.outputMargin",
              "output-text-depth": "gui-vertical-slider.outputTextDepth",
              "output-width": "gui-vertical-slider.outputWidth",
              percent: "gui-vertical-slider.percent",
              "slider-bar-depth": "gui-vertical-slider.sliderBarDepth",
              "slider-bar-width": "gui-vertical-slider.sliderBarWidth",
              "top-bottom-padding": "gui-vertical-slider.topBottomPadding",
              width: "gui-item.width",
            },
          })
      },
      47: () => {
        var t = document.querySelector("#cursor")
        t &&
          t.addEventListener("stateremoved", function (t) {
            "cursor-fusing" === t.detail.state &&
              (AFRAME.utils.entity.setComponentProperty(
                this,
                "geometry.thetaLength",
                360
              ),
              AFRAME.utils.entity.setComponentProperty(
                this,
                "material.color",
                key_white
              ),
              AFRAME.utils.entity.setComponentProperty(this, "scale", "1 1 1"))
          })
      },
      389: () => {
        window.nearestPow2 = function (t) {
          Math.pow(2, Math.round(Math.log(t) / Math.log(2)))
        }
      },
      169: () => {
        ;(window.normalYPosition = 1.5),
          (window.hiddenYPosition = 1e3),
          (window.key_orange = "#ed5b21"),
          (window.key_orange_light = "#ef8c60"),
          (window.key_grey = "#22252a"),
          (window.key_grey_dark = "#2c3037"),
          (window.key_grey_light = "#606876"),
          (window.key_offwhite = "#d3d3d4"),
          (window.key_white = "#fff"),
          (window.icon_font = {
            alert: "",
            "alert-circled": "",
            "android-add": "",
            "android-add-circle": "",
            "android-alarm-clock": "",
            "android-alert": "",
            "android-apps": "",
            "android-archive": "",
            "android-arrow-back": "",
            "android-arrow-down": "",
            "android-arrow-dropdown": "",
            "android-arrow-dropdown-circle": "",
            "android-arrow-dropleft": "",
            "android-arrow-dropleft-circle": "",
            "android-arrow-dropright": "",
            "android-arrow-dropright-circle": "",
            "android-arrow-dropup": "",
            "android-arrow-dropup-circle": "",
            "android-arrow-forward": "",
            "android-arrow-up": "",
            "android-attach": "",
            "android-bar": "",
            "android-bicycle": "",
            "android-boat": "",
            "android-bookmark": "",
            "android-bulb": "",
            "android-bus": "",
            "android-calendar": "",
            "android-call": "",
            "android-camera": "",
            "android-cancel": "",
            "android-car": "",
            "android-cart": "",
            "android-chat": "",
            "android-checkbox": "",
            "android-checkbox-blank": "",
            "android-checkbox-outline": "",
            "android-checkbox-outline-blank": "",
            "android-checkmark-circle": "",
            "android-clipboard": "",
            "android-close": "",
            "android-cloud": "",
            "android-cloud-circle": "",
            "android-cloud-done": "",
            "android-cloud-outline": "",
            "android-color-palette": "",
            "android-compass": "",
            "android-contact": "",
            "android-contacts": "",
            "android-contract": "",
            "android-create": "",
            "android-delete": "",
            "android-desktop": "",
            "android-document": "",
            "android-done": "",
            "android-done-all": "",
            "android-download": "",
            "android-drafts": "",
            "android-exit": "",
            "android-expand": "",
            "android-favorite": "",
            "android-favorite-outline": "",
            "android-film": "",
            "android-folder": "",
            "android-folder-open": "",
            "android-funnel": "",
            "android-globe": "",
            "android-hand": "",
            "android-hangout": "",
            "android-happy": "",
            "android-home": "",
            "android-image": "",
            "android-laptop": "",
            "android-list": "",
            "android-locate": "",
            "android-lock": "",
            "android-mail": "",
            "android-map": "",
            "android-menu": "",
            "android-microphone": "",
            "android-microphone-off": "",
            "android-more-horizontal": "",
            "android-more-vertical": "",
            "android-navigate": "",
            "android-notifications": "",
            "android-notifications-none": "",
            "android-notifications-off": "",
            "android-open": "",
            "android-options": "",
            "android-people": "",
            "android-person": "",
            "android-person-add": "",
            "android-phone-landscape": "",
            "android-phone-portrait": "",
            "android-pin": "",
            "android-plane": "",
            "android-playstore": "",
            "android-print": "",
            "android-radio-button-off": "",
            "android-radio-button-on": "",
            "android-refresh": "",
            "android-remove": "",
            "android-remove-circle": "",
            "android-restaurant": "",
            "android-sad": "",
            "android-search": "",
            "android-send": "",
            "android-settings": "",
            "android-share": "",
            "android-share-alt": "",
            "android-star": "",
            "android-star-half": "",
            "android-star-outline": "",
            "android-stopwatch": "",
            "android-subway": "",
            "android-sunny": "",
            "android-sync": "",
            "android-textsms": "",
            "android-time": "",
            "android-train": "",
            "android-unlock": "",
            "android-upload": "",
            "android-volume-down": "",
            "android-volume-mute": "",
            "android-volume-off": "",
            "android-volume-up": "",
            "android-walk": "",
            "android-warning": "",
            "android-watch": "",
            "android-wifi": "",
            aperture: "",
            archive: "",
            "arrow-down-a": "",
            "arrow-down-b": "",
            "arrow-down-c": "",
            "arrow-expand": "",
            "arrow-graph-down-left": "",
            "arrow-graph-down-right": "",
            "arrow-graph-up-left": "",
            "arrow-graph-up-right": "",
            "arrow-left-a": "",
            "arrow-left-b": "",
            "arrow-left-c": "",
            "arrow-move": "",
            "arrow-resize": "",
            "arrow-return-left": "",
            "arrow-return-right": "",
            "arrow-right-a": "",
            "arrow-right-b": "",
            "arrow-right-c": "",
            "arrow-shrink": "",
            "arrow-swap": "",
            "arrow-up-a": "",
            "arrow-up-b": "",
            "arrow-up-c": "",
            asterisk: "",
            at: "",
            backspace: "",
            "backspace-outline": "",
            bag: "",
            "battery-charging": "",
            "battery-empty": "",
            "battery-full": "",
            "battery-half": "",
            "battery-low": "",
            beaker: "",
            beer: "",
            bluetooth: "",
            bonfire: "",
            bookmark: "",
            bowtie: "",
            briefcase: "",
            bug: "",
            calculator: "",
            calendar: "",
            camera: "",
            card: "",
            cash: "",
            chatbox: "",
            "chatbox-working": "",
            chatboxes: "",
            chatbubble: "",
            "chatbubble-working": "",
            chatbubbles: "",
            checkmark: "",
            "checkmark-circled": "",
            "checkmark-round": "",
            "chevron-down": "",
            "chevron-left": "",
            "chevron-right": "",
            "chevron-up": "",
            clipboard: "",
            clock: "",
            close: "",
            "close-circled": "",
            "close-round": "",
            "closed-captioning": "",
            cloud: "",
            code: "",
            "code-download": "",
            "code-working": "",
            coffee: "",
            compass: "",
            compose: "",
            "connection-bars": "",
            contrast: "",
            crop: "",
            cube: "",
            disc: "",
            document: "",
            "document-text": "",
            drag: "",
            earth: "",
            easel: "",
            edit: "",
            egg: "",
            eject: "",
            email: "",
            "email-unread": "",
            "erlenmeyer-flask": "",
            "erlenmeyer-flask-bubbles": "",
            eye: "",
            "eye-disabled": "",
            female: "",
            filing: "",
            "film-marker": "",
            fireball: "",
            flag: "",
            flame: "",
            flash: "",
            "flash-off": "",
            folder: "",
            fork: "",
            "fork-repo": "",
            forward: "",
            funnel: "",
            "gear-a": "",
            "gear-b": "",
            grid: "",
            hammer: "",
            happy: "",
            "happy-outline": "",
            headphone: "",
            heart: "",
            "heart-broken": "",
            help: "",
            "help-buoy": "",
            "help-circled": "",
            home: "",
            icecream: "",
            image: "",
            images: "",
            information: "",
            "information-circled": "",
            ionic: "",
            "ios-alarm": "",
            "ios-alarm-outline": "",
            "ios-albums": "",
            "ios-albums-outline": "",
            "ios-americanfootball": "",
            "ios-americanfootball-outline": "",
            "ios-analytics": "",
            "ios-analytics-outline": "",
            "ios-arrow-back": "",
            "ios-arrow-down": "",
            "ios-arrow-forward": "",
            "ios-arrow-left": "",
            "ios-arrow-right": "",
            "ios-arrow-thin-down": "",
            "ios-arrow-thin-left": "",
            "ios-arrow-thin-right": "",
            "ios-arrow-thin-up": "",
            "ios-arrow-up": "",
            "ios-at": "",
            "ios-at-outline": "",
            "ios-barcode": "",
            "ios-barcode-outline": "",
            "ios-baseball": "",
            "ios-baseball-outline": "",
            "ios-basketball": "",
            "ios-basketball-outline": "",
            "ios-bell": "",
            "ios-bell-outline": "",
            "ios-body": "",
            "ios-body-outline": "",
            "ios-bolt": "",
            "ios-bolt-outline": "",
            "ios-book": "",
            "ios-book-outline": "",
            "ios-bookmarks": "",
            "ios-bookmarks-outline": "",
            "ios-box": "",
            "ios-box-outline": "",
            "ios-briefcase": "",
            "ios-briefcase-outline": "",
            "ios-browsers": "",
            "ios-browsers-outline": "",
            "ios-calculator": "",
            "ios-calculator-outline": "",
            "ios-calendar": "",
            "ios-calendar-outline": "",
            "ios-camera": "",
            "ios-camera-outline": "",
            "ios-cart": "",
            "ios-cart-outline": "",
            "ios-chatboxes": "",
            "ios-chatboxes-outline": "",
            "ios-chatbubble": "",
            "ios-chatbubble-outline": "",
            "ios-checkmark": "",
            "ios-checkmark-empty": "",
            "ios-checkmark-outline": "",
            "ios-circle-filled": "",
            "ios-circle-outline": "",
            "ios-clock": "",
            "ios-clock-outline": "",
            "ios-close": "",
            "ios-close-empty": "",
            "ios-close-outline": "",
            "ios-cloud": "",
            "ios-cloud-download": "",
            "ios-cloud-download-outline": "",
            "ios-cloud-outline": "",
            "ios-cloud-upload": "",
            "ios-cloud-upload-outline": "",
            "ios-cloudy": "",
            "ios-cloudy-night": "",
            "ios-cloudy-night-outline": "",
            "ios-cloudy-outline": "",
            "ios-cog": "",
            "ios-cog-outline": "",
            "ios-color-filter": "",
            "ios-color-filter-outline": "",
            "ios-color-wand": "",
            "ios-color-wand-outline": "",
            "ios-compose": "",
            "ios-compose-outline": "",
            "ios-contact": "",
            "ios-contact-outline": "",
            "ios-copy": "",
            "ios-copy-outline": "",
            "ios-crop": "",
            "ios-crop-strong": "",
            "ios-download": "",
            "ios-download-outline": "",
            "ios-drag": "",
            "ios-email": "",
            "ios-email-outline": "",
            "ios-eye": "",
            "ios-eye-outline": "",
            "ios-fastforward": "",
            "ios-fastforward-outline": "",
            "ios-filing": "",
            "ios-filing-outline": "",
            "ios-film": "",
            "ios-film-outline": "",
            "ios-flag": "",
            "ios-flag-outline": "",
            "ios-flame": "",
            "ios-flame-outline": "",
            "ios-flask": "",
            "ios-flask-outline": "",
            "ios-flower": "",
            "ios-flower-outline": "",
            "ios-folder": "",
            "ios-folder-outline": "",
            "ios-football": "",
            "ios-football-outline": "",
            "ios-game-controller-a": "",
            "ios-game-controller-a-outline": "",
            "ios-game-controller-b": "",
            "ios-game-controller-b-outline": "",
            "ios-gear": "",
            "ios-gear-outline": "",
            "ios-glasses": "",
            "ios-glasses-outline": "",
            "ios-grid-view": "",
            "ios-grid-view-outline": "",
            "ios-heart": "",
            "ios-heart-outline": "",
            "ios-help": "",
            "ios-help-empty": "",
            "ios-help-outline": "",
            "ios-home": "",
            "ios-home-outline": "",
            "ios-infinite": "",
            "ios-infinite-outline": "",
            "ios-information": "",
            "ios-information-empty": "",
            "ios-information-outline": "",
            "ios-ionic-outline": "",
            "ios-keypad": "",
            "ios-keypad-outline": "",
            "ios-lightbulb": "",
            "ios-lightbulb-outline": "",
            "ios-list": "",
            "ios-list-outline": "",
            "ios-location": "",
            "ios-location-outline": "",
            "ios-locked": "",
            "ios-locked-outline": "",
            "ios-loop": "",
            "ios-loop-strong": "",
            "ios-medical": "",
            "ios-medical-outline": "",
            "ios-medkit": "",
            "ios-medkit-outline": "",
            "ios-mic": "",
            "ios-mic-off": "",
            "ios-mic-outline": "",
            "ios-minus": "",
            "ios-minus-empty": "",
            "ios-minus-outline": "",
            "ios-monitor": "",
            "ios-monitor-outline": "",
            "ios-moon": "",
            "ios-moon-outline": "",
            "ios-more": "",
            "ios-more-outline": "",
            "ios-musical-note": "",
            "ios-musical-notes": "",
            "ios-navigate": "",
            "ios-navigate-outline": "",
            "ios-nutrition": "",
            "ios-nutrition-outline": "",
            "ios-paper": "",
            "ios-paper-outline": "",
            "ios-paperplane": "",
            "ios-paperplane-outline": "",
            "ios-partlysunny": "",
            "ios-partlysunny-outline": "",
            "ios-pause": "",
            "ios-pause-outline": "",
            "ios-paw": "",
            "ios-paw-outline": "",
            "ios-people": "",
            "ios-people-outline": "",
            "ios-person": "",
            "ios-person-outline": "",
            "ios-personadd": "",
            "ios-personadd-outline": "",
            "ios-photos": "",
            "ios-photos-outline": "",
            "ios-pie": "",
            "ios-pie-outline": "",
            "ios-pint": "",
            "ios-pint-outline": "",
            "ios-play": "",
            "ios-play-outline": "",
            "ios-plus": "",
            "ios-plus-empty": "",
            "ios-plus-outline": "",
            "ios-pricetag": "",
            "ios-pricetag-outline": "",
            "ios-pricetags": "",
            "ios-pricetags-outline": "",
            "ios-printer": "",
            "ios-printer-outline": "",
            "ios-pulse": "",
            "ios-pulse-strong": "",
            "ios-rainy": "",
            "ios-rainy-outline": "",
            "ios-recording": "",
            "ios-recording-outline": "",
            "ios-redo": "",
            "ios-redo-outline": "",
            "ios-refresh": "",
            "ios-refresh-empty": "",
            "ios-refresh-outline": "",
            "ios-reload": "",
            "ios-reverse-camera": "",
            "ios-reverse-camera-outline": "",
            "ios-rewind": "",
            "ios-rewind-outline": "",
            "ios-rose": "",
            "ios-rose-outline": "",
            "ios-search": "",
            "ios-search-strong": "",
            "ios-settings": "",
            "ios-settings-strong": "",
            "ios-shuffle": "",
            "ios-shuffle-strong": "",
            "ios-skipbackward": "",
            "ios-skipbackward-outline": "",
            "ios-skipforward": "",
            "ios-skipforward-outline": "",
            "ios-snowy": "",
            "ios-speedometer": "",
            "ios-speedometer-outline": "",
            "ios-star": "",
            "ios-star-half": "",
            "ios-star-outline": "",
            "ios-stopwatch": "",
            "ios-stopwatch-outline": "",
            "ios-sunny": "",
            "ios-sunny-outline": "",
            "ios-telephone": "",
            "ios-telephone-outline": "",
            "ios-tennisball": "",
            "ios-tennisball-outline": "",
            "ios-thunderstorm": "",
            "ios-thunderstorm-outline": "",
            "ios-time": "",
            "ios-time-outline": "",
            "ios-timer": "",
            "ios-timer-outline": "",
            "ios-toggle": "",
            "ios-toggle-outline": "",
            "ios-trash": "",
            "ios-trash-outline": "",
            "ios-undo": "",
            "ios-undo-outline": "",
            "ios-unlocked": "",
            "ios-unlocked-outline": "",
            "ios-upload": "",
            "ios-upload-outline": "",
            "ios-videocam": "",
            "ios-videocam-outline": "",
            "ios-volume-high": "",
            "ios-volume-low": "",
            "ios-wineglass": "",
            "ios-wineglass-outline": "",
            "ios-world": "",
            "ios-world-outline": "",
            ipad: "",
            iphone: "",
            ipod: "",
            jet: "",
            key: "",
            knife: "",
            laptop: "",
            leaf: "",
            levels: "",
            lightbulb: "",
            link: "",
            "load-a": "",
            "load-b": "",
            "load-c": "",
            "load-d": "",
            location: "",
            "lock-combination": "",
            locked: "",
            "log-in": "",
            "log-out": "",
            loop: "",
            magnet: "",
            male: "",
            man: "",
            map: "",
            medkit: "",
            merge: "",
            "mic-a": "",
            "mic-b": "",
            "mic-c": "",
            minus: "",
            "minus-circled": "",
            "minus-round": "",
            "model-s": "",
            monitor: "",
            more: "",
            mouse: "",
            "music-note": "",
            navicon: "",
            "navicon-round": "",
            navigate: "",
            network: "",
            "no-smoking": "",
            nuclear: "",
            outlet: "",
            paintbrush: "",
            paintbucket: "",
            "paper-airplane": "",
            paperclip: "",
            pause: "",
            person: "",
            "person-add": "",
            "person-stalker": "",
            "pie-graph": "",
            pin: "",
            pinpoint: "",
            pizza: "",
            plane: "",
            planet: "",
            play: "",
            playstation: "",
            plus: "",
            "plus-circled": "",
            "plus-round": "",
            podium: "",
            pound: "",
            power: "",
            pricetag: "",
            pricetags: "",
            printer: "",
            "pull-request": "",
            "qr-scanner": "",
            quote: "",
            "radio-waves": "",
            record: "",
            refresh: "",
            reply: "",
            "reply-all": "",
            "ribbon-a": "",
            "ribbon-b": "",
            sad: "",
            "sad-outline": "",
            scissors: "",
            search: "",
            settings: "",
            share: "",
            shuffle: "",
            "skip-backward": "",
            "skip-forward": "",
            "social-android": "",
            "social-android-outline": "",
            "social-angular": "",
            "social-angular-outline": "",
            "social-apple": "",
            "social-apple-outline": "",
            "social-bitcoin": "",
            "social-bitcoin-outline": "",
            "social-buffer": "",
            "social-buffer-outline": "",
            "social-chrome": "",
            "social-chrome-outline": "",
            "social-codepen": "",
            "social-codepen-outline": "",
            "social-css3": "",
            "social-css3-outline": "",
            "social-designernews": "",
            "social-designernews-outline": "",
            "social-dribbble": "",
            "social-dribbble-outline": "",
            "social-dropbox": "",
            "social-dropbox-outline": "",
            "social-euro": "",
            "social-euro-outline": "",
            "social-facebook": "",
            "social-facebook-outline": "",
            "social-foursquare": "",
            "social-foursquare-outline": "",
            "social-freebsd-devil": "",
            "social-github": "",
            "social-github-outline": "",
            "social-google": "",
            "social-google-outline": "",
            "social-googleplus": "",
            "social-googleplus-outline": "",
            "social-hackernews": "",
            "social-hackernews-outline": "",
            "social-html5": "",
            "social-html5-outline": "",
            "social-instagram": "",
            "social-instagram-outline": "",
            "social-javascript": "",
            "social-javascript-outline": "",
            "social-linkedin": "",
            "social-linkedin-outline": "",
            "social-markdown": "",
            "social-nodejs": "",
            "social-octocat": "",
            "social-pinterest": "",
            "social-pinterest-outline": "",
            "social-python": "",
            "social-reddit": "",
            "social-reddit-outline": "",
            "social-rss": "",
            "social-rss-outline": "",
            "social-sass": "",
            "social-skype": "",
            "social-skype-outline": "",
            "social-snapchat": "",
            "social-snapchat-outline": "",
            "social-tumblr": "",
            "social-tumblr-outline": "",
            "social-tux": "",
            "social-twitch": "",
            "social-twitch-outline": "",
            "social-twitter": "",
            "social-twitter-outline": "",
            "social-usd": "",
            "social-usd-outline": "",
            "social-vimeo": "",
            "social-vimeo-outline": "",
            "social-whatsapp": "",
            "social-whatsapp-outline": "",
            "social-windows": "",
            "social-windows-outline": "",
            "social-wordpress": "",
            "social-wordpress-outline": "",
            "social-yahoo": "",
            "social-yahoo-outline": "",
            "social-yen": "",
            "social-yen-outline": "",
            "social-youtube": "",
            "social-youtube-outline": "",
            "soup-can": "",
            "soup-can-outline": "",
            speakerphone: "",
            speedometer: "",
            spoon: "",
            star: "",
            "stats-bars": "",
            steam: "",
            stop: "",
            thermometer: "",
            thumbsdown: "",
            thumbsup: "",
            toggle: "",
            "toggle-filled": "",
            transgender: "",
            "trash-a": "",
            "trash-b": "",
            trophy: "",
            tshirt: "",
            "tshirt-outline": "",
            umbrella: "",
            university: "",
            unlocked: "",
            upload: "",
            usb: "",
            videocamera: "",
            "volume-high": "",
            "volume-low": "",
            "volume-medium": "",
            "volume-mute": "",
            wand: "",
            waterdrop: "",
            wifi: "",
            wineglass: "",
            woman: "",
            wrench: "",
            xbox: "",
          }),
          (window.getUniqueId = function (t) {
            return (
              t +
              "_" +
              new Date().getTime().toString() +
              Math.random().toString().replace(".", "")
            )
          }),
          (window.getTextWidth = function (t, e) {
            var i = (
              getTextWidth.canvas ||
              (getTextWidth.canvas = document.createElement("canvas"))
            ).getContext("2d")
            return (i.font = e), i.measureText(t).width
          }),
          (window.drawText = function (
            t,
            e,
            i,
            r,
            o,
            n,
            a = 1,
            s = "center",
            l = "middle",
            u = "normal"
          ) {
            ;(t.font = u + " " + r + " " + o),
              (t.fillStyle = n),
              (t.textAlign = s),
              (t.textBaseline = l),
              t.scale(a, a),
              t.clearRect(0, 0, e.width, e.height)
            var d = i + ""
            if (d.match("char#")) {
              var c = d.substring(d.indexOf("#") + 1)
              "left" == s
                ? t.fillText(String.fromCharCode(c), e.height / 8, e.height / 2)
                : t.fillText(String.fromCharCode(c), e.width / 2, e.height / 2)
            } else
              "left" == s
                ? t.fillText(d, e.height / 8, e.height / 2)
                : t.fillText(d, e.width / 2, e.height / 2)
          }),
          (window.drawIcon = function (t, e, i, r, o, n = 1) {
            ;(t.font = i + " Ionicons"),
              (t.fillStyle = o),
              (t.textAlign = "center"),
              (t.textBaseline = "middle"),
              t.clearRect(0, 0, e.width, e.height),
              t.scale(n, n),
              icon_font[r]
                ? t.fillText(icon_font[r], e.width / 2, e.height / 2)
                : t.fillText("?", e.width / 2, e.height / 2)
          })
      },
      546: () => {
        !(function (t, e) {
          "use strict"
          function i(t) {
            return t && "object" == typeof t && "default" in t
              ? t
              : { default: t }
          }
          function r(t) {
            if (t && t.__esModule) return t
            var e = Object.create(null)
            return (
              t &&
                Object.keys(t).forEach(function (i) {
                  if ("default" !== i) {
                    var r = Object.getOwnPropertyDescriptor(t, i)
                    Object.defineProperty(
                      e,
                      i,
                      r.get
                        ? r
                        : {
                            enumerable: !0,
                            get: function () {
                              return t[i]
                            },
                          }
                    )
                  }
                }),
              (e.default = t),
              Object.freeze(e)
            )
          }
          var o = r(t),
            n = i(e)
          function a() {
            var t = Object.create(null)
            function e(r, o) {
              var n = r.id,
                a = r.name,
                s = r.dependencies
              void 0 === s && (s = [])
              var l = r.init
              void 0 === l && (l = function () {})
              var u = r.getTransferables
              if ((void 0 === u && (u = null), !t[n]))
                try {
                  ;(s = s.map(function (i) {
                    return (
                      i &&
                        i.isWorkerModule &&
                        (e(i, function (t) {
                          if (t instanceof Error) throw t
                        }),
                        (i = t[i.id].value)),
                      i
                    )
                  })),
                    (l = i("<" + a + ">.init", l)),
                    u && (u = i("<" + a + ">.getTransferables", u))
                  var d = null
                  "function" == typeof l
                    ? (d = l.apply(void 0, s))
                    : console.error(
                        "worker module init function failed to rehydrate"
                      ),
                    (t[n] = { id: n, value: d, getTransferables: u }),
                    o(d)
                } catch (t) {
                  ;(t && t.noLog) || console.error(t), o(t)
                }
            }
            function i(t, e) {
              var i = void 0
              self.troikaDefine = function (t) {
                return (i = t)
              }
              var r = URL.createObjectURL(
                new Blob(
                  [
                    "/** " +
                      t.replace(/\*/g, "") +
                      " **/\n\ntroikaDefine(\n" +
                      e +
                      "\n)",
                  ],
                  { type: "application/javascript" }
                )
              )
              try {
                importScripts(r)
              } catch (t) {
                console.error(t)
              }
              return URL.revokeObjectURL(r), delete self.troikaDefine, i
            }
            self.addEventListener("message", function (i) {
              var r = i.data,
                o = r.messageId,
                n = r.action,
                a = r.data
              try {
                "registerModule" === n &&
                  e(a, function (t) {
                    t instanceof Error
                      ? postMessage({
                          messageId: o,
                          success: !1,
                          error: t.message,
                        })
                      : postMessage({
                          messageId: o,
                          success: !0,
                          result: { isCallable: "function" == typeof t },
                        })
                  }),
                  "callModule" === n &&
                    (function (e, i) {
                      var r,
                        o = e.id,
                        n = e.args
                      ;(t[o] && "function" == typeof t[o].value) ||
                        i(
                          new Error(
                            "Worker module " +
                              o +
                              ": not found or its 'init' did not return a function"
                          )
                        )
                      try {
                        var a = (r = t[o]).value.apply(r, n)
                        a && "function" == typeof a.then
                          ? a.then(s, function (t) {
                              return i(
                                t instanceof Error ? t : new Error("" + t)
                              )
                            })
                          : s(a)
                      } catch (t) {
                        i(t)
                      }
                      function s(e) {
                        try {
                          var r =
                            t[o].getTransferables && t[o].getTransferables(e)
                          ;(r && Array.isArray(r) && r.length) || (r = void 0),
                            i(e, r)
                        } catch (t) {
                          console.error(t), i(t)
                        }
                      }
                    })(a, function (t, e) {
                      t instanceof Error
                        ? postMessage({
                            messageId: o,
                            success: !1,
                            error: t.message,
                          })
                        : postMessage(
                            { messageId: o, success: !0, result: t },
                            e || void 0
                          )
                    })
              } catch (t) {
                postMessage({ messageId: o, success: !1, error: t.stack })
              }
            })
          }
          var s = function () {
              var t = !1
              if ("undefined" != typeof window && void 0 !== window.document)
                try {
                  new Worker(
                    URL.createObjectURL(
                      new Blob([""], { type: "application/javascript" })
                    )
                  ).terminate(),
                    (t = !0)
                } catch (t) {
                  console.log(
                    "Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [" +
                      t.message +
                      "]"
                  )
                }
              return (
                (s = function () {
                  return t
                }),
                t
              )
            },
            l = 0,
            u = 0,
            d = !1,
            c = Object.create(null),
            h = Object.create(null),
            f = Object.create(null)
          function g(t) {
            if (!((t && "function" == typeof t.init) || d))
              throw new Error("requires `options.init` function")
            var e = t.dependencies,
              i = t.init,
              r = t.getTransferables,
              o = t.workerId
            if (!s())
              return (function (t) {
                var e = function () {
                  for (var t = [], i = arguments.length; i--; )
                    t[i] = arguments[i]
                  return e._getInitResult().then(function (e) {
                    if ("function" == typeof e) return e.apply(void 0, t)
                    throw new Error(
                      "Worker module function was called but `init` did not return a callable function"
                    )
                  })
                }
                return (
                  (e._getInitResult = function () {
                    var i = t.dependencies,
                      r = t.init
                    i = Array.isArray(i)
                      ? i.map(function (t) {
                          return t && t._getInitResult ? t._getInitResult() : t
                        })
                      : []
                    var o = Promise.all(i).then(function (t) {
                      return r.apply(null, t)
                    })
                    return (
                      (e._getInitResult = function () {
                        return o
                      }),
                      o
                    )
                  }),
                  e
                )
              })(t)
            null == o && (o = "#default")
            var n = "workerModule" + ++l,
              a = t.name || n,
              u = null
            function c() {
              for (var t = [], e = arguments.length; e--; ) t[e] = arguments[e]
              if (!u) {
                u = m(o, "registerModule", c.workerModuleData)
                var i = function () {
                  ;(u = null), h[o].delete(i)
                }
                ;(h[o] || (h[o] = new Set())).add(i)
              }
              return u.then(function (e) {
                if (e.isCallable) return m(o, "callModule", { id: n, args: t })
                throw new Error(
                  "Worker module function was called but `init` did not return a callable function"
                )
              })
            }
            return (
              (e =
                e &&
                e.map(function (t) {
                  return (
                    "function" != typeof t ||
                      t.workerModuleData ||
                      ((d = !0),
                      (t = g({
                        workerId: o,
                        name: "<" + a + "> function dependency: " + t.name,
                        init: "function(){return (\n" + p(t) + "\n)}",
                      })),
                      (d = !1)),
                    t && t.workerModuleData && (t = t.workerModuleData),
                    t
                  )
                })),
              (c.workerModuleData = {
                isWorkerModule: !0,
                id: n,
                name: a,
                dependencies: e,
                init: p(i),
                getTransferables: r && p(r),
              }),
              c
            )
          }
          function p(t) {
            var e = t.toString()
            return (
              !/^function/.test(e) &&
                /^\w+\s*\(/.test(e) &&
                (e = "function " + e),
              e
            )
          }
          function m(t, e, i) {
            return new Promise(function (r, o) {
              var n = ++u
              ;(f[n] = function (t) {
                t.success
                  ? r(t.result)
                  : o(new Error("Error in worker " + e + " call: " + t.error))
              }),
                (function (t) {
                  var e = c[t]
                  if (!e) {
                    var i = p(a)
                    ;(e = c[t] =
                      new Worker(
                        URL.createObjectURL(
                          new Blob(
                            [
                              "/** Worker Module Bootstrap: " +
                                t.replace(/\*/g, "") +
                                " **/\n\n;(" +
                                i +
                                ")()",
                            ],
                            { type: "application/javascript" }
                          )
                        )
                      )).onmessage = function (t) {
                      var e = t.data,
                        i = e.messageId,
                        r = f[i]
                      if (!r)
                        throw new Error(
                          "WorkerModule response with empty or unknown messageId"
                        )
                      delete f[i], r(e)
                    }
                  }
                  return e
                })(t).postMessage({ messageId: n, action: e, data: i })
            })
          }
          function v() {
            var t = (function (t) {
              function e(t, e, i, r, o, n, a, s, l, u) {
                var d = 1 - l
                ;(u.x =
                  d * d * d * t +
                  3 * d * d * l * i +
                  3 * d * l * l * o +
                  l * l * l * a),
                  (u.y =
                    d * d * d * e +
                    3 * d * d * l * r +
                    3 * d * l * l * n +
                    l * l * l * s)
              }
              function i(t, e) {
                for (
                  var i, r, o, n, a, s = /([MLQCZ])([^MLQCZ]*)/g;
                  (i = s.exec(t));

                ) {
                  var l = i[2]
                    .replace(/^\s*|\s*$/g, "")
                    .split(/[,\s]+/)
                    .map(function (t) {
                      return parseFloat(t)
                    })
                  switch (i[1]) {
                    case "M":
                      ;(n = r = l[0]), (a = o = l[1])
                      break
                    case "L":
                      ;(l[0] === n && l[1] === a) ||
                        e("L", n, a, (n = l[0]), (a = l[1]))
                      break
                    case "Q":
                      e("Q", n, a, (n = l[2]), (a = l[3]), l[0], l[1])
                      break
                    case "C":
                      e(
                        "C",
                        n,
                        a,
                        (n = l[4]),
                        (a = l[5]),
                        l[0],
                        l[1],
                        l[2],
                        l[3]
                      )
                      break
                    case "Z":
                      ;(n === r && a === o) || e("L", n, a, r, o)
                  }
                }
              }
              function r(t, r, o) {
                void 0 === o && (o = 16)
                var n = { x: 0, y: 0 }
                i(t, function (t, i, a, s, l, u, d, c, h) {
                  switch (t) {
                    case "L":
                      r(i, a, s, l)
                      break
                    case "Q":
                      for (var f = i, g = a, p = 1; p < o; p++)
                        (y = a),
                          (A = d),
                          (w = l),
                          (x = void 0),
                          (x = 1 - (k = p / (o - 1))),
                          ((C = n).x = x * x * i + 2 * x * k * u + k * k * s),
                          (C.y = x * x * y + 2 * x * k * A + k * k * w),
                          r(f, g, n.x, n.y),
                          (f = n.x),
                          (g = n.y)
                      break
                    case "C":
                      for (var m = i, v = a, b = 1; b < o; b++)
                        e(i, a, u, d, c, h, s, l, b / (o - 1), n),
                          r(m, v, n.x, n.y),
                          (m = n.x),
                          (v = n.y)
                  }
                  var y, A, w, k, C, x
                })
              }
              var o =
                  "precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",
                n =
                  "precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",
                a = new WeakMap(),
                s = {
                  premultipliedAlpha: !1,
                  preserveDrawingBuffer: !0,
                  antialias: !1,
                  depth: !1,
                }
              function l(t, e) {
                var i = t.getContext ? t.getContext("webgl", s) : t,
                  r = a.get(i)
                if (!r) {
                  var o =
                      "undefined" != typeof WebGL2RenderingContext &&
                      i instanceof WebGL2RenderingContext,
                    n = {},
                    l = {},
                    u = {},
                    d = -1,
                    c = []
                  function h(t) {
                    var e = n[t]
                    if (!e && !(e = n[t] = i.getExtension(t)))
                      throw new Error(t + " not supported")
                    return e
                  }
                  function f(t, e) {
                    var r = i.createShader(e)
                    return i.shaderSource(r, t), i.compileShader(r), r
                  }
                  function g(t, e, r, n) {
                    if (!l[t]) {
                      var a = {},
                        s = {},
                        u = i.createProgram()
                      i.attachShader(u, f(e, i.VERTEX_SHADER)),
                        i.attachShader(u, f(r, i.FRAGMENT_SHADER)),
                        i.linkProgram(u),
                        (l[t] = {
                          program: u,
                          transaction: function (t) {
                            i.useProgram(u),
                              t({
                                setUniform: function (t, e) {
                                  for (
                                    var r = [], o = arguments.length - 2;
                                    o-- > 0;

                                  )
                                    r[o] = arguments[o + 2]
                                  var n =
                                    s[e] || (s[e] = i.getUniformLocation(u, e))
                                  i["uniform" + t].apply(i, [n].concat(r))
                                },
                                setAttribute: function (t, e, r, n, s) {
                                  var l = a[t]
                                  l ||
                                    (l = a[t] =
                                      {
                                        buf: i.createBuffer(),
                                        loc: i.getAttribLocation(u, t),
                                        data: null,
                                      }),
                                    i.bindBuffer(i.ARRAY_BUFFER, l.buf),
                                    i.vertexAttribPointer(
                                      l.loc,
                                      e,
                                      i.FLOAT,
                                      !1,
                                      0,
                                      0
                                    ),
                                    i.enableVertexAttribArray(l.loc),
                                    o
                                      ? i.vertexAttribDivisor(l.loc, n)
                                      : h(
                                          "ANGLE_instanced_arrays"
                                        ).vertexAttribDivisorANGLE(l.loc, n),
                                    s !== l.data &&
                                      (i.bufferData(i.ARRAY_BUFFER, s, r),
                                      (l.data = s))
                                },
                              })
                          },
                        })
                    }
                    l[t].transaction(n)
                  }
                  function p(t, e) {
                    d++
                    try {
                      i.activeTexture(i.TEXTURE0 + d)
                      var r = u[t]
                      r ||
                        ((r = u[t] = i.createTexture()),
                        i.bindTexture(i.TEXTURE_2D, r),
                        i.texParameteri(
                          i.TEXTURE_2D,
                          i.TEXTURE_MIN_FILTER,
                          i.NEAREST
                        ),
                        i.texParameteri(
                          i.TEXTURE_2D,
                          i.TEXTURE_MAG_FILTER,
                          i.NEAREST
                        )),
                        i.bindTexture(i.TEXTURE_2D, r),
                        e(r, d)
                    } finally {
                      d--
                    }
                  }
                  function m(t, e, r) {
                    var o = i.createFramebuffer()
                    c.push(o),
                      i.bindFramebuffer(i.FRAMEBUFFER, o),
                      i.activeTexture(i.TEXTURE0 + e),
                      i.bindTexture(i.TEXTURE_2D, t),
                      i.framebufferTexture2D(
                        i.FRAMEBUFFER,
                        i.COLOR_ATTACHMENT0,
                        i.TEXTURE_2D,
                        t,
                        0
                      )
                    try {
                      r(o)
                    } finally {
                      i.deleteFramebuffer(o),
                        i.bindFramebuffer(
                          i.FRAMEBUFFER,
                          c[--c.length - 1] || null
                        )
                    }
                  }
                  function v() {
                    ;(n = {}), (l = {}), (u = {}), (d = -1), (c.length = 0)
                  }
                  i.canvas.addEventListener(
                    "webglcontextlost",
                    function (t) {
                      v(), t.preventDefault()
                    },
                    !1
                  ),
                    a.set(
                      i,
                      (r = {
                        gl: i,
                        isWebGL2: o,
                        getExtension: h,
                        withProgram: g,
                        withTexture: p,
                        withTextureFramebuffer: m,
                        handleContextLoss: v,
                      })
                    )
                }
                e(r)
              }
              function u(t, e, i, r, a, s, u, d) {
                void 0 === u && (u = 15),
                  void 0 === d && (d = null),
                  l(t, function (t) {
                    var l = t.gl,
                      c = t.withProgram
                    ;(0, t.withTexture)("copy", function (t, h) {
                      l.texImage2D(
                        l.TEXTURE_2D,
                        0,
                        l.RGBA,
                        a,
                        s,
                        0,
                        l.RGBA,
                        l.UNSIGNED_BYTE,
                        e
                      ),
                        c("copy", o, n, function (t) {
                          var e = t.setUniform
                          ;(0, t.setAttribute)(
                            "aUV",
                            2,
                            l.STATIC_DRAW,
                            0,
                            new Float32Array([0, 0, 2, 0, 0, 2])
                          ),
                            e("1i", "image", h),
                            l.bindFramebuffer(l.FRAMEBUFFER, d || null),
                            l.disable(l.BLEND),
                            l.colorMask(8 & u, 4 & u, 2 & u, 1 & u),
                            l.viewport(i, r, a, s),
                            l.scissor(i, r, a, s),
                            l.drawArrays(l.TRIANGLES, 0, 3)
                        })
                    })
                  })
              }
              var d = Object.freeze({
                __proto__: null,
                withWebGLContext: l,
                renderImageData: u,
                resizeWebGLCanvasWithoutClearing: function (t, e, i) {
                  var r = t.width,
                    o = t.height
                  l(t, function (n) {
                    var a = n.gl,
                      s = new Uint8Array(r * o * 4)
                    a.readPixels(0, 0, r, o, a.RGBA, a.UNSIGNED_BYTE, s),
                      (t.width = e),
                      (t.height = i),
                      u(a, s, 0, 0, r, o)
                  })
                },
              })
              function c(t, e, i, o, n, a) {
                void 0 === a && (a = 1)
                var s = new Uint8Array(t * e),
                  l = o[2] - o[0],
                  u = o[3] - o[1],
                  d = []
                r(i, function (t, e, i, r) {
                  d.push({
                    x1: t,
                    y1: e,
                    x2: i,
                    y2: r,
                    minX: Math.min(t, i),
                    minY: Math.min(e, r),
                    maxX: Math.max(t, i),
                    maxY: Math.max(e, r),
                  })
                }),
                  d.sort(function (t, e) {
                    return t.maxX - e.maxX
                  })
                for (var c = 0; c < t; c++)
                  for (var h = 0; h < e; h++) {
                    var f = m(
                        o[0] + (l * (c + 0.5)) / t,
                        o[1] + (u * (h + 0.5)) / e
                      ),
                      p = Math.pow(1 - Math.abs(f) / n, a) / 2
                    f < 0 && (p = 1 - p),
                      (p = Math.max(0, Math.min(255, Math.round(255 * p)))),
                      (s[h * t + c] = p)
                  }
                return s
                function m(t, e) {
                  for (var i = 1 / 0, r = 1 / 0, o = d.length; o--; ) {
                    var n = d[o]
                    if (n.maxX + r <= t) break
                    if (t + r > n.minX && e - r < n.maxY && e + r > n.minY) {
                      var a = g(t, e, n.x1, n.y1, n.x2, n.y2)
                      a < i && ((i = a), (r = Math.sqrt(i)))
                    }
                  }
                  return (
                    (function (t, e) {
                      for (var i = 0, r = d.length; r--; ) {
                        var o = d[r]
                        if (o.maxX <= t) break
                        o.y1 > e != o.y2 > e &&
                          t <
                            ((o.x2 - o.x1) * (e - o.y1)) / (o.y2 - o.y1) +
                              o.x1 &&
                          (i += o.y1 < o.y2 ? 1 : -1)
                      }
                      return 0 !== i
                    })(t, e) && (r = -r),
                    r
                  )
                }
              }
              function h(t, e, i, r, o, n, a, s, l, u) {
                void 0 === n && (n = 1),
                  void 0 === s && (s = 0),
                  void 0 === l && (l = 0),
                  void 0 === u && (u = 0),
                  f(t, e, i, r, o, n, a, null, s, l, u)
              }
              function f(t, e, i, r, o, n, a, s, l, d, h) {
                void 0 === n && (n = 1),
                  void 0 === l && (l = 0),
                  void 0 === d && (d = 0),
                  void 0 === h && (h = 0)
                for (
                  var f = c(t, e, i, r, o, n),
                    g = new Uint8Array(4 * f.length),
                    p = 0;
                  p < f.length;
                  p++
                )
                  g[4 * p + h] = f[p]
                u(a, g, l, d, t, e, 1 << (3 - h), s)
              }
              function g(t, e, i, r, o, n) {
                var a = o - i,
                  s = n - r,
                  l = a * a + s * s,
                  u = l
                    ? Math.max(0, Math.min(1, ((t - i) * a + (e - r) * s) / l))
                    : 0,
                  d = t - (i + u * a),
                  c = e - (r + u * s)
                return d * d + c * c
              }
              var p = Object.freeze({
                  __proto__: null,
                  generate: c,
                  generateIntoCanvas: h,
                  generateIntoFramebuffer: f,
                }),
                m =
                  "precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",
                v =
                  "precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",
                b =
                  "precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",
                y = new Float32Array([0, 0, 2, 0, 0, 2]),
                A = null,
                w = !1,
                k = {},
                C = new WeakMap()
              function x(t) {
                if (!w && !T(t))
                  throw new Error("WebGL generation not supported")
              }
              function S(t, e, i, r, o, n, a) {
                if (
                  (void 0 === n && (n = 1),
                  void 0 === a && (a = null),
                  !a && !(a = A))
                ) {
                  var s =
                    "function" == typeof OffscreenCanvas
                      ? new OffscreenCanvas(1, 1)
                      : "undefined" != typeof document
                      ? document.createElement("canvas")
                      : null
                  if (!s)
                    throw new Error(
                      "OffscreenCanvas or DOM canvas not supported"
                    )
                  a = A = s.getContext("webgl", { depth: !1 })
                }
                x(a)
                var u = new Uint8Array(t * e * 4)
                l(a, function (a) {
                  var s = a.gl,
                    l = a.withTexture,
                    d = a.withTextureFramebuffer
                  l("readable", function (a, l) {
                    s.texImage2D(
                      s.TEXTURE_2D,
                      0,
                      s.RGBA,
                      t,
                      e,
                      0,
                      s.RGBA,
                      s.UNSIGNED_BYTE,
                      null
                    ),
                      d(a, l, function (a) {
                        E(t, e, i, r, o, n, s, a, 0, 0, 0),
                          s.readPixels(0, 0, t, e, s.RGBA, s.UNSIGNED_BYTE, u)
                      })
                  })
                })
                for (
                  var d = new Uint8Array(t * e), c = 0, h = 0;
                  c < u.length;
                  c += 4
                )
                  d[h++] = u[c]
                return d
              }
              function _(t, e, i, r, o, n, a, s, l, u) {
                void 0 === n && (n = 1),
                  void 0 === s && (s = 0),
                  void 0 === l && (l = 0),
                  void 0 === u && (u = 0),
                  E(t, e, i, r, o, n, a, null, s, l, u)
              }
              function E(t, e, i, n, a, s, u, d, c, h, f) {
                void 0 === s && (s = 1),
                  void 0 === c && (c = 0),
                  void 0 === h && (h = 0),
                  void 0 === f && (f = 0),
                  x(u)
                var g = []
                r(i, function (t, e, i, r) {
                  g.push(t, e, i, r)
                }),
                  (g = new Float32Array(g)),
                  l(u, function (i) {
                    var r = i.gl,
                      l = i.isWebGL2,
                      u = i.getExtension,
                      p = i.withProgram,
                      A = i.withTexture,
                      w = i.withTextureFramebuffer,
                      k = i.handleContextLoss
                    if (
                      (A("rawDistances", function (i, A) {
                        ;(t === i._lastWidth && e === i._lastHeight) ||
                          r.texImage2D(
                            r.TEXTURE_2D,
                            0,
                            r.RGBA,
                            (i._lastWidth = t),
                            (i._lastHeight = e),
                            0,
                            r.RGBA,
                            r.UNSIGNED_BYTE,
                            null
                          ),
                          p("main", m, v, function (o) {
                            var d = o.setAttribute,
                              c = o.setUniform,
                              h = !l && u("ANGLE_instanced_arrays"),
                              f = !l && u("EXT_blend_minmax")
                            d("aUV", 2, r.STATIC_DRAW, 0, y),
                              d("aLineSegment", 4, r.DYNAMIC_DRAW, 1, g),
                              c.apply(void 0, ["4f", "uGlyphBounds"].concat(n)),
                              c("1f", "uMaxDistance", a),
                              c("1f", "uExponent", s),
                              w(i, A, function (i) {
                                r.enable(r.BLEND),
                                  r.colorMask(!0, !0, !0, !0),
                                  r.viewport(0, 0, t, e),
                                  r.scissor(0, 0, t, e),
                                  r.blendFunc(r.ONE, r.ONE),
                                  r.blendEquationSeparate(
                                    r.FUNC_ADD,
                                    l ? r.MAX : f.MAX_EXT
                                  ),
                                  r.clear(r.COLOR_BUFFER_BIT),
                                  l
                                    ? r.drawArraysInstanced(
                                        r.TRIANGLES,
                                        0,
                                        3,
                                        g.length / 4
                                      )
                                    : h.drawArraysInstancedANGLE(
                                        r.TRIANGLES,
                                        0,
                                        3,
                                        g.length / 4
                                      )
                              })
                          }),
                          p("post", o, b, function (i) {
                            i.setAttribute("aUV", 2, r.STATIC_DRAW, 0, y),
                              i.setUniform("1i", "tex", A),
                              r.bindFramebuffer(r.FRAMEBUFFER, d),
                              r.disable(r.BLEND),
                              r.colorMask(0 === f, 1 === f, 2 === f, 3 === f),
                              r.viewport(c, h, t, e),
                              r.scissor(c, h, t, e),
                              r.drawArrays(r.TRIANGLES, 0, 3)
                          })
                      }),
                      r.isContextLost())
                    )
                      throw (k(), new Error("webgl context lost"))
                  })
              }
              function T(t) {
                var e = t && t !== A ? t.canvas || t : k,
                  i = C.get(e)
                if (void 0 === i) {
                  w = !0
                  var r = null
                  try {
                    var o = [
                        97, 106, 97, 61, 99, 137, 118, 80, 80, 118, 137, 99, 61,
                        97, 106, 97,
                      ],
                      n = S(
                        4,
                        4,
                        "M8,8L16,8L24,24L16,24Z",
                        [0, 0, 32, 32],
                        24,
                        1,
                        t
                      )
                    ;(i =
                      n &&
                      o.length === n.length &&
                      n.every(function (t, e) {
                        return t === o[e]
                      })) || ((r = "bad trial run results"), console.info(o, n))
                  } catch (t) {
                    ;(i = !1), (r = t.message)
                  }
                  r && console.warn("WebGL SDF generation not supported:", r),
                    (w = !1),
                    C.set(e, i)
                }
                return i
              }
              var U = Object.freeze({
                __proto__: null,
                generate: S,
                generateIntoCanvas: _,
                generateIntoFramebuffer: E,
                isSupported: T,
              })
              return (
                (t.forEachPathCommand = i),
                (t.generate = function (t, e, i, r, o, n) {
                  void 0 === o && (o = Math.max(r[2] - r[0], r[3] - r[1]) / 2),
                    void 0 === n && (n = 1)
                  try {
                    return S.apply(U, arguments)
                  } catch (t) {
                    return (
                      console.info(
                        "WebGL SDF generation failed, falling back to JS",
                        t
                      ),
                      c.apply(p, arguments)
                    )
                  }
                }),
                (t.generateIntoCanvas = function (
                  t,
                  e,
                  i,
                  r,
                  o,
                  n,
                  a,
                  s,
                  l,
                  u
                ) {
                  void 0 === o && (o = Math.max(r[2] - r[0], r[3] - r[1]) / 2),
                    void 0 === n && (n = 1),
                    void 0 === s && (s = 0),
                    void 0 === l && (l = 0),
                    void 0 === u && (u = 0)
                  try {
                    return _.apply(U, arguments)
                  } catch (t) {
                    return (
                      console.info(
                        "WebGL SDF generation failed, falling back to JS",
                        t
                      ),
                      h.apply(p, arguments)
                    )
                  }
                }),
                (t.javascript = p),
                (t.pathToLineSegments = r),
                (t.webgl = U),
                (t.webglUtils = d),
                Object.defineProperty(t, "__esModule", { value: !0 }),
                t
              )
            })({})
            return t
          }
          const b = /\bvoid\s+main\s*\(\s*\)\s*{/g
          function y(e) {
            return e.replace(
              /^[ \t]*#include +<([\w\d./]+)>/gm,
              function (e, i) {
                let r = t.ShaderChunk[i]
                return r ? y(r) : e
              }
            )
          }
          const A = []
          for (let t = 0; t < 256; t++)
            A[t] = (t < 16 ? "0" : "") + t.toString(16)
          const w =
              Object.assign ||
              function () {
                let t = arguments[0]
                for (let e = 1, i = arguments.length; e < i; e++) {
                  let i = arguments[e]
                  if (i) for (let e in i) i.hasOwnProperty(e) && (t[e] = i[e])
                }
                return t
              },
            k = Date.now(),
            C = new WeakMap(),
            x = new Map()
          let S = 1e10
          function _(e, i) {
            const r = (function (t) {
              const e = JSON.stringify(t, T)
              let i = F.get(e)
              null == i && F.set(e, (i = ++U))
              return i
            })(i)
            let o = C.get(e)
            if ((o || C.set(e, (o = Object.create(null))), o[r]))
              return new o[r]()
            const n = `_onBeforeCompile${r}`,
              a = function (t) {
                e.onBeforeCompile.call(this, t)
                const o =
                  this.customProgramCacheKey() +
                  "|" +
                  t.vertexShader +
                  "|" +
                  t.fragmentShader
                let a = x[o]
                if (!a) {
                  const e = (function (
                    { vertexShader: t, fragmentShader: e },
                    i,
                    r
                  ) {
                    let {
                      vertexDefs: o,
                      vertexMainIntro: n,
                      vertexMainOutro: a,
                      vertexTransform: s,
                      fragmentDefs: l,
                      fragmentMainIntro: u,
                      fragmentMainOutro: d,
                      fragmentColorTransform: c,
                      customRewriter: h,
                      timeUniform: f,
                    } = i
                    ;(o = o || ""),
                      (n = n || ""),
                      (a = a || ""),
                      (l = l || ""),
                      (u = u || ""),
                      (d = d || ""),
                      (s || h) && (t = y(t))
                    ;(c || h) &&
                      (e = y(
                        (e = e.replace(
                          /^[ \t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,
                          "\n//!BEGIN_POST_CHUNK $1\n$&\n//!END_POST_CHUNK\n"
                        ))
                      ))
                    if (h) {
                      let i = h({ vertexShader: t, fragmentShader: e })
                      ;(t = i.vertexShader), (e = i.fragmentShader)
                    }
                    if (c) {
                      let t = []
                      ;(e = e.replace(
                        /^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,
                        (e) => (t.push(e), "")
                      )),
                        (d = `${c}\n${t.join("\n")}\n${d}`)
                    }
                    if (f) {
                      const t = `\nuniform float ${f};\n`
                      ;(o = t + o), (l = t + l)
                    }
                    s &&
                      ((o = `${o}\nvoid troikaVertexTransform${r}(inout vec3 position, inout vec3 normal, inout vec2 uv) {\n  ${s}\n}\n`),
                      (n = `\ntroika_position_${r} = vec3(position);\ntroika_normal_${r} = vec3(normal);\ntroika_uv_${r} = vec2(uv);\ntroikaVertexTransform${r}(troika_position_${r}, troika_normal_${r}, troika_uv_${r});\n${n}\n`),
                      (t =
                        (t = `vec3 troika_position_${r};\nvec3 troika_normal_${r};\nvec2 troika_uv_${r};\n${t}\n`).replace(
                          /\b(position|normal|uv)\b/g,
                          (t, e, i, o) =>
                            /\battribute\s+vec[23]\s+$/.test(o.substr(0, i))
                              ? e
                              : `troika_${e}_${r}`
                        )))
                    return (
                      (t = E(t, r, o, n, a)),
                      (e = E(e, r, l, u, d)),
                      { vertexShader: t, fragmentShader: e }
                    )
                  })(t, i, r)
                  a = x[o] = e
                }
                ;(t.vertexShader = a.vertexShader),
                  (t.fragmentShader = a.fragmentShader),
                  w(t.uniforms, this.uniforms),
                  i.timeUniform &&
                    (t.uniforms[i.timeUniform] = {
                      get value() {
                        return Date.now() - k
                      },
                    }),
                  this[n] && this[n](t)
              },
              s = function () {
                return l(i.chained ? e : e.clone())
              },
              l = function (t) {
                const o = Object.create(t, u)
                return (
                  Object.defineProperty(o, "baseMaterial", { value: e }),
                  Object.defineProperty(o, "id", { value: S++ }),
                  (o.uuid = (function () {
                    const t = (4294967295 * Math.random()) | 0,
                      e = (4294967295 * Math.random()) | 0,
                      i = (4294967295 * Math.random()) | 0,
                      r = (4294967295 * Math.random()) | 0
                    return (
                      A[255 & t] +
                      A[(t >> 8) & 255] +
                      A[(t >> 16) & 255] +
                      A[(t >> 24) & 255] +
                      "-" +
                      A[255 & e] +
                      A[(e >> 8) & 255] +
                      "-" +
                      A[((e >> 16) & 15) | 64] +
                      A[(e >> 24) & 255] +
                      "-" +
                      A[(63 & i) | 128] +
                      A[(i >> 8) & 255] +
                      "-" +
                      A[(i >> 16) & 255] +
                      A[(i >> 24) & 255] +
                      A[255 & r] +
                      A[(r >> 8) & 255] +
                      A[(r >> 16) & 255] +
                      A[(r >> 24) & 255]
                    ).toUpperCase()
                  })()),
                  (o.uniforms = w({}, t.uniforms, i.uniforms)),
                  (o.defines = w({}, t.defines, i.defines)),
                  (o.defines[`TROIKA_DERIVED_MATERIAL_${r}`] = ""),
                  (o.extensions = w({}, t.extensions, i.extensions)),
                  (o._listeners = void 0),
                  o
                )
              },
              u = {
                constructor: { value: s },
                isDerivedMaterial: { value: !0 },
                customProgramCacheKey: {
                  writable: !0,
                  configurable: !0,
                  value: function () {
                    return e.customProgramCacheKey() + "|" + r
                  },
                },
                onBeforeCompile: {
                  get: () => a,
                  set(t) {
                    this[n] = t
                  },
                },
                copy: {
                  writable: !0,
                  configurable: !0,
                  value: function (i) {
                    return (
                      e.copy.call(this, i),
                      e.isShaderMaterial ||
                        e.isDerivedMaterial ||
                        (w(this.extensions, i.extensions),
                        w(this.defines, i.defines),
                        w(this.uniforms, t.UniformsUtils.clone(i.uniforms))),
                      this
                    )
                  },
                },
                clone: {
                  writable: !0,
                  configurable: !0,
                  value: function () {
                    const t = new e.constructor()
                    return l(t).copy(this)
                  },
                },
                getDepthMaterial: {
                  writable: !0,
                  configurable: !0,
                  value: function () {
                    let r = this._depthMaterial
                    return (
                      r ||
                        ((r = this._depthMaterial =
                          _(
                            e.isDerivedMaterial
                              ? e.getDepthMaterial()
                              : new t.MeshDepthMaterial({
                                  depthPacking: t.RGBADepthPacking,
                                }),
                            i
                          )),
                        (r.defines.IS_DEPTH_MATERIAL = ""),
                        (r.uniforms = this.uniforms)),
                      r
                    )
                  },
                },
                getDistanceMaterial: {
                  writable: !0,
                  configurable: !0,
                  value: function () {
                    let r = this._distanceMaterial
                    return (
                      r ||
                        ((r = this._distanceMaterial =
                          _(
                            e.isDerivedMaterial
                              ? e.getDistanceMaterial()
                              : new t.MeshDistanceMaterial(),
                            i
                          )),
                        (r.defines.IS_DISTANCE_MATERIAL = ""),
                        (r.uniforms = this.uniforms)),
                      r
                    )
                  },
                },
                dispose: {
                  writable: !0,
                  configurable: !0,
                  value() {
                    const { _depthMaterial: t, _distanceMaterial: i } = this
                    t && t.dispose(), i && i.dispose(), e.dispose.call(this)
                  },
                },
              }
            return (o[r] = s), new s()
          }
          function E(t, e, i, r, o) {
            return (
              (r || o || i) &&
                ((t = t.replace(b, `\n${i}\nvoid troikaOrigMain${e}() {`)),
                (t += `\nvoid main() {\n  ${r}\n  troikaOrigMain${e}();\n  ${o}\n}`)),
              t
            )
          }
          function T(t, e) {
            return "uniforms" === t
              ? void 0
              : "function" == typeof e
              ? e.toString()
              : e
          }
          let U = 0
          const F = new Map()
          const I = () => (self.performance || Date).now(),
            $ = v()
          let O
          const R = [],
            D = 5
          let M = 0
          function B() {
            const t = I()
            for (; R.length && I() - t < D; ) R.shift()()
            M = R.length ? setTimeout(B, 0) : 0
          }
          const L = (...t) =>
              new Promise((e, i) => {
                R.push(() => {
                  const r = I()
                  try {
                    $.webgl.generateIntoCanvas(...t), e({ timing: I() - r })
                  } catch (t) {
                    i(t)
                  }
                }),
                  M || (M = setTimeout(B, 0))
              }),
            P = 4,
            z = 2e3,
            G = {}
          let W = 0
          function j(t, e, i, r, o, n, a, s, l, u) {
            const d = "TroikaTextSDFGenerator_JS_" + (W++ % P)
            let f = G[d]
            return (
              f ||
                (f = G[d] =
                  {
                    workerModule: g({
                      name: d,
                      workerId: d,
                      dependencies: [v, I],
                      init(t, e) {
                        const i = t().javascript.generate
                        return function (...t) {
                          const r = e()
                          return { textureData: i(...t), timing: e() - r }
                        }
                      },
                      getTransferables: (t) => [t.textureData.buffer],
                    }),
                    requests: 0,
                    idleTimer: null,
                  }),
              f.requests++,
              clearTimeout(f.idleTimer),
              f
                .workerModule(t, e, i, r, o, n)
                .then(({ textureData: i, timing: r }) => {
                  const o = I(),
                    n = new Uint8Array(4 * i.length)
                  for (let t = 0; t < i.length; t++) n[4 * t + u] = i[t]
                  return (
                    $.webglUtils.renderImageData(
                      a,
                      n,
                      s,
                      l,
                      t,
                      e,
                      1 << (3 - u)
                    ),
                    (r += I() - o),
                    0 == --f.requests &&
                      (f.idleTimer = setTimeout(() => {
                        !(function (t) {
                          h[t] &&
                            h[t].forEach(function (t) {
                              t()
                            }),
                            c[t] && (c[t].terminate(), delete c[t])
                        })(d)
                      }, z)),
                    { timing: r }
                  )
                })
            )
          }
          const N = $.webglUtils.resizeWebGLCanvasWithoutClearing
          /*!
  Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
  Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
  */ const V = g({
              name: "Typr Font Parser",
              dependencies: [
                function () {
                  return (
                    "undefined" == typeof window && (self.window = self),
                    (function (t) {
                      var e = {
                        parse: function (t) {
                          var i = e._bin,
                            r = new Uint8Array(t)
                          if ("ttcf" == i.readASCII(r, 0, 4)) {
                            var o = 4
                            i.readUshort(r, o),
                              (o += 2),
                              i.readUshort(r, o),
                              (o += 2)
                            var n = i.readUint(r, o)
                            o += 4
                            for (var a = [], s = 0; s < n; s++) {
                              var l = i.readUint(r, o)
                              ;(o += 4), a.push(e._readFont(r, l))
                            }
                            return a
                          }
                          return [e._readFont(r, 0)]
                        },
                        _readFont: function (t, i) {
                          var r = e._bin,
                            o = i
                          r.readFixed(t, i), (i += 4)
                          var n = r.readUshort(t, i)
                          ;(i += 2),
                            r.readUshort(t, i),
                            (i += 2),
                            r.readUshort(t, i),
                            (i += 2),
                            r.readUshort(t, i),
                            (i += 2)
                          for (
                            var a = [
                                "cmap",
                                "head",
                                "hhea",
                                "maxp",
                                "hmtx",
                                "name",
                                "OS/2",
                                "post",
                                "loca",
                                "glyf",
                                "kern",
                                "CFF ",
                                "GPOS",
                                "GSUB",
                                "SVG ",
                              ],
                              s = { _data: t, _offset: o },
                              l = {},
                              u = 0;
                            u < n;
                            u++
                          ) {
                            var d = r.readASCII(t, i, 4)
                            ;(i += 4), r.readUint(t, i), (i += 4)
                            var c = r.readUint(t, i)
                            i += 4
                            var h = r.readUint(t, i)
                            ;(i += 4), (l[d] = { offset: c, length: h })
                          }
                          for (u = 0; u < a.length; u++) {
                            var f = a[u]
                            l[f] &&
                              (s[f.trim()] = e[f.trim()].parse(
                                t,
                                l[f].offset,
                                l[f].length,
                                s
                              ))
                          }
                          return s
                        },
                        _tabOffset: function (t, i, r) {
                          for (
                            var o = e._bin,
                              n = o.readUshort(t, r + 4),
                              a = r + 12,
                              s = 0;
                            s < n;
                            s++
                          ) {
                            var l = o.readASCII(t, a, 4)
                            ;(a += 4), o.readUint(t, a), (a += 4)
                            var u = o.readUint(t, a)
                            if (((a += 4), o.readUint(t, a), (a += 4), l == i))
                              return u
                          }
                          return 0
                        },
                      }
                      ;(e._bin = {
                        readFixed: function (t, e) {
                          return (
                            ((t[e] << 8) | t[e + 1]) +
                            ((t[e + 2] << 8) | t[e + 3]) / 65540
                          )
                        },
                        readF2dot14: function (t, i) {
                          return e._bin.readShort(t, i) / 16384
                        },
                        readInt: function (t, i) {
                          return e._bin._view(t).getInt32(i)
                        },
                        readInt8: function (t, i) {
                          return e._bin._view(t).getInt8(i)
                        },
                        readShort: function (t, i) {
                          return e._bin._view(t).getInt16(i)
                        },
                        readUshort: function (t, i) {
                          return e._bin._view(t).getUint16(i)
                        },
                        readUshorts: function (t, i, r) {
                          for (var o = [], n = 0; n < r; n++)
                            o.push(e._bin.readUshort(t, i + 2 * n))
                          return o
                        },
                        readUint: function (t, i) {
                          return e._bin._view(t).getUint32(i)
                        },
                        readUint64: function (t, i) {
                          return (
                            4294967296 * e._bin.readUint(t, i) +
                            e._bin.readUint(t, i + 4)
                          )
                        },
                        readASCII: function (t, e, i) {
                          for (var r = "", o = 0; o < i; o++)
                            r += String.fromCharCode(t[e + o])
                          return r
                        },
                        readUnicode: function (t, e, i) {
                          for (var r = "", o = 0; o < i; o++) {
                            var n = (t[e++] << 8) | t[e++]
                            r += String.fromCharCode(n)
                          }
                          return r
                        },
                        _tdec:
                          "undefined" != typeof window && window.TextDecoder
                            ? new window.TextDecoder()
                            : null,
                        readUTF8: function (t, i, r) {
                          var o = e._bin._tdec
                          return o && 0 == i && r == t.length
                            ? o.decode(t)
                            : e._bin.readASCII(t, i, r)
                        },
                        readBytes: function (t, e, i) {
                          for (var r = [], o = 0; o < i; o++) r.push(t[e + o])
                          return r
                        },
                        readASCIIArray: function (t, e, i) {
                          for (var r = [], o = 0; o < i; o++)
                            r.push(String.fromCharCode(t[e + o]))
                          return r
                        },
                        _view: function (t) {
                          return (
                            t._dataView ||
                            (t._dataView = t.buffer
                              ? new DataView(
                                  t.buffer,
                                  t.byteOffset,
                                  t.byteLength
                                )
                              : new DataView(new Uint8Array(t).buffer))
                          )
                        },
                      }),
                        (e._lctf = {}),
                        (e._lctf.parse = function (t, i, r, o, n) {
                          var a = e._bin,
                            s = {},
                            l = i
                          a.readFixed(t, i), (i += 4)
                          var u = a.readUshort(t, i)
                          i += 2
                          var d = a.readUshort(t, i)
                          i += 2
                          var c = a.readUshort(t, i)
                          return (
                            (i += 2),
                            (s.scriptList = e._lctf.readScriptList(t, l + u)),
                            (s.featureList = e._lctf.readFeatureList(t, l + d)),
                            (s.lookupList = e._lctf.readLookupList(
                              t,
                              l + c,
                              n
                            )),
                            s
                          )
                        }),
                        (e._lctf.readLookupList = function (t, i, r) {
                          var o = e._bin,
                            n = i,
                            a = [],
                            s = o.readUshort(t, i)
                          i += 2
                          for (var l = 0; l < s; l++) {
                            var u = o.readUshort(t, i)
                            i += 2
                            var d = e._lctf.readLookupTable(t, n + u, r)
                            a.push(d)
                          }
                          return a
                        }),
                        (e._lctf.readLookupTable = function (t, i, r) {
                          var o = e._bin,
                            n = i,
                            a = { tabs: [] }
                          ;(a.ltype = o.readUshort(t, i)),
                            (i += 2),
                            (a.flag = o.readUshort(t, i)),
                            (i += 2)
                          var s = o.readUshort(t, i)
                          i += 2
                          for (var l = a.ltype, u = 0; u < s; u++) {
                            var d = o.readUshort(t, i)
                            i += 2
                            var c = r(t, l, n + d, a)
                            a.tabs.push(c)
                          }
                          return a
                        }),
                        (e._lctf.numOfOnes = function (t) {
                          for (var e = 0, i = 0; i < 32; i++)
                            0 != ((t >>> i) & 1) && e++
                          return e
                        }),
                        (e._lctf.readClassDef = function (t, i) {
                          var r = e._bin,
                            o = [],
                            n = r.readUshort(t, i)
                          if (((i += 2), 1 == n)) {
                            var a = r.readUshort(t, i)
                            i += 2
                            var s = r.readUshort(t, i)
                            i += 2
                            for (var l = 0; l < s; l++)
                              o.push(a + l),
                                o.push(a + l),
                                o.push(r.readUshort(t, i)),
                                (i += 2)
                          }
                          if (2 == n) {
                            var u = r.readUshort(t, i)
                            for (i += 2, l = 0; l < u; l++)
                              o.push(r.readUshort(t, i)),
                                (i += 2),
                                o.push(r.readUshort(t, i)),
                                (i += 2),
                                o.push(r.readUshort(t, i)),
                                (i += 2)
                          }
                          return o
                        }),
                        (e._lctf.getInterval = function (t, e) {
                          for (var i = 0; i < t.length; i += 3) {
                            var r = t[i],
                              o = t[i + 1]
                            if ((t[i + 2], r <= e && e <= o)) return i
                          }
                          return -1
                        }),
                        (e._lctf.readCoverage = function (t, i) {
                          var r = e._bin,
                            o = {}
                          ;(o.fmt = r.readUshort(t, i)), (i += 2)
                          var n = r.readUshort(t, i)
                          return (
                            (i += 2),
                            1 == o.fmt && (o.tab = r.readUshorts(t, i, n)),
                            2 == o.fmt && (o.tab = r.readUshorts(t, i, 3 * n)),
                            o
                          )
                        }),
                        (e._lctf.coverageIndex = function (t, i) {
                          var r = t.tab
                          if (1 == t.fmt) return r.indexOf(i)
                          if (2 == t.fmt) {
                            var o = e._lctf.getInterval(r, i)
                            if (-1 != o) return r[o + 2] + (i - r[o])
                          }
                          return -1
                        }),
                        (e._lctf.readFeatureList = function (t, i) {
                          var r = e._bin,
                            o = i,
                            n = [],
                            a = r.readUshort(t, i)
                          i += 2
                          for (var s = 0; s < a; s++) {
                            var l = r.readASCII(t, i, 4)
                            i += 4
                            var u = r.readUshort(t, i)
                            i += 2
                            var d = e._lctf.readFeatureTable(t, o + u)
                            ;(d.tag = l.trim()), n.push(d)
                          }
                          return n
                        }),
                        (e._lctf.readFeatureTable = function (t, i) {
                          var r = e._bin,
                            o = i,
                            n = {},
                            a = r.readUshort(t, i)
                          ;(i += 2), a > 0 && (n.featureParams = o + a)
                          var s = r.readUshort(t, i)
                          ;(i += 2), (n.tab = [])
                          for (var l = 0; l < s; l++)
                            n.tab.push(r.readUshort(t, i + 2 * l))
                          return n
                        }),
                        (e._lctf.readScriptList = function (t, i) {
                          var r = e._bin,
                            o = i,
                            n = {},
                            a = r.readUshort(t, i)
                          i += 2
                          for (var s = 0; s < a; s++) {
                            var l = r.readASCII(t, i, 4)
                            i += 4
                            var u = r.readUshort(t, i)
                            ;(i += 2),
                              (n[l.trim()] = e._lctf.readScriptTable(t, o + u))
                          }
                          return n
                        }),
                        (e._lctf.readScriptTable = function (t, i) {
                          var r = e._bin,
                            o = i,
                            n = {},
                            a = r.readUshort(t, i)
                          ;(i += 2),
                            (n.default = e._lctf.readLangSysTable(t, o + a))
                          var s = r.readUshort(t, i)
                          i += 2
                          for (var l = 0; l < s; l++) {
                            var u = r.readASCII(t, i, 4)
                            i += 4
                            var d = r.readUshort(t, i)
                            ;(i += 2),
                              (n[u.trim()] = e._lctf.readLangSysTable(t, o + d))
                          }
                          return n
                        }),
                        (e._lctf.readLangSysTable = function (t, i) {
                          var r = e._bin,
                            o = {}
                          r.readUshort(t, i),
                            (i += 2),
                            (o.reqFeature = r.readUshort(t, i)),
                            (i += 2)
                          var n = r.readUshort(t, i)
                          return (
                            (i += 2), (o.features = r.readUshorts(t, i, n)), o
                          )
                        }),
                        (e.CFF = {}),
                        (e.CFF.parse = function (t, i, r) {
                          var o = e._bin
                          ;(t = new Uint8Array(t.buffer, i, r))[(i = 0)],
                            t[++i],
                            t[++i],
                            t[++i],
                            i++
                          var n = []
                          i = e.CFF.readIndex(t, i, n)
                          for (var a = [], s = 0; s < n.length - 1; s++)
                            a.push(o.readASCII(t, i + n[s], n[s + 1] - n[s]))
                          i += n[n.length - 1]
                          var l = []
                          i = e.CFF.readIndex(t, i, l)
                          var u = []
                          for (s = 0; s < l.length - 1; s++)
                            u.push(e.CFF.readDict(t, i + l[s], i + l[s + 1]))
                          i += l[l.length - 1]
                          var d = u[0],
                            c = []
                          i = e.CFF.readIndex(t, i, c)
                          var h = []
                          for (s = 0; s < c.length - 1; s++)
                            h.push(o.readASCII(t, i + c[s], c[s + 1] - c[s]))
                          if (
                            ((i += c[c.length - 1]),
                            e.CFF.readSubrs(t, i, d),
                            d.CharStrings)
                          ) {
                            ;(i = d.CharStrings),
                              (c = []),
                              (i = e.CFF.readIndex(t, i, c))
                            var f = []
                            for (s = 0; s < c.length - 1; s++)
                              f.push(o.readBytes(t, i + c[s], c[s + 1] - c[s]))
                            d.CharStrings = f
                          }
                          if (d.ROS) {
                            i = d.FDArray
                            var g = []
                            for (
                              i = e.CFF.readIndex(t, i, g),
                                d.FDArray = [],
                                s = 0;
                              s < g.length - 1;
                              s++
                            ) {
                              var p = e.CFF.readDict(t, i + g[s], i + g[s + 1])
                              e.CFF._readFDict(t, p, h), d.FDArray.push(p)
                            }
                            ;(i += g[g.length - 1]),
                              (i = d.FDSelect),
                              (d.FDSelect = [])
                            var m = t[i]
                            if ((i++, 3 != m)) throw m
                            var v = o.readUshort(t, i)
                            for (i += 2, s = 0; s < v + 1; s++)
                              d.FDSelect.push(o.readUshort(t, i), t[i + 2]),
                                (i += 3)
                          }
                          return (
                            d.Encoding &&
                              (d.Encoding = e.CFF.readEncoding(
                                t,
                                d.Encoding,
                                d.CharStrings.length
                              )),
                            d.charset &&
                              (d.charset = e.CFF.readCharset(
                                t,
                                d.charset,
                                d.CharStrings.length
                              )),
                            e.CFF._readFDict(t, d, h),
                            d
                          )
                        }),
                        (e.CFF._readFDict = function (t, i, r) {
                          var o
                          for (var n in (i.Private &&
                            ((o = i.Private[1]),
                            (i.Private = e.CFF.readDict(
                              t,
                              o,
                              o + i.Private[0]
                            )),
                            i.Private.Subrs &&
                              e.CFF.readSubrs(
                                t,
                                o + i.Private.Subrs,
                                i.Private
                              )),
                          i))
                            -1 !=
                              [
                                "FamilyName",
                                "FontName",
                                "FullName",
                                "Notice",
                                "version",
                                "Copyright",
                              ].indexOf(n) && (i[n] = r[i[n] - 426 + 35])
                        }),
                        (e.CFF.readSubrs = function (t, i, r) {
                          var o = e._bin,
                            n = []
                          i = e.CFF.readIndex(t, i, n)
                          var a,
                            s = n.length
                          ;(a = s < 1240 ? 107 : s < 33900 ? 1131 : 32768),
                            (r.Bias = a),
                            (r.Subrs = [])
                          for (var l = 0; l < n.length - 1; l++)
                            r.Subrs.push(
                              o.readBytes(t, i + n[l], n[l + 1] - n[l])
                            )
                        }),
                        (e.CFF.tableSE = [
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4,
                          5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                          20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
                          33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
                          46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                          59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
                          72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
                          85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 97, 98, 99,
                          100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
                          0, 111, 112, 113, 114, 0, 115, 116, 117, 118, 119,
                          120, 121, 122, 0, 123, 0, 124, 125, 126, 127, 128,
                          129, 130, 131, 0, 132, 133, 0, 134, 135, 136, 137, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
                          139, 0, 0, 0, 0, 140, 141, 142, 143, 0, 0, 0, 0, 0,
                          144, 0, 0, 0, 145, 0, 0, 146, 147, 148, 149, 0, 0, 0,
                          0,
                        ]),
                        (e.CFF.glyphByUnicode = function (t, e) {
                          for (var i = 0; i < t.charset.length; i++)
                            if (t.charset[i] == e) return i
                          return -1
                        }),
                        (e.CFF.glyphBySE = function (t, i) {
                          return i < 0 || i > 255
                            ? -1
                            : e.CFF.glyphByUnicode(t, e.CFF.tableSE[i])
                        }),
                        (e.CFF.readEncoding = function (t, i, r) {
                          e._bin
                          var o = [".notdef"],
                            n = t[i]
                          if ((i++, 0 != n))
                            throw "error: unknown encoding format: " + n
                          var a = t[i]
                          i++
                          for (var s = 0; s < a; s++) o.push(t[i + s])
                          return o
                        }),
                        (e.CFF.readCharset = function (t, i, r) {
                          var o = e._bin,
                            n = [".notdef"],
                            a = t[i]
                          if ((i++, 0 == a))
                            for (var s = 0; s < r; s++) {
                              var l = o.readUshort(t, i)
                              ;(i += 2), n.push(l)
                            }
                          else {
                            if (1 != a && 2 != a) throw "error: format: " + a
                            for (; n.length < r; ) {
                              ;(l = o.readUshort(t, i)), (i += 2)
                              var u = 0
                              for (
                                1 == a
                                  ? ((u = t[i]), i++)
                                  : ((u = o.readUshort(t, i)), (i += 2)),
                                  s = 0;
                                s <= u;
                                s++
                              )
                                n.push(l), l++
                            }
                          }
                          return n
                        }),
                        (e.CFF.readIndex = function (t, i, r) {
                          var o = e._bin,
                            n = o.readUshort(t, i) + 1,
                            a = t[(i += 2)]
                          if ((i++, 1 == a))
                            for (var s = 0; s < n; s++) r.push(t[i + s])
                          else if (2 == a)
                            for (s = 0; s < n; s++)
                              r.push(o.readUshort(t, i + 2 * s))
                          else if (3 == a)
                            for (s = 0; s < n; s++)
                              r.push(16777215 & o.readUint(t, i + 3 * s - 1))
                          else if (1 != n)
                            throw (
                              "unsupported offset size: " + a + ", count: " + n
                            )
                          return (i += n * a) - 1
                        }),
                        (e.CFF.getCharString = function (t, i, r) {
                          var o = e._bin,
                            n = t[i],
                            a = t[i + 1]
                          t[i + 2], t[i + 3], t[i + 4]
                          var s = 1,
                            l = null,
                            u = null
                          n <= 20 && ((l = n), (s = 1)),
                            12 == n && ((l = 100 * n + a), (s = 2)),
                            21 <= n && n <= 27 && ((l = n), (s = 1)),
                            28 == n && ((u = o.readShort(t, i + 1)), (s = 3)),
                            29 <= n && n <= 31 && ((l = n), (s = 1)),
                            32 <= n && n <= 246 && ((u = n - 139), (s = 1)),
                            247 <= n &&
                              n <= 250 &&
                              ((u = 256 * (n - 247) + a + 108), (s = 2)),
                            251 <= n &&
                              n <= 254 &&
                              ((u = 256 * -(n - 251) - a - 108), (s = 2)),
                            255 == n &&
                              ((u = o.readInt(t, i + 1) / 65535), (s = 5)),
                            (r.val = null != u ? u : "o" + l),
                            (r.size = s)
                        }),
                        (e.CFF.readCharString = function (t, i, r) {
                          for (var o = i + r, n = e._bin, a = []; i < o; ) {
                            var s = t[i],
                              l = t[i + 1]
                            t[i + 2], t[i + 3], t[i + 4]
                            var u = 1,
                              d = null,
                              c = null
                            s <= 20 && ((d = s), (u = 1)),
                              12 == s && ((d = 100 * s + l), (u = 2)),
                              (19 != s && 20 != s) || ((d = s), (u = 2)),
                              21 <= s && s <= 27 && ((d = s), (u = 1)),
                              28 == s && ((c = n.readShort(t, i + 1)), (u = 3)),
                              29 <= s && s <= 31 && ((d = s), (u = 1)),
                              32 <= s && s <= 246 && ((c = s - 139), (u = 1)),
                              247 <= s &&
                                s <= 250 &&
                                ((c = 256 * (s - 247) + l + 108), (u = 2)),
                              251 <= s &&
                                s <= 254 &&
                                ((c = 256 * -(s - 251) - l - 108), (u = 2)),
                              255 == s &&
                                ((c = n.readInt(t, i + 1) / 65535), (u = 5)),
                              a.push(null != c ? c : "o" + d),
                              (i += u)
                          }
                          return a
                        }),
                        (e.CFF.readDict = function (t, i, r) {
                          for (var o = e._bin, n = {}, a = []; i < r; ) {
                            var s = t[i],
                              l = t[i + 1]
                            t[i + 2], t[i + 3], t[i + 4]
                            var u = 1,
                              d = null,
                              c = null
                            if (
                              (28 == s &&
                                ((c = o.readShort(t, i + 1)), (u = 3)),
                              29 == s && ((c = o.readInt(t, i + 1)), (u = 5)),
                              32 <= s && s <= 246 && ((c = s - 139), (u = 1)),
                              247 <= s &&
                                s <= 250 &&
                                ((c = 256 * (s - 247) + l + 108), (u = 2)),
                              251 <= s &&
                                s <= 254 &&
                                ((c = 256 * -(s - 251) - l - 108), (u = 2)),
                              255 == s)
                            )
                              throw (
                                ((c = o.readInt(t, i + 1) / 65535),
                                (u = 5),
                                "unknown number")
                              )
                            if (30 == s) {
                              var h = []
                              for (u = 1; ; ) {
                                var f = t[i + u]
                                u++
                                var g = f >> 4,
                                  p = 15 & f
                                if (
                                  (15 != g && h.push(g),
                                  15 != p && h.push(p),
                                  15 == p)
                                )
                                  break
                              }
                              for (
                                var m = "",
                                  v = [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    ".",
                                    "e",
                                    "e-",
                                    "reserved",
                                    "-",
                                    "endOfNumber",
                                  ],
                                  b = 0;
                                b < h.length;
                                b++
                              )
                                m += v[h[b]]
                              c = parseFloat(m)
                            }
                            s <= 21 &&
                              ((d = [
                                "version",
                                "Notice",
                                "FullName",
                                "FamilyName",
                                "Weight",
                                "FontBBox",
                                "BlueValues",
                                "OtherBlues",
                                "FamilyBlues",
                                "FamilyOtherBlues",
                                "StdHW",
                                "StdVW",
                                "escape",
                                "UniqueID",
                                "XUID",
                                "charset",
                                "Encoding",
                                "CharStrings",
                                "Private",
                                "Subrs",
                                "defaultWidthX",
                                "nominalWidthX",
                              ][s]),
                              (u = 1),
                              12 == s &&
                                ((d = [
                                  "Copyright",
                                  "isFixedPitch",
                                  "ItalicAngle",
                                  "UnderlinePosition",
                                  "UnderlineThickness",
                                  "PaintType",
                                  "CharstringType",
                                  "FontMatrix",
                                  "StrokeWidth",
                                  "BlueScale",
                                  "BlueShift",
                                  "BlueFuzz",
                                  "StemSnapH",
                                  "StemSnapV",
                                  "ForceBold",
                                  0,
                                  0,
                                  "LanguageGroup",
                                  "ExpansionFactor",
                                  "initialRandomSeed",
                                  "SyntheticBase",
                                  "PostScript",
                                  "BaseFontName",
                                  "BaseFontBlend",
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  "ROS",
                                  "CIDFontVersion",
                                  "CIDFontRevision",
                                  "CIDFontType",
                                  "CIDCount",
                                  "UIDBase",
                                  "FDArray",
                                  "FDSelect",
                                  "FontName",
                                ][l]),
                                (u = 2))),
                              null != d
                                ? ((n[d] = 1 == a.length ? a[0] : a), (a = []))
                                : a.push(c),
                              (i += u)
                          }
                          return n
                        }),
                        (e.cmap = {}),
                        (e.cmap.parse = function (t, i, r) {
                          ;(t = new Uint8Array(t.buffer, i, r)), (i = 0)
                          var o = e._bin,
                            n = {}
                          o.readUshort(t, i), (i += 2)
                          var a = o.readUshort(t, i)
                          i += 2
                          var s = []
                          n.tables = []
                          for (var l = 0; l < a; l++) {
                            var u = o.readUshort(t, i)
                            i += 2
                            var d = o.readUshort(t, i)
                            i += 2
                            var c = o.readUint(t, i)
                            i += 4
                            var h = "p" + u + "e" + d,
                              f = s.indexOf(c)
                            if (-1 == f) {
                              var g
                              ;(f = n.tables.length), s.push(c)
                              var p = o.readUshort(t, c)
                              0 == p
                                ? (g = e.cmap.parse0(t, c))
                                : 4 == p
                                ? (g = e.cmap.parse4(t, c))
                                : 6 == p
                                ? (g = e.cmap.parse6(t, c))
                                : 12 == p
                                ? (g = e.cmap.parse12(t, c))
                                : console.debug(
                                    "unknown format: " + p,
                                    u,
                                    d,
                                    c
                                  ),
                                n.tables.push(g)
                            }
                            if (null != n[h])
                              throw "multiple tables for one platform+encoding"
                            n[h] = f
                          }
                          return n
                        }),
                        (e.cmap.parse0 = function (t, i) {
                          var r = e._bin,
                            o = {}
                          ;(o.format = r.readUshort(t, i)), (i += 2)
                          var n = r.readUshort(t, i)
                          ;(i += 2), r.readUshort(t, i), (i += 2), (o.map = [])
                          for (var a = 0; a < n - 6; a++) o.map.push(t[i + a])
                          return o
                        }),
                        (e.cmap.parse4 = function (t, i) {
                          var r = e._bin,
                            o = i,
                            n = {}
                          ;(n.format = r.readUshort(t, i)), (i += 2)
                          var a = r.readUshort(t, i)
                          ;(i += 2), r.readUshort(t, i), (i += 2)
                          var s = r.readUshort(t, i)
                          i += 2
                          var l = s / 2
                          ;(n.searchRange = r.readUshort(t, i)),
                            (i += 2),
                            (n.entrySelector = r.readUshort(t, i)),
                            (i += 2),
                            (n.rangeShift = r.readUshort(t, i)),
                            (i += 2),
                            (n.endCount = r.readUshorts(t, i, l)),
                            (i += 2 * l),
                            (i += 2),
                            (n.startCount = r.readUshorts(t, i, l)),
                            (i += 2 * l),
                            (n.idDelta = [])
                          for (var u = 0; u < l; u++)
                            n.idDelta.push(r.readShort(t, i)), (i += 2)
                          for (
                            n.idRangeOffset = r.readUshorts(t, i, l),
                              i += 2 * l,
                              n.glyphIdArray = [];
                            i < o + a;

                          )
                            n.glyphIdArray.push(r.readUshort(t, i)), (i += 2)
                          return n
                        }),
                        (e.cmap.parse6 = function (t, i) {
                          var r = e._bin,
                            o = {}
                          ;(o.format = r.readUshort(t, i)),
                            (i += 2),
                            r.readUshort(t, i),
                            (i += 2),
                            r.readUshort(t, i),
                            (i += 2),
                            (o.firstCode = r.readUshort(t, i)),
                            (i += 2)
                          var n = r.readUshort(t, i)
                          ;(i += 2), (o.glyphIdArray = [])
                          for (var a = 0; a < n; a++)
                            o.glyphIdArray.push(r.readUshort(t, i)), (i += 2)
                          return o
                        }),
                        (e.cmap.parse12 = function (t, i) {
                          var r = e._bin,
                            o = {}
                          ;(o.format = r.readUshort(t, i)),
                            (i += 2),
                            (i += 2),
                            r.readUint(t, i),
                            (i += 4),
                            r.readUint(t, i),
                            (i += 4)
                          var n = r.readUint(t, i)
                          ;(i += 4), (o.groups = [])
                          for (var a = 0; a < n; a++) {
                            var s = i + 12 * a,
                              l = r.readUint(t, s + 0),
                              u = r.readUint(t, s + 4),
                              d = r.readUint(t, s + 8)
                            o.groups.push([l, u, d])
                          }
                          return o
                        }),
                        (e.glyf = {}),
                        (e.glyf.parse = function (t, e, i, r) {
                          for (var o = [], n = 0; n < r.maxp.numGlyphs; n++)
                            o.push(null)
                          return o
                        }),
                        (e.glyf._parseGlyf = function (t, i) {
                          var r = e._bin,
                            o = t._data,
                            n = e._tabOffset(o, "glyf", t._offset) + t.loca[i]
                          if (t.loca[i] == t.loca[i + 1]) return null
                          var a = {}
                          if (
                            ((a.noc = r.readShort(o, n)),
                            (n += 2),
                            (a.xMin = r.readShort(o, n)),
                            (n += 2),
                            (a.yMin = r.readShort(o, n)),
                            (n += 2),
                            (a.xMax = r.readShort(o, n)),
                            (n += 2),
                            (a.yMax = r.readShort(o, n)),
                            (n += 2),
                            a.xMin >= a.xMax || a.yMin >= a.yMax)
                          )
                            return null
                          if (a.noc > 0) {
                            a.endPts = []
                            for (var s = 0; s < a.noc; s++)
                              a.endPts.push(r.readUshort(o, n)), (n += 2)
                            var l = r.readUshort(o, n)
                            if (((n += 2), o.length - n < l)) return null
                            ;(a.instructions = r.readBytes(o, n, l)), (n += l)
                            var u = a.endPts[a.noc - 1] + 1
                            for (a.flags = [], s = 0; s < u; s++) {
                              var d = o[n]
                              if ((n++, a.flags.push(d), 0 != (8 & d))) {
                                var c = o[n]
                                n++
                                for (var h = 0; h < c; h++) a.flags.push(d), s++
                              }
                            }
                            for (a.xs = [], s = 0; s < u; s++) {
                              var f = 0 != (2 & a.flags[s]),
                                g = 0 != (16 & a.flags[s])
                              f
                                ? (a.xs.push(g ? o[n] : -o[n]), n++)
                                : g
                                ? a.xs.push(0)
                                : (a.xs.push(r.readShort(o, n)), (n += 2))
                            }
                            for (a.ys = [], s = 0; s < u; s++)
                              (f = 0 != (4 & a.flags[s])),
                                (g = 0 != (32 & a.flags[s])),
                                f
                                  ? (a.ys.push(g ? o[n] : -o[n]), n++)
                                  : g
                                  ? a.ys.push(0)
                                  : (a.ys.push(r.readShort(o, n)), (n += 2))
                            var p = 0,
                              m = 0
                            for (s = 0; s < u; s++)
                              (p += a.xs[s]),
                                (m += a.ys[s]),
                                (a.xs[s] = p),
                                (a.ys[s] = m)
                          } else {
                            var v
                            a.parts = []
                            do {
                              ;(v = r.readUshort(o, n)), (n += 2)
                              var b = {
                                m: { a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0 },
                                p1: -1,
                                p2: -1,
                              }
                              if (
                                (a.parts.push(b),
                                (b.glyphIndex = r.readUshort(o, n)),
                                (n += 2),
                                1 & v)
                              ) {
                                var y = r.readShort(o, n)
                                n += 2
                                var A = r.readShort(o, n)
                                n += 2
                              } else
                                (y = r.readInt8(o, n)),
                                  n++,
                                  (A = r.readInt8(o, n)),
                                  n++
                              2 & v
                                ? ((b.m.tx = y), (b.m.ty = A))
                                : ((b.p1 = y), (b.p2 = A)),
                                8 & v
                                  ? ((b.m.a = b.m.d = r.readF2dot14(o, n)),
                                    (n += 2))
                                  : 64 & v
                                  ? ((b.m.a = r.readF2dot14(o, n)),
                                    (n += 2),
                                    (b.m.d = r.readF2dot14(o, n)),
                                    (n += 2))
                                  : 128 & v &&
                                    ((b.m.a = r.readF2dot14(o, n)),
                                    (n += 2),
                                    (b.m.b = r.readF2dot14(o, n)),
                                    (n += 2),
                                    (b.m.c = r.readF2dot14(o, n)),
                                    (n += 2),
                                    (b.m.d = r.readF2dot14(o, n)),
                                    (n += 2))
                            } while (32 & v)
                            if (256 & v) {
                              var w = r.readUshort(o, n)
                              for (n += 2, a.instr = [], s = 0; s < w; s++)
                                a.instr.push(o[n]), n++
                            }
                          }
                          return a
                        }),
                        (e.GPOS = {}),
                        (e.GPOS.parse = function (t, i, r, o) {
                          return e._lctf.parse(t, i, r, o, e.GPOS.subt)
                        }),
                        (e.GPOS.subt = function (t, i, r, o) {
                          var n = e._bin,
                            a = r,
                            s = {}
                          if (
                            ((s.fmt = n.readUshort(t, r)),
                            (r += 2),
                            1 == i ||
                              2 == i ||
                              3 == i ||
                              7 == i ||
                              (8 == i && s.fmt <= 2))
                          ) {
                            var l = n.readUshort(t, r)
                            ;(r += 2),
                              (s.coverage = e._lctf.readCoverage(t, l + a))
                          }
                          if (1 == i && 1 == s.fmt) {
                            var u = n.readUshort(t, r)
                            r += 2
                            var d = e._lctf.numOfOnes(u)
                            0 != u && (s.pos = e.GPOS.readValueRecord(t, r, u))
                          } else if (2 == i && s.fmt >= 1 && s.fmt <= 2) {
                            ;(u = n.readUshort(t, r)), (r += 2)
                            var c = n.readUshort(t, r)
                            ;(r += 2), (d = e._lctf.numOfOnes(u))
                            var h = e._lctf.numOfOnes(c)
                            if (1 == s.fmt) {
                              s.pairsets = []
                              var f = n.readUshort(t, r)
                              r += 2
                              for (var g = 0; g < f; g++) {
                                var p = a + n.readUshort(t, r)
                                r += 2
                                var m = n.readUshort(t, p)
                                p += 2
                                for (var v = [], b = 0; b < m; b++) {
                                  var y = n.readUshort(t, p)
                                  ;(p += 2),
                                    0 != u &&
                                      ((S = e.GPOS.readValueRecord(t, p, u)),
                                      (p += 2 * d)),
                                    0 != c &&
                                      ((_ = e.GPOS.readValueRecord(t, p, c)),
                                      (p += 2 * h)),
                                    v.push({ gid2: y, val1: S, val2: _ })
                                }
                                s.pairsets.push(v)
                              }
                            }
                            if (2 == s.fmt) {
                              var A = n.readUshort(t, r)
                              r += 2
                              var w = n.readUshort(t, r)
                              r += 2
                              var k = n.readUshort(t, r)
                              r += 2
                              var C = n.readUshort(t, r)
                              for (
                                r += 2,
                                  s.classDef1 = e._lctf.readClassDef(t, a + A),
                                  s.classDef2 = e._lctf.readClassDef(t, a + w),
                                  s.matrix = [],
                                  g = 0;
                                g < k;
                                g++
                              ) {
                                var x = []
                                for (b = 0; b < C; b++) {
                                  var S = null,
                                    _ = null
                                  0 != u &&
                                    ((S = e.GPOS.readValueRecord(t, r, u)),
                                    (r += 2 * d)),
                                    0 != c &&
                                      ((_ = e.GPOS.readValueRecord(t, r, c)),
                                      (r += 2 * h)),
                                    x.push({ val1: S, val2: _ })
                                }
                                s.matrix.push(x)
                              }
                            }
                          } else {
                            if (9 == i && 1 == s.fmt) {
                              var E = n.readUshort(t, r)
                              r += 2
                              var T = n.readUint(t, r)
                              if (((r += 4), 9 == o.ltype)) o.ltype = E
                              else if (o.ltype != E)
                                throw "invalid extension substitution"
                              return e.GPOS.subt(t, o.ltype, a + T)
                            }
                            console.debug(
                              "unsupported GPOS table LookupType",
                              i,
                              "format",
                              s.fmt
                            )
                          }
                          return s
                        }),
                        (e.GPOS.readValueRecord = function (t, i, r) {
                          var o = e._bin,
                            n = []
                          return (
                            n.push(1 & r ? o.readShort(t, i) : 0),
                            (i += 1 & r ? 2 : 0),
                            n.push(2 & r ? o.readShort(t, i) : 0),
                            (i += 2 & r ? 2 : 0),
                            n.push(4 & r ? o.readShort(t, i) : 0),
                            (i += 4 & r ? 2 : 0),
                            n.push(8 & r ? o.readShort(t, i) : 0),
                            (i += 8 & r ? 2 : 0),
                            n
                          )
                        }),
                        (e.GSUB = {}),
                        (e.GSUB.parse = function (t, i, r, o) {
                          return e._lctf.parse(t, i, r, o, e.GSUB.subt)
                        }),
                        (e.GSUB.subt = function (t, i, r, o) {
                          var n = e._bin,
                            a = r,
                            s = {}
                          if (
                            ((s.fmt = n.readUshort(t, r)),
                            (r += 2),
                            1 != i && 4 != i && 5 != i && 6 != i)
                          )
                            return null
                          if (
                            1 == i ||
                            4 == i ||
                            (5 == i && s.fmt <= 2) ||
                            (6 == i && s.fmt <= 2)
                          ) {
                            var l = n.readUshort(t, r)
                            ;(r += 2),
                              (s.coverage = e._lctf.readCoverage(t, a + l))
                          }
                          if (1 == i && s.fmt >= 1 && s.fmt <= 2) {
                            if (1 == s.fmt)
                              (s.delta = n.readShort(t, r)), (r += 2)
                            else if (2 == s.fmt) {
                              var u = n.readUshort(t, r)
                              ;(r += 2),
                                (s.newg = n.readUshorts(t, r, u)),
                                (r += 2 * s.newg.length)
                            }
                          } else if (4 == i) {
                            ;(s.vals = []), (u = n.readUshort(t, r)), (r += 2)
                            for (var d = 0; d < u; d++) {
                              var c = n.readUshort(t, r)
                              ;(r += 2),
                                s.vals.push(e.GSUB.readLigatureSet(t, a + c))
                            }
                          } else if (5 == i && 2 == s.fmt) {
                            if (2 == s.fmt) {
                              var h = n.readUshort(t, r)
                              ;(r += 2),
                                (s.cDef = e._lctf.readClassDef(t, a + h)),
                                (s.scset = [])
                              var f = n.readUshort(t, r)
                              for (r += 2, d = 0; d < f; d++) {
                                var g = n.readUshort(t, r)
                                ;(r += 2),
                                  s.scset.push(
                                    0 == g
                                      ? null
                                      : e.GSUB.readSubClassSet(t, a + g)
                                  )
                              }
                            }
                          } else if (6 == i && 3 == s.fmt) {
                            if (3 == s.fmt) {
                              for (d = 0; d < 3; d++) {
                                ;(u = n.readUshort(t, r)), (r += 2)
                                for (var p = [], m = 0; m < u; m++)
                                  p.push(
                                    e._lctf.readCoverage(
                                      t,
                                      a + n.readUshort(t, r + 2 * m)
                                    )
                                  )
                                ;(r += 2 * u),
                                  0 == d && (s.backCvg = p),
                                  1 == d && (s.inptCvg = p),
                                  2 == d && (s.ahedCvg = p)
                              }
                              ;(u = n.readUshort(t, r)),
                                (r += 2),
                                (s.lookupRec = e.GSUB.readSubstLookupRecords(
                                  t,
                                  r,
                                  u
                                ))
                            }
                          } else {
                            if (7 == i && 1 == s.fmt) {
                              var v = n.readUshort(t, r)
                              r += 2
                              var b = n.readUint(t, r)
                              if (((r += 4), 9 == o.ltype)) o.ltype = v
                              else if (o.ltype != v)
                                throw "invalid extension substitution"
                              return e.GSUB.subt(t, o.ltype, a + b)
                            }
                            console.debug(
                              "unsupported GSUB table LookupType",
                              i,
                              "format",
                              s.fmt
                            )
                          }
                          return s
                        }),
                        (e.GSUB.readSubClassSet = function (t, i) {
                          var r = e._bin.readUshort,
                            o = i,
                            n = [],
                            a = r(t, i)
                          i += 2
                          for (var s = 0; s < a; s++) {
                            var l = r(t, i)
                            ;(i += 2), n.push(e.GSUB.readSubClassRule(t, o + l))
                          }
                          return n
                        }),
                        (e.GSUB.readSubClassRule = function (t, i) {
                          var r = e._bin.readUshort,
                            o = {},
                            n = r(t, i),
                            a = r(t, (i += 2))
                          ;(i += 2), (o.input = [])
                          for (var s = 0; s < n - 1; s++)
                            o.input.push(r(t, i)), (i += 2)
                          return (
                            (o.substLookupRecords =
                              e.GSUB.readSubstLookupRecords(t, i, a)),
                            o
                          )
                        }),
                        (e.GSUB.readSubstLookupRecords = function (t, i, r) {
                          for (
                            var o = e._bin.readUshort, n = [], a = 0;
                            a < r;
                            a++
                          )
                            n.push(o(t, i), o(t, i + 2)), (i += 4)
                          return n
                        }),
                        (e.GSUB.readChainSubClassSet = function (t, i) {
                          var r = e._bin,
                            o = i,
                            n = [],
                            a = r.readUshort(t, i)
                          i += 2
                          for (var s = 0; s < a; s++) {
                            var l = r.readUshort(t, i)
                            ;(i += 2),
                              n.push(e.GSUB.readChainSubClassRule(t, o + l))
                          }
                          return n
                        }),
                        (e.GSUB.readChainSubClassRule = function (t, i) {
                          for (
                            var r = e._bin,
                              o = {},
                              n = ["backtrack", "input", "lookahead"],
                              a = 0;
                            a < n.length;
                            a++
                          ) {
                            var s = r.readUshort(t, i)
                            ;(i += 2),
                              1 == a && s--,
                              (o[n[a]] = r.readUshorts(t, i, s)),
                              (i += 2 * o[n[a]].length)
                          }
                          return (
                            (s = r.readUshort(t, i)),
                            (i += 2),
                            (o.subst = r.readUshorts(t, i, 2 * s)),
                            (i += 2 * o.subst.length),
                            o
                          )
                        }),
                        (e.GSUB.readLigatureSet = function (t, i) {
                          var r = e._bin,
                            o = i,
                            n = [],
                            a = r.readUshort(t, i)
                          i += 2
                          for (var s = 0; s < a; s++) {
                            var l = r.readUshort(t, i)
                            ;(i += 2), n.push(e.GSUB.readLigature(t, o + l))
                          }
                          return n
                        }),
                        (e.GSUB.readLigature = function (t, i) {
                          var r = e._bin,
                            o = { chain: [] }
                          ;(o.nglyph = r.readUshort(t, i)), (i += 2)
                          var n = r.readUshort(t, i)
                          i += 2
                          for (var a = 0; a < n - 1; a++)
                            o.chain.push(r.readUshort(t, i)), (i += 2)
                          return o
                        }),
                        (e.head = {}),
                        (e.head.parse = function (t, i, r) {
                          var o = e._bin,
                            n = {}
                          return (
                            o.readFixed(t, i),
                            (i += 4),
                            (n.fontRevision = o.readFixed(t, i)),
                            (i += 4),
                            o.readUint(t, i),
                            (i += 4),
                            o.readUint(t, i),
                            (i += 4),
                            (n.flags = o.readUshort(t, i)),
                            (i += 2),
                            (n.unitsPerEm = o.readUshort(t, i)),
                            (i += 2),
                            (n.created = o.readUint64(t, i)),
                            (i += 8),
                            (n.modified = o.readUint64(t, i)),
                            (i += 8),
                            (n.xMin = o.readShort(t, i)),
                            (i += 2),
                            (n.yMin = o.readShort(t, i)),
                            (i += 2),
                            (n.xMax = o.readShort(t, i)),
                            (i += 2),
                            (n.yMax = o.readShort(t, i)),
                            (i += 2),
                            (n.macStyle = o.readUshort(t, i)),
                            (i += 2),
                            (n.lowestRecPPEM = o.readUshort(t, i)),
                            (i += 2),
                            (n.fontDirectionHint = o.readShort(t, i)),
                            (i += 2),
                            (n.indexToLocFormat = o.readShort(t, i)),
                            (i += 2),
                            (n.glyphDataFormat = o.readShort(t, i)),
                            (i += 2),
                            n
                          )
                        }),
                        (e.hhea = {}),
                        (e.hhea.parse = function (t, i, r) {
                          var o = e._bin,
                            n = {}
                          return (
                            o.readFixed(t, i),
                            (i += 4),
                            (n.ascender = o.readShort(t, i)),
                            (i += 2),
                            (n.descender = o.readShort(t, i)),
                            (i += 2),
                            (n.lineGap = o.readShort(t, i)),
                            (i += 2),
                            (n.advanceWidthMax = o.readUshort(t, i)),
                            (i += 2),
                            (n.minLeftSideBearing = o.readShort(t, i)),
                            (i += 2),
                            (n.minRightSideBearing = o.readShort(t, i)),
                            (i += 2),
                            (n.xMaxExtent = o.readShort(t, i)),
                            (i += 2),
                            (n.caretSlopeRise = o.readShort(t, i)),
                            (i += 2),
                            (n.caretSlopeRun = o.readShort(t, i)),
                            (i += 2),
                            (n.caretOffset = o.readShort(t, i)),
                            (i += 2),
                            (i += 8),
                            (n.metricDataFormat = o.readShort(t, i)),
                            (i += 2),
                            (n.numberOfHMetrics = o.readUshort(t, i)),
                            (i += 2),
                            n
                          )
                        }),
                        (e.hmtx = {}),
                        (e.hmtx.parse = function (t, i, r, o) {
                          for (
                            var n = e._bin,
                              a = { aWidth: [], lsBearing: [] },
                              s = 0,
                              l = 0,
                              u = 0;
                            u < o.maxp.numGlyphs;
                            u++
                          )
                            u < o.hhea.numberOfHMetrics &&
                              ((s = n.readUshort(t, i)),
                              (i += 2),
                              (l = n.readShort(t, i)),
                              (i += 2)),
                              a.aWidth.push(s),
                              a.lsBearing.push(l)
                          return a
                        }),
                        (e.kern = {}),
                        (e.kern.parse = function (t, i, r, o) {
                          var n = e._bin,
                            a = n.readUshort(t, i)
                          if (((i += 2), 1 == a))
                            return e.kern.parseV1(t, i - 2, r, o)
                          var s = n.readUshort(t, i)
                          i += 2
                          for (
                            var l = { glyph1: [], rval: [] }, u = 0;
                            u < s;
                            u++
                          ) {
                            ;(i += 2), (r = n.readUshort(t, i)), (i += 2)
                            var d = n.readUshort(t, i)
                            i += 2
                            var c = d >>> 8
                            if (0 != (c &= 15))
                              throw "unknown kern table format: " + c
                            i = e.kern.readFormat0(t, i, l)
                          }
                          return l
                        }),
                        (e.kern.parseV1 = function (t, i, r, o) {
                          var n = e._bin
                          n.readFixed(t, i), (i += 4)
                          var a = n.readUint(t, i)
                          i += 4
                          for (
                            var s = { glyph1: [], rval: [] }, l = 0;
                            l < a;
                            l++
                          ) {
                            n.readUint(t, i), (i += 4)
                            var u = n.readUshort(t, i)
                            ;(i += 2), n.readUshort(t, i), (i += 2)
                            var d = u >>> 8
                            if (0 != (d &= 15))
                              throw "unknown kern table format: " + d
                            i = e.kern.readFormat0(t, i, s)
                          }
                          return s
                        }),
                        (e.kern.readFormat0 = function (t, i, r) {
                          var o = e._bin,
                            n = -1,
                            a = o.readUshort(t, i)
                          ;(i += 2),
                            o.readUshort(t, i),
                            (i += 2),
                            o.readUshort(t, i),
                            (i += 2),
                            o.readUshort(t, i),
                            (i += 2)
                          for (var s = 0; s < a; s++) {
                            var l = o.readUshort(t, i)
                            i += 2
                            var u = o.readUshort(t, i)
                            i += 2
                            var d = o.readShort(t, i)
                            ;(i += 2),
                              l != n &&
                                (r.glyph1.push(l),
                                r.rval.push({ glyph2: [], vals: [] }))
                            var c = r.rval[r.rval.length - 1]
                            c.glyph2.push(u), c.vals.push(d), (n = l)
                          }
                          return i
                        }),
                        (e.loca = {}),
                        (e.loca.parse = function (t, i, r, o) {
                          var n = e._bin,
                            a = [],
                            s = o.head.indexToLocFormat,
                            l = o.maxp.numGlyphs + 1
                          if (0 == s)
                            for (var u = 0; u < l; u++)
                              a.push(n.readUshort(t, i + (u << 1)) << 1)
                          if (1 == s)
                            for (u = 0; u < l; u++)
                              a.push(n.readUint(t, i + (u << 2)))
                          return a
                        }),
                        (e.maxp = {}),
                        (e.maxp.parse = function (t, i, r) {
                          var o = e._bin,
                            n = {},
                            a = o.readUint(t, i)
                          return (
                            (i += 4),
                            (n.numGlyphs = o.readUshort(t, i)),
                            (i += 2),
                            65536 == a &&
                              ((n.maxPoints = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxContours = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxCompositePoints = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxCompositeContours = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxZones = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxTwilightPoints = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxStorage = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxFunctionDefs = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxInstructionDefs = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxStackElements = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxSizeOfInstructions = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxComponentElements = o.readUshort(t, i)),
                              (i += 2),
                              (n.maxComponentDepth = o.readUshort(t, i)),
                              (i += 2)),
                            n
                          )
                        }),
                        (e.name = {}),
                        (e.name.parse = function (t, i, r) {
                          var o = e._bin,
                            n = {}
                          o.readUshort(t, i), (i += 2)
                          var a = o.readUshort(t, i)
                          ;(i += 2), o.readUshort(t, i)
                          for (
                            var s,
                              l = [
                                "copyright",
                                "fontFamily",
                                "fontSubfamily",
                                "ID",
                                "fullName",
                                "version",
                                "postScriptName",
                                "trademark",
                                "manufacturer",
                                "designer",
                                "description",
                                "urlVendor",
                                "urlDesigner",
                                "licence",
                                "licenceURL",
                                "---",
                                "typoFamilyName",
                                "typoSubfamilyName",
                                "compatibleFull",
                                "sampleText",
                                "postScriptCID",
                                "wwsFamilyName",
                                "wwsSubfamilyName",
                                "lightPalette",
                                "darkPalette",
                              ],
                              u = (i += 2),
                              d = 0;
                            d < a;
                            d++
                          ) {
                            var c = o.readUshort(t, i)
                            i += 2
                            var h = o.readUshort(t, i)
                            i += 2
                            var f = o.readUshort(t, i)
                            i += 2
                            var g = o.readUshort(t, i)
                            i += 2
                            var p = o.readUshort(t, i)
                            i += 2
                            var m = o.readUshort(t, i)
                            i += 2
                            var v,
                              b = l[g],
                              y = u + 12 * a + m
                            if (0 == c) v = o.readUnicode(t, y, p / 2)
                            else if (3 == c && 0 == h)
                              v = o.readUnicode(t, y, p / 2)
                            else if (0 == h) v = o.readASCII(t, y, p)
                            else if (1 == h) v = o.readUnicode(t, y, p / 2)
                            else if (3 == h) v = o.readUnicode(t, y, p / 2)
                            else {
                              if (1 != c)
                                throw (
                                  "unknown encoding " + h + ", platformID: " + c
                                )
                              ;(v = o.readASCII(t, y, p)),
                                console.debug(
                                  "reading unknown MAC encoding " +
                                    h +
                                    " as ASCII"
                                )
                            }
                            var A = "p" + c + "," + f.toString(16)
                            null == n[A] && (n[A] = {}),
                              (n[A][void 0 !== b ? b : g] = v),
                              (n[A]._lang = f)
                          }
                          for (var w in n)
                            if (
                              null != n[w].postScriptName &&
                              1033 == n[w]._lang
                            )
                              return n[w]
                          for (var w in n)
                            if (null != n[w].postScriptName && 0 == n[w]._lang)
                              return n[w]
                          for (var w in n)
                            if (
                              null != n[w].postScriptName &&
                              3084 == n[w]._lang
                            )
                              return n[w]
                          for (var w in n)
                            if (null != n[w].postScriptName) return n[w]
                          for (var w in n) {
                            s = w
                            break
                          }
                          return (
                            console.debug(
                              "returning name table with languageID " +
                                n[s]._lang
                            ),
                            n[s]
                          )
                        }),
                        (e["OS/2"] = {}),
                        (e["OS/2"].parse = function (t, i, r) {
                          var o = e._bin.readUshort(t, i)
                          i += 2
                          var n = {}
                          if (0 == o) e["OS/2"].version0(t, i, n)
                          else if (1 == o) e["OS/2"].version1(t, i, n)
                          else if (2 == o || 3 == o || 4 == o)
                            e["OS/2"].version2(t, i, n)
                          else {
                            if (5 != o) throw "unknown OS/2 table version: " + o
                            e["OS/2"].version5(t, i, n)
                          }
                          return n
                        }),
                        (e["OS/2"].version0 = function (t, i, r) {
                          var o = e._bin
                          return (
                            (r.xAvgCharWidth = o.readShort(t, i)),
                            (i += 2),
                            (r.usWeightClass = o.readUshort(t, i)),
                            (i += 2),
                            (r.usWidthClass = o.readUshort(t, i)),
                            (i += 2),
                            (r.fsType = o.readUshort(t, i)),
                            (i += 2),
                            (r.ySubscriptXSize = o.readShort(t, i)),
                            (i += 2),
                            (r.ySubscriptYSize = o.readShort(t, i)),
                            (i += 2),
                            (r.ySubscriptXOffset = o.readShort(t, i)),
                            (i += 2),
                            (r.ySubscriptYOffset = o.readShort(t, i)),
                            (i += 2),
                            (r.ySuperscriptXSize = o.readShort(t, i)),
                            (i += 2),
                            (r.ySuperscriptYSize = o.readShort(t, i)),
                            (i += 2),
                            (r.ySuperscriptXOffset = o.readShort(t, i)),
                            (i += 2),
                            (r.ySuperscriptYOffset = o.readShort(t, i)),
                            (i += 2),
                            (r.yStrikeoutSize = o.readShort(t, i)),
                            (i += 2),
                            (r.yStrikeoutPosition = o.readShort(t, i)),
                            (i += 2),
                            (r.sFamilyClass = o.readShort(t, i)),
                            (i += 2),
                            (r.panose = o.readBytes(t, i, 10)),
                            (i += 10),
                            (r.ulUnicodeRange1 = o.readUint(t, i)),
                            (i += 4),
                            (r.ulUnicodeRange2 = o.readUint(t, i)),
                            (i += 4),
                            (r.ulUnicodeRange3 = o.readUint(t, i)),
                            (i += 4),
                            (r.ulUnicodeRange4 = o.readUint(t, i)),
                            (i += 4),
                            (r.achVendID = [
                              o.readInt8(t, i),
                              o.readInt8(t, i + 1),
                              o.readInt8(t, i + 2),
                              o.readInt8(t, i + 3),
                            ]),
                            (i += 4),
                            (r.fsSelection = o.readUshort(t, i)),
                            (i += 2),
                            (r.usFirstCharIndex = o.readUshort(t, i)),
                            (i += 2),
                            (r.usLastCharIndex = o.readUshort(t, i)),
                            (i += 2),
                            (r.sTypoAscender = o.readShort(t, i)),
                            (i += 2),
                            (r.sTypoDescender = o.readShort(t, i)),
                            (i += 2),
                            (r.sTypoLineGap = o.readShort(t, i)),
                            (i += 2),
                            (r.usWinAscent = o.readUshort(t, i)),
                            (i += 2),
                            (r.usWinDescent = o.readUshort(t, i)),
                            i + 2
                          )
                        }),
                        (e["OS/2"].version1 = function (t, i, r) {
                          var o = e._bin
                          return (
                            (i = e["OS/2"].version0(t, i, r)),
                            (r.ulCodePageRange1 = o.readUint(t, i)),
                            (i += 4),
                            (r.ulCodePageRange2 = o.readUint(t, i)),
                            i + 4
                          )
                        }),
                        (e["OS/2"].version2 = function (t, i, r) {
                          var o = e._bin
                          return (
                            (i = e["OS/2"].version1(t, i, r)),
                            (r.sxHeight = o.readShort(t, i)),
                            (i += 2),
                            (r.sCapHeight = o.readShort(t, i)),
                            (i += 2),
                            (r.usDefault = o.readUshort(t, i)),
                            (i += 2),
                            (r.usBreak = o.readUshort(t, i)),
                            (i += 2),
                            (r.usMaxContext = o.readUshort(t, i)),
                            i + 2
                          )
                        }),
                        (e["OS/2"].version5 = function (t, i, r) {
                          var o = e._bin
                          return (
                            (i = e["OS/2"].version2(t, i, r)),
                            (r.usLowerOpticalPointSize = o.readUshort(t, i)),
                            (i += 2),
                            (r.usUpperOpticalPointSize = o.readUshort(t, i)),
                            i + 2
                          )
                        }),
                        (e.post = {}),
                        (e.post.parse = function (t, i, r) {
                          var o = e._bin,
                            n = {}
                          return (
                            (n.version = o.readFixed(t, i)),
                            (i += 4),
                            (n.italicAngle = o.readFixed(t, i)),
                            (i += 4),
                            (n.underlinePosition = o.readShort(t, i)),
                            (i += 2),
                            (n.underlineThickness = o.readShort(t, i)),
                            (i += 2),
                            n
                          )
                        }),
                        null == e && (e = {}),
                        null == e.U && (e.U = {}),
                        (e.U.codeToGlyph = function (t, e) {
                          var i = t.cmap,
                            r = -1
                          if (
                            (null != i.p0e4
                              ? (r = i.p0e4)
                              : null != i.p3e1
                              ? (r = i.p3e1)
                              : null != i.p1e0
                              ? (r = i.p1e0)
                              : null != i.p0e3 && (r = i.p0e3),
                            -1 == r)
                          )
                            throw "no familiar platform and encoding!"
                          var o = i.tables[r]
                          if (0 == o.format)
                            return e >= o.map.length ? 0 : o.map[e]
                          if (4 == o.format) {
                            for (var n = -1, a = 0; a < o.endCount.length; a++)
                              if (e <= o.endCount[a]) {
                                n = a
                                break
                              }
                            return -1 == n || o.startCount[n] > e
                              ? 0
                              : 65535 &
                                  (0 != o.idRangeOffset[n]
                                    ? o.glyphIdArray[
                                        e -
                                          o.startCount[n] +
                                          (o.idRangeOffset[n] >> 1) -
                                          (o.idRangeOffset.length - n)
                                      ]
                                    : e + o.idDelta[n])
                          }
                          if (12 == o.format) {
                            if (e > o.groups[o.groups.length - 1][1]) return 0
                            for (a = 0; a < o.groups.length; a++) {
                              var s = o.groups[a]
                              if (s[0] <= e && e <= s[1])
                                return s[2] + (e - s[0])
                            }
                            return 0
                          }
                          throw "unknown cmap table format " + o.format
                        }),
                        (e.U.glyphToPath = function (t, i) {
                          var r = { cmds: [], crds: [] }
                          if (t.SVG && t.SVG.entries[i]) {
                            var o = t.SVG.entries[i]
                            return null == o
                              ? r
                              : ("string" == typeof o &&
                                  ((o = e.SVG.toPath(o)),
                                  (t.SVG.entries[i] = o)),
                                o)
                          }
                          if (t.CFF) {
                            var n = {
                                x: 0,
                                y: 0,
                                stack: [],
                                nStems: 0,
                                haveWidth: !1,
                                width: t.CFF.Private
                                  ? t.CFF.Private.defaultWidthX
                                  : 0,
                                open: !1,
                              },
                              a = t.CFF,
                              s = t.CFF.Private
                            if (a.ROS) {
                              for (var l = 0; a.FDSelect[l + 2] <= i; ) l += 2
                              s = a.FDArray[a.FDSelect[l + 1]].Private
                            }
                            e.U._drawCFF(t.CFF.CharStrings[i], n, a, s, r)
                          } else t.glyf && e.U._drawGlyf(i, t, r)
                          return r
                        }),
                        (e.U._drawGlyf = function (t, i, r) {
                          var o = i.glyf[t]
                          null == o &&
                            (o = i.glyf[t] = e.glyf._parseGlyf(i, t)),
                            null != o &&
                              (o.noc > -1
                                ? e.U._simpleGlyph(o, r)
                                : e.U._compoGlyph(o, i, r))
                        }),
                        (e.U._simpleGlyph = function (t, i) {
                          for (var r = 0; r < t.noc; r++) {
                            for (
                              var o = 0 == r ? 0 : t.endPts[r - 1] + 1,
                                n = t.endPts[r],
                                a = o;
                              a <= n;
                              a++
                            ) {
                              var s = a == o ? n : a - 1,
                                l = a == n ? o : a + 1,
                                u = 1 & t.flags[a],
                                d = 1 & t.flags[s],
                                c = 1 & t.flags[l],
                                h = t.xs[a],
                                f = t.ys[a]
                              if (a == o)
                                if (u) {
                                  if (!d) {
                                    e.U.P.moveTo(i, h, f)
                                    continue
                                  }
                                  e.U.P.moveTo(i, t.xs[s], t.ys[s])
                                } else
                                  d
                                    ? e.U.P.moveTo(i, t.xs[s], t.ys[s])
                                    : e.U.P.moveTo(
                                        i,
                                        (t.xs[s] + h) / 2,
                                        (t.ys[s] + f) / 2
                                      )
                              u
                                ? d && e.U.P.lineTo(i, h, f)
                                : c
                                ? e.U.P.qcurveTo(i, h, f, t.xs[l], t.ys[l])
                                : e.U.P.qcurveTo(
                                    i,
                                    h,
                                    f,
                                    (h + t.xs[l]) / 2,
                                    (f + t.ys[l]) / 2
                                  )
                            }
                            e.U.P.closePath(i)
                          }
                        }),
                        (e.U._compoGlyph = function (t, i, r) {
                          for (var o = 0; o < t.parts.length; o++) {
                            var n = { cmds: [], crds: [] },
                              a = t.parts[o]
                            e.U._drawGlyf(a.glyphIndex, i, n)
                            for (
                              var s = a.m, l = 0;
                              l < n.crds.length;
                              l += 2
                            ) {
                              var u = n.crds[l],
                                d = n.crds[l + 1]
                              r.crds.push(u * s.a + d * s.b + s.tx),
                                r.crds.push(u * s.c + d * s.d + s.ty)
                            }
                            for (l = 0; l < n.cmds.length; l++)
                              r.cmds.push(n.cmds[l])
                          }
                        }),
                        (e.U._getGlyphClass = function (t, i) {
                          var r = e._lctf.getInterval(i, t)
                          return -1 == r ? 0 : i[r + 2]
                        }),
                        (e.U.getPairAdjustment = function (t, i, r) {
                          var o = !1
                          if (t.GPOS)
                            for (
                              var n = t.GPOS,
                                a = n.lookupList,
                                s = n.featureList,
                                l = [],
                                u = 0;
                              u < s.length;
                              u++
                            ) {
                              var d = s[u]
                              if ("kern" == d.tag) {
                                o = !0
                                for (var c = 0; c < d.tab.length; c++)
                                  if (!l[d.tab[c]]) {
                                    l[d.tab[c]] = !0
                                    for (
                                      var h = a[d.tab[c]], f = 0;
                                      f < h.tabs.length;
                                      f++
                                    )
                                      if (null != h.tabs[f]) {
                                        var g,
                                          p = h.tabs[f]
                                        if (
                                          !p.coverage ||
                                          -1 !=
                                            (g = e._lctf.coverageIndex(
                                              p.coverage,
                                              i
                                            ))
                                        )
                                          if (1 == h.ltype);
                                          else if (2 == h.ltype) {
                                            var m = null
                                            if (1 == p.fmt) {
                                              var v = p.pairsets[g]
                                              for (u = 0; u < v.length; u++)
                                                v[u].gid2 == r && (m = v[u])
                                            } else if (2 == p.fmt) {
                                              var b = e.U._getGlyphClass(
                                                  i,
                                                  p.classDef1
                                                ),
                                                y = e.U._getGlyphClass(
                                                  r,
                                                  p.classDef2
                                                )
                                              m = p.matrix[b][y]
                                            }
                                            if (m) {
                                              var A = 0
                                              return (
                                                m.val1 &&
                                                  m.val1[2] &&
                                                  (A += m.val1[2]),
                                                m.val2 &&
                                                  m.val2[0] &&
                                                  (A += m.val2[0]),
                                                A
                                              )
                                            }
                                          }
                                      }
                                  }
                              }
                            }
                          if (t.kern && !o) {
                            var w = t.kern.glyph1.indexOf(i)
                            if (-1 != w) {
                              var k = t.kern.rval[w].glyph2.indexOf(r)
                              if (-1 != k) return t.kern.rval[w].vals[k]
                            }
                          }
                          return 0
                        }),
                        (e.U._applySubs = function (t, i, r, o) {
                          for (
                            var n = t.length - i - 1, a = 0;
                            a < r.tabs.length;
                            a++
                          )
                            if (null != r.tabs[a]) {
                              var s,
                                l = r.tabs[a]
                              if (
                                !l.coverage ||
                                -1 !=
                                  (s = e._lctf.coverageIndex(l.coverage, t[i]))
                              )
                                if (1 == r.ltype)
                                  t[i],
                                    1 == l.fmt
                                      ? (t[i] = t[i] + l.delta)
                                      : (t[i] = l.newg[s])
                                else if (4 == r.ltype)
                                  for (
                                    var u = l.vals[s], d = 0;
                                    d < u.length;
                                    d++
                                  ) {
                                    var c = u[d],
                                      h = c.chain.length
                                    if (!(h > n)) {
                                      for (
                                        var f = !0, g = 0, p = 0;
                                        p < h;
                                        p++
                                      ) {
                                        for (; -1 == t[i + g + (1 + p)]; ) g++
                                        c.chain[p] != t[i + g + (1 + p)] &&
                                          (f = !1)
                                      }
                                      if (f) {
                                        for (
                                          t[i] = c.nglyph, p = 0;
                                          p < h + g;
                                          p++
                                        )
                                          t[i + p + 1] = -1
                                        break
                                      }
                                    }
                                  }
                                else if (5 == r.ltype && 2 == l.fmt)
                                  for (
                                    var m = e._lctf.getInterval(l.cDef, t[i]),
                                      v = l.cDef[m + 2],
                                      b = l.scset[v],
                                      y = 0;
                                    y < b.length;
                                    y++
                                  ) {
                                    var A = b[y],
                                      w = A.input
                                    if (!(w.length > n)) {
                                      for (f = !0, p = 0; p < w.length; p++) {
                                        var k = e._lctf.getInterval(
                                          l.cDef,
                                          t[i + 1 + p]
                                        )
                                        if (-1 == m && l.cDef[k + 2] != w[p]) {
                                          f = !1
                                          break
                                        }
                                      }
                                      if (f) {
                                        var C = A.substLookupRecords
                                        for (d = 0; d < C.length; d += 2)
                                          C[d], C[d + 1]
                                      }
                                    }
                                  }
                                else if (6 == r.ltype && 3 == l.fmt) {
                                  if (
                                    !e.U._glsCovered(
                                      t,
                                      l.backCvg,
                                      i - l.backCvg.length
                                    )
                                  )
                                    continue
                                  if (!e.U._glsCovered(t, l.inptCvg, i))
                                    continue
                                  if (
                                    !e.U._glsCovered(
                                      t,
                                      l.ahedCvg,
                                      i + l.inptCvg.length
                                    )
                                  )
                                    continue
                                  var x = l.lookupRec
                                  for (y = 0; y < x.length; y += 2) {
                                    m = x[y]
                                    var S = o[x[y + 1]]
                                    e.U._applySubs(t, i + m, S, o)
                                  }
                                }
                            }
                        }),
                        (e.U._glsCovered = function (t, i, r) {
                          for (var o = 0; o < i.length; o++)
                            if (-1 == e._lctf.coverageIndex(i[o], t[r + o]))
                              return !1
                          return !0
                        }),
                        (e.U.glyphsToPath = function (t, i, r) {
                          for (
                            var o = { cmds: [], crds: [] }, n = 0, a = 0;
                            a < i.length;
                            a++
                          ) {
                            var s = i[a]
                            if (-1 != s) {
                              for (
                                var l =
                                    a < i.length - 1 && -1 != i[a + 1]
                                      ? i[a + 1]
                                      : 0,
                                  u = e.U.glyphToPath(t, s),
                                  d = 0;
                                d < u.crds.length;
                                d += 2
                              )
                                o.crds.push(u.crds[d] + n),
                                  o.crds.push(u.crds[d + 1])
                              for (
                                r && o.cmds.push(r), d = 0;
                                d < u.cmds.length;
                                d++
                              )
                                o.cmds.push(u.cmds[d])
                              r && o.cmds.push("X"),
                                (n += t.hmtx.aWidth[s]),
                                a < i.length - 1 &&
                                  (n += e.U.getPairAdjustment(t, s, l))
                            }
                          }
                          return o
                        }),
                        (e.U.P = {}),
                        (e.U.P.moveTo = function (t, e, i) {
                          t.cmds.push("M"), t.crds.push(e, i)
                        }),
                        (e.U.P.lineTo = function (t, e, i) {
                          t.cmds.push("L"), t.crds.push(e, i)
                        }),
                        (e.U.P.curveTo = function (t, e, i, r, o, n, a) {
                          t.cmds.push("C"), t.crds.push(e, i, r, o, n, a)
                        }),
                        (e.U.P.qcurveTo = function (t, e, i, r, o) {
                          t.cmds.push("Q"), t.crds.push(e, i, r, o)
                        }),
                        (e.U.P.closePath = function (t) {
                          t.cmds.push("Z")
                        }),
                        (e.U._drawCFF = function (t, i, r, o, n) {
                          for (
                            var a = i.stack,
                              s = i.nStems,
                              l = i.haveWidth,
                              u = i.width,
                              d = i.open,
                              c = 0,
                              h = i.x,
                              f = i.y,
                              g = 0,
                              p = 0,
                              m = 0,
                              v = 0,
                              b = 0,
                              y = 0,
                              A = 0,
                              w = 0,
                              k = 0,
                              C = 0,
                              x = { val: 0, size: 0 };
                            c < t.length;

                          ) {
                            e.CFF.getCharString(t, c, x)
                            var S = x.val
                            if (((c += x.size), "o1" == S || "o18" == S))
                              a.length % 2 != 0 &&
                                !l &&
                                (u = a.shift() + o.nominalWidthX),
                                (s += a.length >> 1),
                                (a.length = 0),
                                (l = !0)
                            else if ("o3" == S || "o23" == S)
                              a.length % 2 != 0 &&
                                !l &&
                                (u = a.shift() + o.nominalWidthX),
                                (s += a.length >> 1),
                                (a.length = 0),
                                (l = !0)
                            else if ("o4" == S)
                              a.length > 1 &&
                                !l &&
                                ((u = a.shift() + o.nominalWidthX), (l = !0)),
                                d && e.U.P.closePath(n),
                                (f += a.pop()),
                                e.U.P.moveTo(n, h, f),
                                (d = !0)
                            else if ("o5" == S)
                              for (; a.length > 0; )
                                (h += a.shift()),
                                  (f += a.shift()),
                                  e.U.P.lineTo(n, h, f)
                            else if ("o6" == S || "o7" == S)
                              for (
                                var _ = a.length, E = "o6" == S, T = 0;
                                T < _;
                                T++
                              ) {
                                var U = a.shift()
                                E ? (h += U) : (f += U),
                                  (E = !E),
                                  e.U.P.lineTo(n, h, f)
                              }
                            else if ("o8" == S || "o24" == S) {
                              _ = a.length
                              for (var F = 0; F + 6 <= _; )
                                (g = h + a.shift()),
                                  (p = f + a.shift()),
                                  (m = g + a.shift()),
                                  (v = p + a.shift()),
                                  (h = m + a.shift()),
                                  (f = v + a.shift()),
                                  e.U.P.curveTo(n, g, p, m, v, h, f),
                                  (F += 6)
                              "o24" == S &&
                                ((h += a.shift()),
                                (f += a.shift()),
                                e.U.P.lineTo(n, h, f))
                            } else {
                              if ("o11" == S) break
                              if (
                                "o1234" == S ||
                                "o1235" == S ||
                                "o1236" == S ||
                                "o1237" == S
                              )
                                "o1234" == S &&
                                  ((p = f),
                                  (m = (g = h + a.shift()) + a.shift()),
                                  (C = v = p + a.shift()),
                                  (y = v),
                                  (w = f),
                                  (h =
                                    (A =
                                      (b = (k = m + a.shift()) + a.shift()) +
                                      a.shift()) + a.shift()),
                                  e.U.P.curveTo(n, g, p, m, v, k, C),
                                  e.U.P.curveTo(n, b, y, A, w, h, f)),
                                  "o1235" == S &&
                                    ((g = h + a.shift()),
                                    (p = f + a.shift()),
                                    (m = g + a.shift()),
                                    (v = p + a.shift()),
                                    (k = m + a.shift()),
                                    (C = v + a.shift()),
                                    (b = k + a.shift()),
                                    (y = C + a.shift()),
                                    (A = b + a.shift()),
                                    (w = y + a.shift()),
                                    (h = A + a.shift()),
                                    (f = w + a.shift()),
                                    a.shift(),
                                    e.U.P.curveTo(n, g, p, m, v, k, C),
                                    e.U.P.curveTo(n, b, y, A, w, h, f)),
                                  "o1236" == S &&
                                    ((g = h + a.shift()),
                                    (p = f + a.shift()),
                                    (m = g + a.shift()),
                                    (C = v = p + a.shift()),
                                    (y = v),
                                    (A =
                                      (b = (k = m + a.shift()) + a.shift()) +
                                      a.shift()),
                                    (w = y + a.shift()),
                                    (h = A + a.shift()),
                                    e.U.P.curveTo(n, g, p, m, v, k, C),
                                    e.U.P.curveTo(n, b, y, A, w, h, f)),
                                  "o1237" == S &&
                                    ((g = h + a.shift()),
                                    (p = f + a.shift()),
                                    (m = g + a.shift()),
                                    (v = p + a.shift()),
                                    (k = m + a.shift()),
                                    (C = v + a.shift()),
                                    (b = k + a.shift()),
                                    (y = C + a.shift()),
                                    (A = b + a.shift()),
                                    (w = y + a.shift()),
                                    Math.abs(A - h) > Math.abs(w - f)
                                      ? (h = A + a.shift())
                                      : (f = w + a.shift()),
                                    e.U.P.curveTo(n, g, p, m, v, k, C),
                                    e.U.P.curveTo(n, b, y, A, w, h, f))
                              else if ("o14" == S) {
                                if (
                                  (a.length > 0 &&
                                    !l &&
                                    ((u = a.shift() + r.nominalWidthX),
                                    (l = !0)),
                                  4 == a.length)
                                ) {
                                  var I = a.shift(),
                                    $ = a.shift(),
                                    O = a.shift(),
                                    R = a.shift(),
                                    D = e.CFF.glyphBySE(r, O),
                                    M = e.CFF.glyphBySE(r, R)
                                  e.U._drawCFF(r.CharStrings[D], i, r, o, n),
                                    (i.x = I),
                                    (i.y = $),
                                    e.U._drawCFF(r.CharStrings[M], i, r, o, n)
                                }
                                d && (e.U.P.closePath(n), (d = !1))
                              } else if ("o19" == S || "o20" == S)
                                a.length % 2 != 0 &&
                                  !l &&
                                  (u = a.shift() + o.nominalWidthX),
                                  (s += a.length >> 1),
                                  (a.length = 0),
                                  (l = !0),
                                  (c += (s + 7) >> 3)
                              else if ("o21" == S)
                                a.length > 2 &&
                                  !l &&
                                  ((u = a.shift() + o.nominalWidthX), (l = !0)),
                                  (f += a.pop()),
                                  (h += a.pop()),
                                  d && e.U.P.closePath(n),
                                  e.U.P.moveTo(n, h, f),
                                  (d = !0)
                              else if ("o22" == S)
                                a.length > 1 &&
                                  !l &&
                                  ((u = a.shift() + o.nominalWidthX), (l = !0)),
                                  (h += a.pop()),
                                  d && e.U.P.closePath(n),
                                  e.U.P.moveTo(n, h, f),
                                  (d = !0)
                              else if ("o25" == S) {
                                for (; a.length > 6; )
                                  (h += a.shift()),
                                    (f += a.shift()),
                                    e.U.P.lineTo(n, h, f)
                                ;(g = h + a.shift()),
                                  (p = f + a.shift()),
                                  (m = g + a.shift()),
                                  (v = p + a.shift()),
                                  (h = m + a.shift()),
                                  (f = v + a.shift()),
                                  e.U.P.curveTo(n, g, p, m, v, h, f)
                              } else if ("o26" == S)
                                for (
                                  a.length % 2 && (h += a.shift());
                                  a.length > 0;

                                )
                                  (g = h),
                                    (p = f + a.shift()),
                                    (h = m = g + a.shift()),
                                    (f = (v = p + a.shift()) + a.shift()),
                                    e.U.P.curveTo(n, g, p, m, v, h, f)
                              else if ("o27" == S)
                                for (
                                  a.length % 2 && (f += a.shift());
                                  a.length > 0;

                                )
                                  (p = f),
                                    (m = (g = h + a.shift()) + a.shift()),
                                    (v = p + a.shift()),
                                    (h = m + a.shift()),
                                    (f = v),
                                    e.U.P.curveTo(n, g, p, m, v, h, f)
                              else if ("o10" == S || "o29" == S) {
                                var B = "o10" == S ? o : r
                                if (0 == a.length)
                                  console.debug("error: empty stack")
                                else {
                                  var L = a.pop(),
                                    P = B.Subrs[L + B.Bias]
                                  ;(i.x = h),
                                    (i.y = f),
                                    (i.nStems = s),
                                    (i.haveWidth = l),
                                    (i.width = u),
                                    (i.open = d),
                                    e.U._drawCFF(P, i, r, o, n),
                                    (h = i.x),
                                    (f = i.y),
                                    (s = i.nStems),
                                    (l = i.haveWidth),
                                    (u = i.width),
                                    (d = i.open)
                                }
                              } else if ("o30" == S || "o31" == S) {
                                var z = a.length,
                                  G = ((F = 0), "o31" == S)
                                for (F += z - (_ = -3 & z); F < _; )
                                  G
                                    ? ((p = f),
                                      (m = (g = h + a.shift()) + a.shift()),
                                      (f = (v = p + a.shift()) + a.shift()),
                                      _ - F == 5
                                        ? ((h = m + a.shift()), F++)
                                        : (h = m),
                                      (G = !1))
                                    : ((g = h),
                                      (p = f + a.shift()),
                                      (m = g + a.shift()),
                                      (v = p + a.shift()),
                                      (h = m + a.shift()),
                                      _ - F == 5
                                        ? ((f = v + a.shift()), F++)
                                        : (f = v),
                                      (G = !0)),
                                    e.U.P.curveTo(n, g, p, m, v, h, f),
                                    (F += 4)
                              } else {
                                if ("o" == (S + "").charAt(0))
                                  throw (
                                    (console.debug(
                                      "Unknown operation: " + S,
                                      t
                                    ),
                                    S)
                                  )
                                a.push(S)
                              }
                            }
                          }
                          ;(i.x = h),
                            (i.y = f),
                            (i.nStems = s),
                            (i.haveWidth = l),
                            (i.width = u),
                            (i.open = d)
                        })
                      var i = e,
                        r = { Typr: i }
                      return (
                        (t.Typr = i),
                        (t.default = r),
                        Object.defineProperty(t, "__esModule", { value: !0 }),
                        t
                      )
                    })({}).Typr
                  )
                },
                /*!
  Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
  (https://github.com/101arrowz/fflate) for use in Troika text rendering. 
  Original licenses apply: 
  - fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
  - woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
  */ function () {
                  return (function (t) {
                    var e = Uint8Array,
                      i = Uint16Array,
                      r = Uint32Array,
                      o = new e([
                        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3,
                        3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0,
                      ]),
                      n = new e([
                        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8,
                        8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0,
                      ]),
                      a = new e([
                        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2,
                        14, 1, 15,
                      ]),
                      s = function (t, e) {
                        for (var o = new i(31), n = 0; n < 31; ++n)
                          o[n] = e += 1 << t[n - 1]
                        var a = new r(o[30])
                        for (n = 1; n < 30; ++n)
                          for (var s = o[n]; s < o[n + 1]; ++s)
                            a[s] = ((s - o[n]) << 5) | n
                        return [o, a]
                      },
                      l = s(o, 2),
                      u = l[0],
                      d = l[1]
                    ;(u[28] = 258), (d[258] = 28)
                    for (
                      var c = s(n, 0)[0], h = new i(32768), f = 0;
                      f < 32768;
                      ++f
                    ) {
                      var g = ((43690 & f) >>> 1) | ((21845 & f) << 1)
                      ;(g =
                        ((61680 &
                          (g = ((52428 & g) >>> 2) | ((13107 & g) << 2))) >>>
                          4) |
                        ((3855 & g) << 4)),
                        (h[f] = (((65280 & g) >>> 8) | ((255 & g) << 8)) >>> 1)
                    }
                    var p = function (t, e, r) {
                        for (var o = t.length, n = 0, a = new i(e); n < o; ++n)
                          ++a[t[n] - 1]
                        var s,
                          l = new i(e)
                        for (n = 0; n < e; ++n)
                          l[n] = (l[n - 1] + a[n - 1]) << 1
                        if (r) {
                          s = new i(1 << e)
                          var u = 15 - e
                          for (n = 0; n < o; ++n)
                            if (t[n])
                              for (
                                var d = (n << 4) | t[n],
                                  c = e - t[n],
                                  f = l[t[n] - 1]++ << c,
                                  g = f | ((1 << c) - 1);
                                f <= g;
                                ++f
                              )
                                s[h[f] >>> u] = d
                        } else
                          for (s = new i(o), n = 0; n < o; ++n)
                            t[n] && (s[n] = h[l[t[n] - 1]++] >>> (15 - t[n]))
                        return s
                      },
                      m = new e(288)
                    for (f = 0; f < 144; ++f) m[f] = 8
                    for (f = 144; f < 256; ++f) m[f] = 9
                    for (f = 256; f < 280; ++f) m[f] = 7
                    for (f = 280; f < 288; ++f) m[f] = 8
                    var v = new e(32)
                    for (f = 0; f < 32; ++f) v[f] = 5
                    var b = p(m, 9, 1),
                      y = p(v, 5, 1),
                      A = function (t) {
                        for (var e = t[0], i = 1; i < t.length; ++i)
                          t[i] > e && (e = t[i])
                        return e
                      },
                      w = function (t, e, i) {
                        var r = (e / 8) | 0
                        return ((t[r] | (t[r + 1] << 8)) >> (7 & e)) & i
                      },
                      k = function (t, e) {
                        var i = (e / 8) | 0
                        return (
                          (t[i] | (t[i + 1] << 8) | (t[i + 2] << 16)) >> (7 & e)
                        )
                      },
                      C = [
                        "unexpected EOF",
                        "invalid block type",
                        "invalid length/literal",
                        "invalid distance",
                        "stream finished",
                        "no stream handler",
                        ,
                        "no callback",
                        "invalid UTF-8 data",
                        "extra field too long",
                        "date not in range 1980-2099",
                        "filename too long",
                        "stream finishing",
                        "invalid zip data",
                      ],
                      x = function (t, e, i) {
                        var r = new Error(e || C[t])
                        if (
                          ((r.code = t),
                          Error.captureStackTrace &&
                            Error.captureStackTrace(r, x),
                          !i)
                        )
                          throw r
                        return r
                      },
                      S = function (t, s, l) {
                        var d = t.length
                        if (!d || (l && !l.l && d < 5)) return s || new e(0)
                        var h = !s || l,
                          f = !l || l.i
                        l || (l = {}), s || (s = new e(3 * d))
                        var g,
                          m = function (t) {
                            var i = s.length
                            if (t > i) {
                              var r = new e(Math.max(2 * i, t))
                              r.set(s), (s = r)
                            }
                          },
                          v = l.f || 0,
                          C = l.p || 0,
                          S = l.b || 0,
                          _ = l.l,
                          E = l.d,
                          T = l.m,
                          U = l.n,
                          F = 8 * d
                        do {
                          if (!_) {
                            l.f = v = w(t, C, 1)
                            var I = w(t, C + 1, 3)
                            if (((C += 3), !I)) {
                              var $ =
                                  t[
                                    (j =
                                      (((g = C) / 8) | 0) + (7 & g && 1) + 4) -
                                      4
                                  ] |
                                  (t[j - 3] << 8),
                                O = j + $
                              if (O > d) {
                                f && x(0)
                                break
                              }
                              h && m(S + $),
                                s.set(t.subarray(j, O), S),
                                (l.b = S += $),
                                (l.p = C = 8 * O)
                              continue
                            }
                            if (1 == I) (_ = b), (E = y), (T = 9), (U = 5)
                            else if (2 == I) {
                              var R = w(t, C, 31) + 257,
                                D = w(t, C + 10, 15) + 4,
                                M = R + w(t, C + 5, 31) + 1
                              C += 14
                              for (
                                var B = new e(M), L = new e(19), P = 0;
                                P < D;
                                ++P
                              )
                                L[a[P]] = w(t, C + 3 * P, 7)
                              C += 3 * D
                              var z = A(L),
                                G = (1 << z) - 1,
                                W = p(L, z, 1)
                              for (P = 0; P < M; ) {
                                var j,
                                  N = W[w(t, C, G)]
                                if (((C += 15 & N), (j = N >>> 4) < 16))
                                  B[P++] = j
                                else {
                                  var V = 0,
                                    H = 0
                                  for (
                                    16 == j
                                      ? ((H = 3 + w(t, C, 3)),
                                        (C += 2),
                                        (V = B[P - 1]))
                                      : 17 == j
                                      ? ((H = 3 + w(t, C, 7)), (C += 3))
                                      : 18 == j &&
                                        ((H = 11 + w(t, C, 127)), (C += 7));
                                    H--;

                                  )
                                    B[P++] = V
                                }
                              }
                              var q = B.subarray(0, R),
                                X = B.subarray(R)
                              ;(T = A(q)),
                                (U = A(X)),
                                (_ = p(q, T, 1)),
                                (E = p(X, U, 1))
                            } else x(1)
                            if (C > F) {
                              f && x(0)
                              break
                            }
                          }
                          h && m(S + 131072)
                          for (
                            var Y = (1 << T) - 1, Q = (1 << U) - 1, J = C;
                            ;
                            J = C
                          ) {
                            var K = (V = _[k(t, C) & Y]) >>> 4
                            if ((C += 15 & V) > F) {
                              f && x(0)
                              break
                            }
                            if ((V || x(2), K < 256)) s[S++] = K
                            else {
                              if (256 == K) {
                                ;(J = C), (_ = null)
                                break
                              }
                              var Z = K - 254
                              if (K > 264) {
                                var tt = o[(P = K - 257)]
                                ;(Z = w(t, C, (1 << tt) - 1) + u[P]), (C += tt)
                              }
                              var et = E[k(t, C) & Q],
                                it = et >>> 4
                              if (
                                (et || x(3),
                                (C += 15 & et),
                                (X = c[it]),
                                it > 3 &&
                                  ((tt = n[it]),
                                  (X += k(t, C) & ((1 << tt) - 1)),
                                  (C += tt)),
                                C > F)
                              ) {
                                f && x(0)
                                break
                              }
                              h && m(S + 131072)
                              for (var rt = S + Z; S < rt; S += 4)
                                (s[S] = s[S - X]),
                                  (s[S + 1] = s[S + 1 - X]),
                                  (s[S + 2] = s[S + 2 - X]),
                                  (s[S + 3] = s[S + 3 - X])
                              S = rt
                            }
                          }
                          ;(l.l = _),
                            (l.p = J),
                            (l.b = S),
                            _ && ((v = 1), (l.m = T), (l.d = E), (l.n = U))
                        } while (!v)
                        return S == s.length
                          ? s
                          : (function (t, o, n) {
                              ;(null == o || o < 0) && (o = 0),
                                (null == n || n > t.length) && (n = t.length)
                              var a = new (
                                t instanceof i ? i : t instanceof r ? r : e
                              )(n - o)
                              return a.set(t.subarray(o, n)), a
                            })(s, 0, S)
                      },
                      _ = new e(0),
                      E = "undefined" != typeof TextDecoder && new TextDecoder()
                    try {
                      E.decode(_, { stream: !0 })
                    } catch (t) {}
                    return (
                      (t.convert_streams = function (t) {
                        var e = new DataView(t),
                          i = 0
                        function r() {
                          var t = e.getUint16(i)
                          return (i += 2), t
                        }
                        function o() {
                          var t = e.getUint32(i)
                          return (i += 4), t
                        }
                        function n(t) {
                          v.setUint16(b, t), (b += 2)
                        }
                        function a(t) {
                          v.setUint32(b, t), (b += 4)
                        }
                        for (
                          var s = {
                              signature: o(),
                              flavor: o(),
                              length: o(),
                              numTables: r(),
                              reserved: r(),
                              totalSfntSize: o(),
                              majorVersion: r(),
                              minorVersion: r(),
                              metaOffset: o(),
                              metaLength: o(),
                              metaOrigLength: o(),
                              privOffset: o(),
                              privLength: o(),
                            },
                            l = 0;
                          Math.pow(2, l) <= s.numTables;

                        )
                          l++
                        l--
                        for (
                          var u = 16 * Math.pow(2, l),
                            d = 16 * s.numTables - u,
                            c = 12,
                            h = [],
                            f = 0;
                          f < s.numTables;
                          f++
                        )
                          h.push({
                            tag: o(),
                            offset: o(),
                            compLength: o(),
                            origLength: o(),
                            origChecksum: o(),
                          }),
                            (c += 16)
                        var g,
                          p = new Uint8Array(
                            12 +
                              16 * h.length +
                              h.reduce(function (t, e) {
                                return t + e.origLength + 4
                              }, 0)
                          ),
                          m = p.buffer,
                          v = new DataView(m),
                          b = 0
                        return (
                          a(s.flavor),
                          n(s.numTables),
                          n(u),
                          n(l),
                          n(d),
                          h.forEach(function (t) {
                            a(t.tag),
                              a(t.origChecksum),
                              a(c),
                              a(t.origLength),
                              (t.outOffset = c),
                              (c += t.origLength) % 4 != 0 && (c += 4 - (c % 4))
                          }),
                          h.forEach(function (e) {
                            var i,
                              r = t.slice(e.offset, e.offset + e.compLength)
                            if (e.compLength != e.origLength) {
                              var o = new Uint8Array(e.origLength)
                              ;(i = new Uint8Array(r, 2)), S(i, o)
                            } else o = new Uint8Array(r)
                            p.set(o, e.outOffset)
                            var n = 0
                            ;(c = e.outOffset + e.origLength) % 4 != 0 &&
                              (n = 4 - (c % 4)),
                              p.set(
                                new Uint8Array(n).buffer,
                                e.outOffset + e.origLength
                              ),
                              (g = c + n)
                          }),
                          m.slice(0, g)
                        )
                      }),
                      Object.defineProperty(t, "__esModule", { value: !0 }),
                      t
                    )
                  })({}).convert_streams
                },
                function (t, e) {
                  const i = { M: 2, L: 2, Q: 4, C: 6, Z: 0 },
                    r = {
                      C: "18g,ca,368,1kz",
                      D: "17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",
                      R: "17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",
                      L: "x9u,jff,a,fd,jv",
                      T: "4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n",
                    },
                    o = 1,
                    n = 2,
                    a = 4,
                    s = 8,
                    l = 16,
                    u = 32
                  let d
                  function c(t) {
                    if (!d) {
                      const t = { R: n, L: o, D: a, C: l, U: u, T: s }
                      d = new Map()
                      for (let e in r) {
                        let i = 0
                        r[e].split(",").forEach((r) => {
                          let [o, n] = r.split("+")
                          ;(o = parseInt(o, 36)),
                            (n = n ? parseInt(n, 36) : 0),
                            d.set((i += o), t[e])
                          for (let r = n; r--; ) d.set(++i, t[e])
                        })
                      }
                    }
                    return d.get(t) || u
                  }
                  const h = 1,
                    f = 2,
                    g = 3,
                    p = 4,
                    m = [null, "isol", "init", "fina", "medi"]
                  function v(t) {
                    const e = new Uint8Array(t.length)
                    let i = u,
                      r = h,
                      d = -1
                    for (let m = 0; m < t.length; m++) {
                      const v = t.codePointAt(m)
                      let b = 0 | c(v),
                        y = h
                      b & s ||
                        (i & (o | a | l)
                          ? b & (n | a | l)
                            ? ((y = g), (r !== h && r !== g) || e[d]++)
                            : b & (o | u) && ((r !== f && r !== p) || e[d]--)
                          : i & (n | u) && ((r !== f && r !== p) || e[d]--),
                        (r = e[m] = y),
                        (i = b),
                        (d = m),
                        v > 65535 && m++)
                    }
                    return e
                  }
                  function b(...t) {
                    for (let e = 0; e < t.length; e++)
                      if ("number" == typeof t[e]) return t[e]
                  }
                  function y(e) {
                    const r = Object.create(null),
                      o = e["OS/2"],
                      n = e.hhea,
                      a = e.head.unitsPerEm,
                      s = b(o && o.sTypoAscender, n && n.ascender, a),
                      l = {
                        unitsPerEm: a,
                        ascender: s,
                        descender: b(
                          o && o.sTypoDescender,
                          n && n.descender,
                          0
                        ),
                        capHeight: b(o && o.sCapHeight, s),
                        xHeight: b(o && o.sxHeight, s),
                        lineGap: b(o && o.sTypoLineGap, n && n.lineGap),
                        forEachGlyph(o, n, a, s) {
                          let u = 0
                          const d = (1 / l.unitsPerEm) * n,
                            c = (function (e, i) {
                              const r = []
                              for (let o = 0; o < i.length; o++) {
                                const n = i.codePointAt(o)
                                n > 65535 && o++, r.push(t.U.codeToGlyph(e, n))
                              }
                              const o = e.GSUB
                              if (o) {
                                const { lookupList: e, featureList: n } = o
                                let a
                                const s =
                                    /^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws)$/,
                                  l = []
                                n.forEach((o) => {
                                  if (s.test(o.tag))
                                    for (let n = 0; n < o.tab.length; n++) {
                                      if (l[o.tab[n]]) continue
                                      l[o.tab[n]] = !0
                                      const s = e[o.tab[n]],
                                        u = /^(isol|init|fina|medi)$/.test(
                                          o.tag
                                        )
                                      u && !a && (a = v(i))
                                      for (let i = 0; i < r.length; i++)
                                        (a && u && m[a[i]] !== o.tag) ||
                                          t.U._applySubs(r, i, s, e)
                                    }
                                })
                              }
                              return r
                            })(e, o)
                          let h = 0,
                            f = -1
                          return (
                            c.forEach((l, c) => {
                              if (-1 !== l) {
                                let o = r[l]
                                if (!o) {
                                  const { cmds: n, crds: a } = t.U.glyphToPath(
                                    e,
                                    l
                                  )
                                  let s,
                                    u,
                                    d,
                                    c,
                                    h = "",
                                    f = 0
                                  for (let t = 0, e = n.length; t < e; t++) {
                                    const e = i[n[t]]
                                    h += n[t]
                                    for (let t = 1; t <= e; t++)
                                      h += (t > 1 ? "," : "") + a[f++]
                                  }
                                  if (a.length) {
                                    ;(s = u = 1 / 0), (d = c = -1 / 0)
                                    for (
                                      let t = 0, e = a.length;
                                      t < e;
                                      t += 2
                                    ) {
                                      let e = a[t],
                                        i = a[t + 1]
                                      e < s && (s = e),
                                        i < u && (u = i),
                                        e > d && (d = e),
                                        i > c && (c = i)
                                    }
                                  } else s = d = u = c = 0
                                  o = r[l] = {
                                    index: l,
                                    advanceWidth: e.hmtx.aWidth[l],
                                    xMin: s,
                                    yMin: u,
                                    xMax: d,
                                    yMax: c,
                                    path: h,
                                    pathCommandCount: n.length,
                                  }
                                }
                                ;-1 !== f &&
                                  (u += t.U.getPairAdjustment(e, f, l) * d),
                                  s.call(null, o, u, h),
                                  o.advanceWidth && (u += o.advanceWidth * d),
                                  a && (u += a * n),
                                  (f = l)
                              }
                              h += o.codePointAt(h) > 65535 ? 2 : 1
                            }),
                            u
                          )
                        },
                      }
                    return l
                  }
                  return function (i) {
                    const r = new Uint8Array(i, 0, 4),
                      o = t._bin.readASCII(r, 0, 4)
                    if ("wOFF" === o) i = e(i)
                    else if ("wOF2" === o)
                      throw new Error("woff2 fonts not supported")
                    return y(t.parse(i)[0])
                  }
                },
              ],
              init: (t, e, i) => i(t(), e()),
            }),
            H = {
              defaultFontURL:
                "https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff",
              sdfGlyphSize: 64,
              sdfMargin: 1 / 16,
              sdfExponent: 9,
              textureWidth: 2048,
            },
            q = new t.Color()
          function X() {
            return (self.performance || Date).now()
          }
          const Y = Object.create(null)
          function Q(e, i) {
            e = (function (t, e) {
              for (let i in e) e.hasOwnProperty(i) && (t[i] = e[i])
              return t
            })({}, e)
            const r = X()
            if (
              ((e.font = (function (t) {
                K ||
                  (K =
                    "undefined" == typeof document
                      ? {}
                      : document.createElement("a"))
                return (K.href = t), K.href
              })(e.font || H.defaultFontURL)),
              (e.text = "" + e.text),
              (e.sdfGlyphSize = e.sdfGlyphSize || H.sdfGlyphSize),
              null != e.colorRanges)
            ) {
              let t = {}
              for (let i in e.colorRanges)
                if (e.colorRanges.hasOwnProperty(i)) {
                  let r = e.colorRanges[i]
                  "number" != typeof r && (r = q.set(r).getHex()), (t[i] = r)
                }
              e.colorRanges = t
            }
            Object.freeze(e)
            const { textureWidth: o, sdfExponent: n } = H,
              { sdfGlyphSize: a } = e,
              s = (o / a) * 4
            let l = Y[a]
            if (!l) {
              const e = document.createElement("canvas")
              ;(e.width = o),
                (e.height = (256 * a) / s),
                (l = Y[a] =
                  {
                    glyphCount: 0,
                    sdfGlyphSize: a,
                    sdfCanvas: e,
                    sdfTexture: new t.Texture(
                      e,
                      void 0,
                      void 0,
                      void 0,
                      t.LinearFilter,
                      t.LinearFilter
                    ),
                    contextLost: !1,
                    glyphsByFont: new Map(),
                  }),
                (l.sdfTexture.generateMipmaps = !1),
                (function (t) {
                  const e = t.sdfCanvas
                  e.addEventListener("webglcontextlost", (e) => {
                    console.log("Context Lost", e),
                      e.preventDefault(),
                      (t.contextLost = !0)
                  }),
                    e.addEventListener("webglcontextrestored", (e) => {
                      console.log("Context Restored", e), (t.contextLost = !1)
                      const i = []
                      t.glyphsByFont.forEach((e) => {
                        e.forEach((e) => {
                          i.push(J(e, t, !0))
                        })
                      }),
                        Promise.all(i).then(() => {
                          Z(t), (t.sdfTexture.needsUpdate = !0)
                        })
                    })
                })(l)
            }
            const { sdfTexture: u, sdfCanvas: d } = l
            let c = l.glyphsByFont.get(e.font)
            c || l.glyphsByFont.set(e.font, (c = new Map())),
              et(e).then((t) => {
                const {
                    glyphIds: h,
                    glyphPositions: f,
                    fontSize: g,
                    unitsPerEm: p,
                    timings: m,
                  } = t,
                  v = [],
                  b = new Float32Array(4 * h.length),
                  y = g / p
                let A = 0,
                  w = 0
                const k = X()
                h.forEach((e, i) => {
                  let r = c.get(e)
                  if (!r) {
                    const { path: i, pathBounds: o } = t.glyphData[e],
                      n =
                        (Math.max(o[2] - o[0], o[3] - o[1]) / a) *
                        (H.sdfMargin * a + 0.5),
                      s = l.glyphCount++,
                      u = [o[0] - n, o[1] - n, o[2] + n, o[3] + n]
                    c.set(e, (r = { path: i, atlasIndex: s, sdfViewBox: u })),
                      v.push(r)
                  }
                  const { sdfViewBox: o } = r,
                    n = f[w++],
                    s = f[w++]
                  ;(b[A++] = n + o[0] * y),
                    (b[A++] = s + o[1] * y),
                    (b[A++] = n + o[2] * y),
                    (b[A++] = s + o[3] * y),
                    (h[i] = r.atlasIndex)
                }),
                  (m.quads = (m.quads || 0) + (X() - k))
                const C = X()
                m.sdf = {}
                const x = d.height,
                  S = Math.ceil(l.glyphCount / s),
                  _ = Math.pow(2, Math.ceil(Math.log2(S * a)))
                _ > x &&
                  (console.info(`Increasing SDF texture size ${x}->${_}`),
                  N(d, o, _),
                  u.dispose()),
                  Promise.all(
                    v.map((t) =>
                      J(t, l, e.gpuAccelerateSDF).then(({ timing: e }) => {
                        m.sdf[t.atlasIndex] = e
                      })
                    )
                  ).then(() => {
                    v.length && !l.contextLost && (Z(l), (u.needsUpdate = !0)),
                      (m.sdfTotal = X() - C),
                      (m.total = X() - r),
                      i(
                        Object.freeze({
                          parameters: e,
                          sdfTexture: u,
                          sdfGlyphSize: a,
                          sdfExponent: n,
                          glyphBounds: b,
                          glyphAtlasIndices: h,
                          glyphColors: t.glyphColors,
                          caretPositions: t.caretPositions,
                          caretHeight: t.caretHeight,
                          chunkedBounds: t.chunkedBounds,
                          ascender: t.ascender,
                          descender: t.descender,
                          lineHeight: t.lineHeight,
                          capHeight: t.capHeight,
                          xHeight: t.xHeight,
                          topBaseline: t.topBaseline,
                          blockBounds: t.blockBounds,
                          visibleBounds: t.visibleBounds,
                          timings: t.timings,
                        })
                      )
                  })
              }),
              Promise.resolve().then(() => {
                var t
                l.contextLost ||
                  (t = d)._warm ||
                  ($.webgl.isSupported(t), (t._warm = !0))
              })
          }
          function J(
            { path: t, atlasIndex: e, sdfViewBox: i },
            { sdfGlyphSize: r, sdfCanvas: o, contextLost: n },
            a
          ) {
            if (n) return Promise.resolve({ timing: -1 })
            const { textureWidth: s, sdfExponent: l } = H,
              u = Math.max(i[2] - i[0], i[3] - i[1]),
              d = Math.floor(e / 4)
            return (function (t, e, i, r, o, n, a, s, l, u, d = !0) {
              return d
                ? L(t, e, i, r, o, n, a, s, l, u).then(
                    null,
                    (d) => (
                      O ||
                        (console.warn(
                          "WebGL SDF generation failed, falling back to JS",
                          d
                        ),
                        (O = !0)),
                      j(t, e, i, r, o, n, a, s, l, u)
                    )
                  )
                : j(t, e, i, r, o, n, a, s, l, u)
            })(
              r,
              r,
              t,
              i,
              u,
              l,
              o,
              (d % (s / r)) * r,
              Math.floor(d / (s / r)) * r,
              e % 4,
              a
            )
          }
          let K
          function Z(t) {
            if ("function" != typeof createImageBitmap) {
              console.info("Safari<15: applying SDF canvas workaround")
              const { sdfCanvas: e, sdfTexture: i } = t,
                { width: r, height: o } = e,
                n = t.sdfCanvas.getContext("webgl")
              let a = i.image.data
              ;(a && a.length === r * o * 4) ||
                ((a = new Uint8Array(r * o * 4)),
                (i.image = { width: r, height: o, data: a }),
                (i.flipY = !1),
                (i.isDataTexture = !0)),
                n.readPixels(0, 0, r, o, n.RGBA, n.UNSIGNED_BYTE, a)
            }
          }
          const tt = g({
              name: "Typesetter",
              dependencies: [
                H,
                V,
                function (t, e, i) {
                  const { defaultFontURL: r } = i,
                    o = Object.create(null),
                    n = 1 / 0,
                    a =
                      /[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,
                    s = "[^\\S\\u00A0]",
                    l = new RegExp(
                      `${s}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`
                    )
                  function u(e, i) {
                    e || (e = r)
                    let n = o[e]
                    n
                      ? n.pending
                        ? n.pending.push(i)
                        : i(n)
                      : ((o[e] = { pending: [i] }),
                        (function (e, i) {
                          !(function o() {
                            const n = (t) => {
                              console.error(
                                `Failure loading font ${e}${
                                  e === r ? "" : "; trying fallback"
                                }`,
                                t
                              ),
                                e !== r && ((e = r), o())
                            }
                            try {
                              const r = new XMLHttpRequest()
                              r.open("get", e, !0),
                                (r.responseType = "arraybuffer"),
                                (r.onload = function () {
                                  if (r.status >= 400)
                                    n(new Error(r.statusText))
                                  else if (r.status > 0)
                                    try {
                                      const e = t(r.response)
                                      i(e)
                                    } catch (t) {
                                      n(t)
                                    }
                                }),
                                (r.onerror = n),
                                r.send()
                            } catch (t) {
                              n(t)
                            }
                          })()
                        })(e, (t) => {
                          let i = o[e].pending
                          ;(o[e] = t), i.forEach((e) => e(t))
                        }))
                  }
                  function d(
                    {
                      text: t = "",
                      font: i = r,
                      sdfGlyphSize: o = 64,
                      fontSize: d = 1,
                      letterSpacing: p = 0,
                      lineHeight: m = "normal",
                      maxWidth: v = n,
                      direction: b,
                      textAlign: y = "left",
                      textIndent: A = 0,
                      whiteSpace: w = "normal",
                      overflowWrap: k = "normal",
                      anchorX: C = 0,
                      anchorY: x = 0,
                      includeCaretPositions: S = !1,
                      chunkedBoundsSize: _ = 8192,
                      colorRanges: E = null,
                    },
                    T,
                    U = !1
                  ) {
                    const F = f(),
                      I = { fontLoad: 0, typesetting: 0 }
                    t.indexOf("\r") > -1 &&
                      (console.info(
                        "Typesetter: got text with \\r chars; normalizing to \\n"
                      ),
                      (t = t.replace(/\r\n/g, "\n").replace(/\r/g, "\n"))),
                      (d = +d),
                      (p = +p),
                      (v = +v),
                      (m = m || "normal"),
                      (A = +A),
                      u(i, (i) => {
                        const r = isFinite(v)
                        let o = null,
                          u = null,
                          $ = null,
                          O = null,
                          R = null,
                          D = null,
                          M = null,
                          B = 0,
                          L = 0,
                          P = "nowrap" !== w
                        const {
                          ascender: z,
                          descender: G,
                          unitsPerEm: W,
                          lineGap: j,
                          capHeight: N,
                          xHeight: V,
                        } = i
                        I.fontLoad = f() - F
                        const H = f(),
                          q = d / W
                        "normal" === m && (m = (z - G + j) / W)
                        const X = ((m *= d) - (z - G) * q) / 2,
                          Y = -(z * q + X),
                          Q = Math.min(m, (z - G) * q),
                          J = ((z + G) / 2) * q - Q / 2
                        let K = A,
                          Z = new g()
                        const tt = [Z]
                        i.forEachGlyph(t, d, p, (e, i, o) => {
                          const n = t.charAt(o),
                            u = e.advanceWidth * q,
                            c = Z.count
                          let h
                          if (
                            ("isEmpty" in e ||
                              ((e.isWhitespace = !!n && new RegExp(s).test(n)),
                              (e.canBreakAfter = !!n && l.test(n)),
                              (e.isEmpty =
                                e.xMin === e.xMax ||
                                e.yMin === e.yMax ||
                                a.test(n))),
                            e.isWhitespace || e.isEmpty || L++,
                            P && r && !e.isWhitespace && i + u + K > v && c)
                          ) {
                            if (Z.glyphAt(c - 1).glyphObj.canBreakAfter)
                              (h = new g()), (K = -i)
                            else
                              for (let t = c; t--; ) {
                                if (0 === t && "break-word" === k) {
                                  ;(h = new g()), (K = -i)
                                  break
                                }
                                if (Z.glyphAt(t).glyphObj.canBreakAfter) {
                                  h = Z.splitAt(t + 1)
                                  const e = h.glyphAt(0).x
                                  K -= e
                                  for (let t = h.count; t--; )
                                    h.glyphAt(t).x -= e
                                  break
                                }
                              }
                            h &&
                              ((Z.isSoftWrapped = !0),
                              (Z = h),
                              tt.push(Z),
                              (B = v))
                          }
                          let f = Z.glyphAt(Z.count)
                          ;(f.glyphObj = e),
                            (f.x = i + K),
                            (f.width = u),
                            (f.charIndex = o),
                            "\n" === n &&
                              ((Z = new g()),
                              tt.push(Z),
                              (K = -(i + u + p * d) + A))
                        }),
                          tt.forEach((t) => {
                            for (let e = t.count; e--; ) {
                              let { glyphObj: i, x: r, width: o } = t.glyphAt(e)
                              if (!i.isWhitespace)
                                return (
                                  (t.width = r + o),
                                  void (t.width > B && (B = t.width))
                                )
                            }
                          })
                        let et = 0,
                          it = 0
                        if (
                          (C &&
                            ("number" == typeof C
                              ? (et = -C)
                              : "string" == typeof C &&
                                (et =
                                  -B *
                                  ("left" === C
                                    ? 0
                                    : "center" === C
                                    ? 0.5
                                    : "right" === C
                                    ? 1
                                    : c(C)))),
                          x)
                        )
                          if ("number" == typeof x) it = -x
                          else if ("string" == typeof x) {
                            let t = tt.length * m
                            it =
                              "top" === x
                                ? 0
                                : "top-baseline" === x
                                ? -Y
                                : "top-cap" === x
                                ? -Y - N * q
                                : "top-ex" === x
                                ? -Y - V * q
                                : "middle" === x
                                ? t / 2
                                : "bottom" === x
                                ? t
                                : "bottom-baseline" === x
                                ? t - X + G * q
                                : c(x) * t
                          }
                        if (!U) {
                          const r = e.getEmbeddingLevels(t, b)
                          ;(o = new Uint16Array(L)),
                            (u = new Float32Array(2 * L)),
                            ($ = {}),
                            (D = [n, n, -n, -n]),
                            (M = [])
                          let a = Y
                          S && (R = new Float32Array(3 * t.length)),
                            E && (O = new Uint8Array(3 * L))
                          let s,
                            l,
                            d = 0,
                            c = -1,
                            f = -1
                          if (
                            (tt.forEach((g, p) => {
                              let { count: v, width: b } = g
                              if (v > 0) {
                                let p = 0
                                for (
                                  let t = v;
                                  t-- && g.glyphAt(t).glyphObj.isWhitespace;

                                )
                                  p++
                                let m = 0,
                                  A = 0
                                if ("center" === y) m = (B - b) / 2
                                else if ("right" === y) m = B - b
                                else if ("justify" === y && g.isSoftWrapped) {
                                  let t = 0
                                  for (let e = v - p; e--; )
                                    g.glyphAt(e).glyphObj.isWhitespace && t++
                                  A = (B - b) / t
                                }
                                if (A || m) {
                                  let t = 0
                                  for (let e = 0; e < v; e++) {
                                    let i = g.glyphAt(e)
                                    const r = i.glyphObj
                                    ;(i.x += m + t),
                                      0 !== A &&
                                        r.isWhitespace &&
                                        e < v - p &&
                                        ((t += A), (i.width += A))
                                  }
                                }
                                const w = e.getReorderSegments(
                                  t,
                                  r,
                                  g.glyphAt(0).charIndex,
                                  g.glyphAt(g.count - 1).charIndex
                                )
                                for (let t = 0; t < w.length; t++) {
                                  const [e, i] = w[t]
                                  let r = 1 / 0,
                                    o = -1 / 0
                                  for (let t = 0; t < v; t++)
                                    if (g.glyphAt(t).charIndex >= e) {
                                      let e = t,
                                        n = t
                                      for (; n < v; n++) {
                                        let t = g.glyphAt(n)
                                        if (t.charIndex > i) break
                                        n < v - p &&
                                          ((r = Math.min(r, t.x)),
                                          (o = Math.max(o, t.x + t.width)))
                                      }
                                      for (let t = e; t < n; t++) {
                                        const e = g.glyphAt(t)
                                        e.x = o - (e.x + e.width - r)
                                      }
                                      break
                                    }
                                }
                                let k
                                const C = (t) => (k = t)
                                for (let p = 0; p < v; p++) {
                                  let m = g.glyphAt(p)
                                  k = m.glyphObj
                                  const v = k.index,
                                    b = 1 & r.levels[m.charIndex]
                                  if (b) {
                                    const r = e.getMirroredCharacter(
                                      t[m.charIndex]
                                    )
                                    r && i.forEachGlyph(r, 0, 0, C)
                                  }
                                  if (S) {
                                    const { charIndex: t } = m,
                                      e = m.x + et,
                                      i = m.x + m.width + et
                                    ;(R[3 * t] = b ? i : e),
                                      (R[3 * t + 1] = b ? e : i),
                                      (R[3 * t + 2] = a + J + it)
                                    const r = t - c
                                    r > 1 && h(R, c, r), (c = t)
                                  }
                                  if (E) {
                                    const { charIndex: t } = m
                                    for (; t > f; )
                                      f++, E.hasOwnProperty(f) && (l = E[f])
                                  }
                                  if (!k.isWhitespace && !k.isEmpty) {
                                    const t = d++
                                    $[v] ||
                                      ($[v] = {
                                        path: k.path,
                                        pathBounds: [
                                          k.xMin,
                                          k.yMin,
                                          k.xMax,
                                          k.yMax,
                                        ],
                                      })
                                    const e = m.x + et,
                                      i = a + it
                                    ;(u[2 * t] = e), (u[2 * t + 1] = i)
                                    const r = e + k.xMin * q,
                                      c = i + k.yMin * q,
                                      h = e + k.xMax * q,
                                      f = i + k.yMax * q
                                    r < D[0] && (D[0] = r),
                                      c < D[1] && (D[1] = c),
                                      h > D[2] && (D[2] = h),
                                      f > D[3] && (D[3] = f),
                                      t % _ == 0 &&
                                        ((s = {
                                          start: t,
                                          end: t,
                                          rect: [n, n, -n, -n],
                                        }),
                                        M.push(s)),
                                      s.end++
                                    const g = s.rect
                                    if (
                                      (r < g[0] && (g[0] = r),
                                      c < g[1] && (g[1] = c),
                                      h > g[2] && (g[2] = h),
                                      f > g[3] && (g[3] = f),
                                      (o[t] = v),
                                      E)
                                    ) {
                                      const e = 3 * t
                                      ;(O[e] = (l >> 16) & 255),
                                        (O[e + 1] = (l >> 8) & 255),
                                        (O[e + 2] = 255 & l)
                                    }
                                  }
                                }
                              }
                              a -= m
                            }),
                            R)
                          ) {
                            const e = t.length - c
                            e > 1 && h(R, c, e)
                          }
                        }
                        ;(I.typesetting = f() - H),
                          T({
                            glyphIds: o,
                            glyphPositions: u,
                            glyphData: $,
                            caretPositions: R,
                            caretHeight: Q,
                            glyphColors: O,
                            chunkedBounds: M,
                            fontSize: d,
                            unitsPerEm: W,
                            ascender: z * q,
                            descender: G * q,
                            capHeight: N * q,
                            xHeight: V * q,
                            lineHeight: m,
                            topBaseline: Y,
                            blockBounds: [et, it - tt.length * m, et + B, it],
                            visibleBounds: D,
                            timings: I,
                          })
                      })
                  }
                  function c(t) {
                    let e = t.match(/^([\d.]+)%$/),
                      i = e ? parseFloat(e[1]) : NaN
                    return isNaN(i) ? 0 : i / 100
                  }
                  function h(t, e, i) {
                    const r = t[3 * e],
                      o = t[3 * e + 1],
                      n = t[3 * e + 2],
                      a = (o - r) / i
                    for (let o = 0; o < i; o++) {
                      const i = 3 * (e + o)
                      ;(t[i] = r + a * o),
                        (t[i + 1] = r + a * (o + 1)),
                        (t[i + 2] = n)
                    }
                  }
                  function f() {
                    return (self.performance || Date).now()
                  }
                  function g() {
                    this.data = []
                  }
                  const p = ["glyphObj", "x", "width", "charIndex"]
                  return (
                    (g.prototype = {
                      width: 0,
                      isSoftWrapped: !1,
                      get count() {
                        return Math.ceil(this.data.length / p.length)
                      },
                      glyphAt(t) {
                        let e = g.flyweight
                        return (e.data = this.data), (e.index = t), e
                      },
                      splitAt(t) {
                        let e = new g()
                        return (e.data = this.data.splice(t * p.length)), e
                      },
                    }),
                    (g.flyweight = p.reduce(
                      (t, e, i, r) => (
                        Object.defineProperty(t, e, {
                          get() {
                            return this.data[this.index * p.length + i]
                          },
                          set(t) {
                            this.data[this.index * p.length + i] = t
                          },
                        }),
                        t
                      ),
                      { data: null, index: 0 }
                    )),
                    {
                      typeset: d,
                      measure: function (t, e) {
                        d(
                          t,
                          (t) => {
                            const [i, r, o, n] = t.blockBounds
                            e({ width: o - i, height: n - r })
                          },
                          { metricsOnly: !0 }
                        )
                      },
                      loadFont: u,
                    }
                  )
                },
                function () {
                  return (function (t) {
                    var e = {
                        R: "13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",
                        EN: "1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",
                        ES: "17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",
                        ET: "z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",
                        AN: "16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",
                        CS: "18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",
                        B: "a,3,f+2,2v,690",
                        S: "9,2,k",
                        WS: "c,k,4f4,1vk+a,u,1j,335",
                        ON: "x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",
                        BN: "0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",
                        NSM: "lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",
                        AL: "16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",
                        LRO: "6ct",
                        RLO: "6cu",
                        LRE: "6cq",
                        RLE: "6cr",
                        PDF: "6cs",
                        LRI: "6ee",
                        RLI: "6ef",
                        FSI: "6eg",
                        PDI: "6eh",
                      },
                      i = {},
                      r = {}
                    ;(i.L = 1),
                      (r[1] = "L"),
                      Object.keys(e).forEach(function (t, e) {
                        ;(i[t] = 1 << (e + 1)), (r[i[t]] = t)
                      }),
                      Object.freeze(i)
                    var o = i.LRI | i.RLI | i.FSI,
                      n = i.L | i.R | i.AL,
                      a =
                        i.B | i.S | i.WS | i.ON | i.FSI | i.LRI | i.RLI | i.PDI,
                      s = i.BN | i.RLE | i.LRE | i.RLO | i.LRO | i.PDF,
                      l = i.S | i.WS | i.B | o | i.PDI | s,
                      u = null
                    function d(t) {
                      return (
                        (function () {
                          if (!u) {
                            u = new Map()
                            var t = function (t) {
                              if (e.hasOwnProperty(t)) {
                                var r = 0
                                e[t].split(",").forEach(function (e) {
                                  var o = e.split("+"),
                                    n = o[0],
                                    a = o[1]
                                  ;(n = parseInt(n, 36)),
                                    (a = a ? parseInt(a, 36) : 0),
                                    u.set((r += n), i[t])
                                  for (var s = 0; s < a; s++) u.set(++r, i[t])
                                })
                              }
                            }
                            for (var r in e) t(r)
                          }
                        })(),
                        u.get(t.codePointAt(0)) || i.L
                      )
                    }
                    var c,
                      h,
                      f,
                      g = {
                        pairs:
                          "14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",
                        canonical:
                          "6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye",
                      }
                    function p(t, e) {
                      var i,
                        r = 0,
                        o = new Map(),
                        n = e && new Map()
                      return (
                        t.split(",").forEach(function t(a) {
                          if (-1 !== a.indexOf("+"))
                            for (var s = +a; s--; ) t(i)
                          else {
                            i = a
                            var l = a.split(">"),
                              u = l[0],
                              d = l[1]
                            ;(u = String.fromCodePoint((r += parseInt(u, 36)))),
                              (d = String.fromCodePoint(
                                (r += parseInt(d, 36))
                              )),
                              o.set(u, d),
                              e && n.set(d, u)
                          }
                        }),
                        { map: o, reverseMap: n }
                      )
                    }
                    function m() {
                      if (!c) {
                        var t = p(g.pairs, !0),
                          e = t.map,
                          i = t.reverseMap
                        ;(c = e), (h = i), (f = p(g.canonical, !1).map)
                      }
                    }
                    function v(t) {
                      return m(), c.get(t) || null
                    }
                    function b(t) {
                      return m(), h.get(t) || null
                    }
                    function y(t) {
                      return m(), f.get(t) || null
                    }
                    var A = i.L,
                      w = i.R,
                      k = i.EN,
                      C = i.ES,
                      x = i.ET,
                      S = i.AN,
                      _ = i.CS,
                      E = i.B,
                      T = i.S,
                      U = i.ON,
                      F = i.BN,
                      I = i.NSM,
                      $ = i.AL,
                      O = i.LRO,
                      R = i.RLO,
                      D = i.LRE,
                      M = i.RLE,
                      B = i.PDF,
                      L = i.LRI,
                      P = i.RLI,
                      z = i.FSI,
                      G = i.PDI
                    var W,
                      j =
                        "14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1"
                    function N(t) {
                      return (
                        (function () {
                          if (!W) {
                            var t = p(j, !0),
                              e = t.map
                            t.reverseMap.forEach(function (t, i) {
                              e.set(i, t)
                            }),
                              (W = e)
                          }
                        })(),
                        W.get(t) || null
                      )
                    }
                    function V(t, e, i, r) {
                      var o = t.length
                      ;(i = Math.max(0, null == i ? 0 : +i)),
                        (r = Math.min(o - 1, null == r ? o - 1 : +r))
                      var n = []
                      return (
                        e.paragraphs.forEach(function (o) {
                          var a = Math.max(i, o.start),
                            s = Math.min(r, o.end)
                          if (a < s) {
                            for (
                              var u = e.levels.slice(a, s + 1), c = s;
                              c >= a && d(t[c]) & l;
                              c--
                            )
                              u[c] = o.level
                            for (
                              var h = o.level, f = 1 / 0, g = 0;
                              g < u.length;
                              g++
                            ) {
                              var p = u[g]
                              p > h && (h = p), p < f && (f = 1 | p)
                            }
                            for (var m = h; m >= f; m--)
                              for (var v = 0; v < u.length; v++)
                                if (u[v] >= m) {
                                  for (
                                    var b = v;
                                    v + 1 < u.length && u[v + 1] >= m;

                                  )
                                    v++
                                  v > b && n.push([b + i, v + i])
                                }
                          }
                        }),
                        n
                      )
                    }
                    function H(t, e, i, r) {
                      for (
                        var o = V(t, e, i, r), n = [], a = 0;
                        a < t.length;
                        a++
                      )
                        n[a] = a
                      return (
                        o.forEach(function (t) {
                          for (
                            var e = t[0],
                              i = t[1],
                              r = n.slice(e, i + 1),
                              o = r.length;
                            o--;

                          )
                            n[i - o] = r[o]
                        }),
                        n
                      )
                    }
                    return (
                      (t.closingToOpeningBracket = b),
                      (t.getBidiCharType = d),
                      (t.getBidiCharTypeName = function (t) {
                        return r[d(t)]
                      }),
                      (t.getCanonicalBracket = y),
                      (t.getEmbeddingLevels = function (t, e) {
                        for (
                          var i = new Uint32Array(t.length), r = 0;
                          r < t.length;
                          r++
                        )
                          i[r] = d(t[r])
                        var u = new Map()
                        function c(t, e) {
                          var r = i[t]
                          ;(i[t] = e),
                            u.set(r, u.get(r) - 1),
                            r & a && u.set(a, u.get(a) - 1),
                            u.set(e, (u.get(e) || 0) + 1),
                            e & a && u.set(a, (u.get(a) || 0) + 1)
                        }
                        for (
                          var h = new Uint8Array(t.length),
                            f = new Map(),
                            g = [],
                            p = null,
                            m = 0;
                          m < t.length;
                          m++
                        )
                          p ||
                            g.push(
                              (p = {
                                start: m,
                                end: t.length - 1,
                                level:
                                  "rtl" === e ? 1 : "ltr" === e ? 0 : Ge(m, !1),
                              })
                            ),
                            i[m] & E && ((p.end = m), (p = null))
                        for (
                          var W = M | D | R | O | o | G | B | E,
                            j = function (t) {
                              return t + (1 & t ? 1 : 2)
                            },
                            N = function (t) {
                              return t + (1 & t ? 2 : 1)
                            },
                            V = 0;
                          V < g.length;
                          V++
                        ) {
                          var H = [
                              {
                                _level: (p = g[V]).level,
                                _override: 0,
                                _isolate: 0,
                              },
                            ],
                            q = void 0,
                            X = 0,
                            Y = 0,
                            Q = 0
                          u.clear()
                          for (var J = p.start; J <= p.end; J++) {
                            var K = i[J]
                            if (
                              ((q = H[H.length - 1]),
                              u.set(K, (u.get(K) || 0) + 1),
                              K & a && u.set(a, (u.get(a) || 0) + 1),
                              K & W)
                            )
                              if (K & (M | D)) {
                                h[J] = q._level
                                var Z = (K === M ? N : j)(q._level)
                                Z <= 125 && !X && !Y
                                  ? H.push({
                                      _level: Z,
                                      _override: 0,
                                      _isolate: 0,
                                    })
                                  : X || Y++
                              } else if (K & (R | O)) {
                                h[J] = q._level
                                var tt = (K === R ? N : j)(q._level)
                                tt <= 125 && !X && !Y
                                  ? H.push({
                                      _level: tt,
                                      _override: K & R ? w : A,
                                      _isolate: 0,
                                    })
                                  : X || Y++
                              } else if (K & o) {
                                K & z && (K = 1 === Ge(J + 1, !0) ? P : L),
                                  (h[J] = q._level),
                                  q._override && c(J, q._override)
                                var et = (K === P ? N : j)(q._level)
                                et <= 125 && 0 === X && 0 === Y
                                  ? (Q++,
                                    H.push({
                                      _level: et,
                                      _override: 0,
                                      _isolate: 1,
                                      _isolInitIndex: J,
                                    }))
                                  : X++
                              } else if (K & G) {
                                if (X > 0) X--
                                else if (Q > 0) {
                                  for (Y = 0; !H[H.length - 1]._isolate; )
                                    H.pop()
                                  var it = H[H.length - 1]._isolInitIndex
                                  null != it && (f.set(it, J), f.set(J, it)),
                                    H.pop(),
                                    Q--
                                }
                                ;(q = H[H.length - 1]),
                                  (h[J] = q._level),
                                  q._override && c(J, q._override)
                              } else
                                K & B
                                  ? (0 === X &&
                                      (Y > 0
                                        ? Y--
                                        : !q._isolate &&
                                          H.length > 1 &&
                                          (H.pop(), (q = H[H.length - 1]))),
                                    (h[J] = q._level))
                                  : K & E && (h[J] = p.level)
                            else
                              (h[J] = q._level),
                                q._override && K !== F && c(J, q._override)
                          }
                          for (
                            var rt = [], ot = null, nt = p.start;
                            nt <= p.end;
                            nt++
                          ) {
                            var at = i[nt]
                            if (!(at & s)) {
                              var st = h[nt],
                                lt = at & o,
                                ut = at === G
                              ot && st === ot._level
                                ? ((ot._end = nt), (ot._endsWithIsolInit = lt))
                                : rt.push(
                                    (ot = {
                                      _start: nt,
                                      _end: nt,
                                      _level: st,
                                      _startsWithPDI: ut,
                                      _endsWithIsolInit: lt,
                                    })
                                  )
                            }
                          }
                          for (var dt = [], ct = 0; ct < rt.length; ct++) {
                            var ht = rt[ct]
                            if (
                              !ht._startsWithPDI ||
                              (ht._startsWithPDI && !f.has(ht._start))
                            ) {
                              for (
                                var ft = [(ot = ht)], gt = void 0;
                                ot &&
                                ot._endsWithIsolInit &&
                                null != (gt = f.get(ot._end));

                              )
                                for (var pt = ct + 1; pt < rt.length; pt++)
                                  if (rt[pt]._start === gt) {
                                    ft.push((ot = rt[pt]))
                                    break
                                  }
                              for (var mt = [], vt = 0; vt < ft.length; vt++)
                                for (
                                  var bt = ft[vt], yt = bt._start;
                                  yt <= bt._end;
                                  yt++
                                )
                                  mt.push(yt)
                              for (
                                var At = h[mt[0]], wt = p.level, kt = mt[0] - 1;
                                kt >= 0;
                                kt--
                              )
                                if (!(i[kt] & s)) {
                                  wt = h[kt]
                                  break
                                }
                              var Ct = mt[mt.length - 1],
                                xt = h[Ct],
                                St = p.level
                              if (!(i[Ct] & o))
                                for (var _t = Ct + 1; _t <= p.end; _t++)
                                  if (!(i[_t] & s)) {
                                    St = h[_t]
                                    break
                                  }
                              dt.push({
                                _seqIndices: mt,
                                _sosType: Math.max(wt, At) % 2 ? w : A,
                                _eosType: Math.max(St, xt) % 2 ? w : A,
                              })
                            }
                          }
                          for (var Et = 0; Et < dt.length; Et++) {
                            var Tt = dt[Et],
                              Ut = Tt._seqIndices,
                              Ft = Tt._sosType,
                              It = Tt._eosType
                            if (u.get(I))
                              for (var $t = 0; $t < Ut.length; $t++) {
                                var Ot = Ut[$t]
                                if (i[Ot] & I) {
                                  for (var Rt = Ft, Dt = $t - 1; Dt >= 0; Dt--)
                                    if (!(i[Ut[Dt]] & s)) {
                                      Rt = i[Ut[Dt]]
                                      break
                                    }
                                  c(Ot, Rt & (o | G) ? U : Rt)
                                }
                              }
                            if (u.get(k))
                              for (var Mt = 0; Mt < Ut.length; Mt++) {
                                var Bt = Ut[Mt]
                                if (i[Bt] & k)
                                  for (var Lt = Mt - 1; Lt >= -1; Lt--) {
                                    var Pt = -1 === Lt ? Ft : i[Ut[Lt]]
                                    if (Pt & n) {
                                      Pt === $ && c(Bt, S)
                                      break
                                    }
                                  }
                              }
                            if (u.get($))
                              for (var zt = 0; zt < Ut.length; zt++) {
                                var Gt = Ut[zt]
                                i[Gt] & $ && c(Gt, w)
                              }
                            if (u.get(C) || u.get(_))
                              for (var Wt = 1; Wt < Ut.length - 1; Wt++) {
                                var jt = Ut[Wt]
                                if (i[jt] & (C | _)) {
                                  for (
                                    var Nt = 0, Vt = 0, Ht = Wt - 1;
                                    Ht >= 0 && (Nt = i[Ut[Ht]]) & s;
                                    Ht--
                                  );
                                  for (
                                    var qt = Wt + 1;
                                    qt < Ut.length && (Vt = i[Ut[qt]]) & s;
                                    qt++
                                  );
                                  Nt === Vt &&
                                    (i[jt] === C ? Nt === k : Nt & (k | S)) &&
                                    c(jt, Nt)
                                }
                              }
                            if (u.get(k))
                              for (var Xt = 0; Xt < Ut.length; Xt++) {
                                var Yt = Ut[Xt]
                                if (i[Yt] & k) {
                                  for (
                                    var Qt = Xt - 1;
                                    Qt >= 0 && i[Ut[Qt]] & (x | s);
                                    Qt--
                                  )
                                    c(Ut[Qt], k)
                                  for (
                                    var Jt = Xt + 1;
                                    Jt < Ut.length && i[Ut[Jt]] & (x | s);
                                    Jt++
                                  )
                                    c(Ut[Jt], k)
                                }
                              }
                            if (u.get(x) || u.get(C) || u.get(_))
                              for (var Kt = 0; Kt < Ut.length; Kt++) {
                                var Zt = Ut[Kt]
                                if (i[Zt] & (x | C | _)) {
                                  c(Zt, U)
                                  for (
                                    var te = Kt - 1;
                                    te >= 0 && i[Ut[te]] & s;
                                    te--
                                  )
                                    c(Ut[te], U)
                                  for (
                                    var ee = Kt + 1;
                                    ee < Ut.length && i[Ut[ee]] & s;
                                    ee++
                                  )
                                    c(Ut[ee], U)
                                }
                              }
                            if (u.get(k))
                              for (var ie = 0, re = Ft; ie < Ut.length; ie++) {
                                var oe = Ut[ie],
                                  ne = i[oe]
                                ne & k
                                  ? re === A && c(oe, A)
                                  : ne & n && (re = ne)
                              }
                            if (u.get(a)) {
                              for (
                                var ae = w | k | S,
                                  se = ae | A,
                                  le = [],
                                  ue = [],
                                  de = 0;
                                de < Ut.length;
                                de++
                              )
                                if (i[Ut[de]] & a) {
                                  var ce = t[Ut[de]],
                                    he = void 0
                                  if (null !== v(ce)) {
                                    if (!(ue.length < 63)) break
                                    ue.push({ char: ce, seqIndex: de })
                                  } else if (null !== (he = b(ce)))
                                    for (
                                      var fe = ue.length - 1;
                                      fe >= 0;
                                      fe--
                                    ) {
                                      var ge = ue[fe].char
                                      if (
                                        ge === he ||
                                        ge === b(y(ce)) ||
                                        v(y(ge)) === ce
                                      ) {
                                        le.push([ue[fe].seqIndex, de]),
                                          (ue.length = fe)
                                        break
                                      }
                                    }
                                }
                              le.sort(function (t, e) {
                                return t[0] - e[0]
                              })
                              for (var pe = 0; pe < le.length; pe++) {
                                for (
                                  var me = le[pe],
                                    ve = me[0],
                                    be = me[1],
                                    ye = !1,
                                    Ae = 0,
                                    we = ve + 1;
                                  we < be;
                                  we++
                                ) {
                                  var ke = Ut[we]
                                  if (i[ke] & se) {
                                    ye = !0
                                    var Ce = i[ke] & ae ? w : A
                                    if (Ce === je(ke)) {
                                      Ae = Ce
                                      break
                                    }
                                  }
                                }
                                if (ye && !Ae) {
                                  Ae = Ft
                                  for (var xe = ve - 1; xe >= 0; xe--) {
                                    var Se = Ut[xe]
                                    if (i[Se] & se) {
                                      var _e = i[Se] & ae ? w : A
                                      Ae = _e !== je(Se) ? _e : je(Se)
                                      break
                                    }
                                  }
                                }
                                if (Ae) {
                                  if (
                                    ((i[Ut[ve]] = i[Ut[be]] = Ae),
                                    Ae !== je(Ut[ve]))
                                  )
                                    for (var Ee = ve + 1; Ee < Ut.length; Ee++)
                                      if (!(i[Ut[Ee]] & s)) {
                                        d(t[Ut[Ee]]) & I && (i[Ut[Ee]] = Ae)
                                        break
                                      }
                                  if (Ae !== je(Ut[be]))
                                    for (var Te = be + 1; Te < Ut.length; Te++)
                                      if (!(i[Ut[Te]] & s)) {
                                        d(t[Ut[Te]]) & I && (i[Ut[Te]] = Ae)
                                        break
                                      }
                                }
                              }
                              for (var Ue = 0; Ue < Ut.length; Ue++)
                                if (i[Ut[Ue]] & a) {
                                  for (
                                    var Fe = Ue, Ie = Ue, $e = Ft, Oe = Ue - 1;
                                    Oe >= 0;
                                    Oe--
                                  ) {
                                    if (!(i[Ut[Oe]] & s)) {
                                      $e = i[Ut[Oe]] & ae ? w : A
                                      break
                                    }
                                    Fe = Oe
                                  }
                                  for (
                                    var Re = It, De = Ue + 1;
                                    De < Ut.length;
                                    De++
                                  ) {
                                    if (!(i[Ut[De]] & (a | s))) {
                                      Re = i[Ut[De]] & ae ? w : A
                                      break
                                    }
                                    Ie = De
                                  }
                                  for (var Me = Fe; Me <= Ie; Me++)
                                    i[Ut[Me]] = $e === Re ? $e : je(Ut[Me])
                                  Ue = Ie
                                }
                            }
                          }
                          for (var Be = p.start; Be <= p.end; Be++) {
                            var Le = h[Be],
                              Pe = i[Be]
                            if (
                              (1 & Le
                                ? Pe & (A | k | S) && h[Be]++
                                : Pe & w
                                ? h[Be]++
                                : Pe & (S | k) && (h[Be] += 2),
                              Pe & s &&
                                (h[Be] = 0 === Be ? p.level : h[Be - 1]),
                              Be === p.end || d(t[Be]) & (T | E))
                            )
                              for (var ze = Be; ze >= 0 && d(t[ze]) & l; ze--)
                                h[ze] = p.level
                          }
                        }
                        return { levels: h, paragraphs: g }
                        function Ge(e, r) {
                          for (var n = e; n < t.length; n++) {
                            var a = i[n]
                            if (a & (w | $)) return 1
                            if (a & (E | A) || (r && a === G)) return 0
                            if (a & o) {
                              var s = We(n)
                              n = -1 === s ? t.length : s
                            }
                          }
                          return 0
                        }
                        function We(e) {
                          for (var r = 1, n = e + 1; n < t.length; n++) {
                            var a = i[n]
                            if (a & E) break
                            if (a & G) {
                              if (0 == --r) return n
                            } else a & o && r++
                          }
                          return -1
                        }
                        function je(t) {
                          return 1 & h[t] ? w : A
                        }
                      }),
                      (t.getMirroredCharacter = N),
                      (t.getMirroredCharactersMap = function (t, e, i, r) {
                        var o = t.length
                        ;(i = Math.max(0, null == i ? 0 : +i)),
                          (r = Math.min(o - 1, null == r ? o - 1 : +r))
                        for (var n = new Map(), a = i; a <= r; a++)
                          if (1 & e[a]) {
                            var s = N(t[a])
                            null !== s && n.set(a, s)
                          }
                        return n
                      }),
                      (t.getReorderSegments = V),
                      (t.getReorderedIndices = H),
                      (t.getReorderedString = function (t, e, i, r) {
                        var o = H(t, e, i, r),
                          n = [].concat(t)
                        return (
                          o.forEach(function (i, r) {
                            n[r] = (1 & e.levels[i] ? N(t[i]) : null) || t[i]
                          }),
                          n.join("")
                        )
                      }),
                      (t.openingToClosingBracket = v),
                      Object.defineProperty(t, "__esModule", { value: !0 }),
                      t
                    )
                  })({})
                },
              ],
              init(t, e, i, r) {
                const { defaultFontURL: o } = t
                return i(e, r(), { defaultFontURL: o })
              },
            }),
            et = g({
              name: "Typesetter",
              dependencies: [tt],
              init: (t) =>
                function (e) {
                  return new Promise((i) => {
                    t.typeset(e, i)
                  })
                },
              getTransferables(t) {
                const e = [t.glyphPositions.buffer, t.glyphIds.buffer]
                return (
                  t.caretPositions && e.push(t.caretPositions.buffer),
                  t.glyphColors && e.push(t.glyphColors.buffer),
                  e
                )
              },
            }),
            it = {}
          const rt = "aTroikaGlyphIndex"
          class ot extends t.InstancedBufferGeometry {
            constructor() {
              super(),
                (this.detail = 1),
                (this.curveRadius = 0),
                (this.groups = [
                  { start: 0, count: 1 / 0, materialIndex: 0 },
                  { start: 0, count: 1 / 0, materialIndex: 1 },
                ]),
                (this.boundingSphere = new t.Sphere()),
                (this.boundingBox = new t.Box3())
            }
            computeBoundingSphere() {}
            computeBoundingBox() {}
            setSide(e) {
              const i = this.getIndex().count
              this.setDrawRange(
                e === t.BackSide ? i / 2 : 0,
                e === t.DoubleSide ? i : i / 2
              )
            }
            set detail(e) {
              if (e !== this._detail) {
                ;(this._detail = e), ("number" != typeof e || e < 1) && (e = 1)
                let i = (function (e) {
                  let i = it[e]
                  if (!i) {
                    const r = new t.PlaneGeometry(1, 1, e, e),
                      o = r.clone(),
                      n = r.attributes,
                      a = o.attributes,
                      s = new t.BufferGeometry(),
                      l = n.uv.count
                    for (let t = 0; t < l; t++)
                      (a.position.array[3 * t] *= -1),
                        (a.normal.array[3 * t + 2] *= -1)
                    ;["position", "normal", "uv"].forEach((e) => {
                      s.setAttribute(
                        e,
                        new t.Float32BufferAttribute(
                          [...n[e].array, ...a[e].array],
                          n[e].itemSize
                        )
                      )
                    }),
                      s.setIndex([
                        ...r.index.array,
                        ...o.index.array.map((t) => t + l),
                      ]),
                      s.translate(0.5, 0.5, 0),
                      (i = it[e] = s)
                  }
                  return i
                })(e)
                ;["position", "normal", "uv"].forEach((t) => {
                  this.attributes[t] = i.attributes[t].clone()
                }),
                  this.setIndex(i.getIndex().clone())
              }
            }
            get detail() {
              return this._detail
            }
            set curveRadius(t) {
              t !== this._curveRadius &&
                ((this._curveRadius = t), this._updateBounds())
            }
            get curveRadius() {
              return this._curveRadius
            }
            updateGlyphs(t, e, i, r, o) {
              nt(this, "aTroikaGlyphBounds", t, 4),
                nt(this, rt, e, 1),
                nt(this, "aTroikaGlyphColor", o, 3),
                (this._blockBounds = i),
                (this._chunkedBounds = r),
                (this.instanceCount = e.length),
                this._updateBounds()
            }
            _updateBounds() {
              const t = this._blockBounds
              if (t) {
                const { curveRadius: e, boundingBox: i } = this
                if (e) {
                  const {
                      PI: r,
                      floor: o,
                      min: n,
                      max: a,
                      sin: s,
                      cos: l,
                    } = Math,
                    u = r / 2,
                    d = 2 * r,
                    c = Math.abs(e),
                    h = t[0] / c,
                    f = t[2] / c,
                    g =
                      o((h + u) / d) !== o((f + u) / d)
                        ? -c
                        : n(s(h) * c, s(f) * c),
                    p =
                      o((h - u) / d) !== o((f - u) / d)
                        ? c
                        : a(s(h) * c, s(f) * c),
                    m =
                      o((h + r) / d) !== o((f + r) / d)
                        ? 2 * c
                        : a(c - l(h) * c, c - l(f) * c)
                  i.min.set(g, t[1], e < 0 ? -m : 0),
                    i.max.set(p, t[3], e < 0 ? 0 : m)
                } else i.min.set(t[0], t[1], 0), i.max.set(t[2], t[3], 0)
                i.getBoundingSphere(this.boundingSphere)
              }
            }
            applyClipRect(t) {
              let e = this.getAttribute(rt).count,
                i = this._chunkedBounds
              if (i)
                for (let r = i.length; r--; ) {
                  e = i[r].end
                  let o = i[r].rect
                  if (o[1] < t.w && o[3] > t.y && o[0] < t.z && o[2] > t.x)
                    break
                }
              this.instanceCount = e
            }
          }
          function nt(e, i, r, o) {
            const n = e.getAttribute(i)
            r
              ? n && n.array.length === r.length
                ? (n.array.set(r), (n.needsUpdate = !0))
                : (e.setAttribute(i, new t.InstancedBufferAttribute(r, o)),
                  delete e._maxInstanceCount,
                  e.dispose())
              : n && e.deleteAttribute(i)
          }
          const at =
              "\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform vec4 uTroikaTotalBounds;\nuniform vec4 uTroikaClipRect;\nuniform mat3 uTroikaOrient;\nuniform bool uTroikaUseGlyphColors;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaBlurRadius;\nuniform vec2 uTroikaPositionOffset;\nuniform float uTroikaCurveRadius;\nattribute vec4 aTroikaGlyphBounds;\nattribute float aTroikaGlyphIndex;\nattribute vec3 aTroikaGlyphColor;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec3 vTroikaGlyphColor;\nvarying vec2 vTroikaGlyphDimensions;\n",
            st =
              "\nvec4 bounds = aTroikaGlyphBounds;\nbounds.xz += uTroikaPositionOffset.x;\nbounds.yw -= uTroikaPositionOffset.y;\n\nvec4 outlineBounds = vec4(\n  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,\n  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius\n);\nvec4 clippedBounds = vec4(\n  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\n  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\n);\n\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\n\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\n\nuv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);\n\nfloat rad = uTroikaCurveRadius;\nif (rad != 0.0) {\n  float angle = position.x / rad;\n  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);\n  normal.xz = vec2(sin(angle), cos(angle));\n}\n  \nposition = uTroikaOrient * position;\nnormal = uTroikaOrient * normal;\n\nvTroikaGlyphUV = clippedXY.xy;\nvTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);\n\n\nfloat txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\nvec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\nvec2 txStartUV = txUvPerSquare * vec2(\n  mod(floor(aTroikaGlyphIndex / 4.0), txCols),\n  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)\n);\nvTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);\nvTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);\n",
            lt =
              "\nuniform sampler2D uTroikaSDFTexture;\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform float uTroikaSDFExponent;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaFillOpacity;\nuniform float uTroikaOutlineOpacity;\nuniform float uTroikaBlurRadius;\nuniform vec3 uTroikaStrokeColor;\nuniform float uTroikaStrokeWidth;\nuniform float uTroikaStrokeOpacity;\nuniform bool uTroikaSDFDebug;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec2 vTroikaGlyphDimensions;\n\nfloat troikaSdfValueToSignedDistance(float alpha) {\n  // Inverse of exponential encoding in webgl-sdf-generator\n  \n  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);\n  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;\n  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);\n  return signedDist;\n}\n\nfloat troikaGlyphUvToSdfValue(vec2 glyphUV) {\n  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);\n  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);\n  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1\n  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;\n}\n\nfloat troikaGlyphUvToDistance(vec2 uv) {\n  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));\n}\n\nfloat troikaGetAADist() {\n  \n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\n  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;\n  #else\n  return vTroikaGlyphDimensions.x / 64.0;\n  #endif\n}\n\nfloat troikaGetFragDistValue() {\n  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);\n  float distance = troikaGlyphUvToDistance(clampedGlyphUV);\n \n  // Extrapolate distance when outside bounds:\n  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : \n    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\n\n  \n\n  return distance;\n}\n\nfloat troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\n  float alpha = step(-distanceOffset, -distance);\n  #else\n\n  float alpha = smoothstep(\n    distanceOffset + aaDist,\n    distanceOffset - aaDist,\n    distance\n  );\n  #endif\n\n  return alpha;\n}\n",
            ut =
              "\nfloat aaDist = troikaGetAADist();\nfloat fragDistance = troikaGetFragDistValue();\nfloat edgeAlpha = uTroikaSDFDebug ?\n  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :\n  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));\n\n#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)\nvec4 fillRGBA = gl_FragColor;\nfillRGBA.a *= uTroikaFillOpacity;\nvec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);\nif (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;\ngl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(\n  -uTroikaStrokeWidth - aaDist,\n  -uTroikaStrokeWidth + aaDist,\n  fragDistance\n));\ngl_FragColor.a *= edgeAlpha;\n#endif\n\nif (edgeAlpha == 0.0) {\n  discard;\n}\n"
          const dt = new t.MeshBasicMaterial({
              color: 16777215,
              side: t.DoubleSide,
              transparent: !0,
            }),
            ct = 8421504,
            ht = new t.Matrix4(),
            ft = new t.Vector3(),
            gt = new t.Vector3(),
            pt = [],
            mt = new t.Vector3(),
            vt = "+x+y"
          function bt(t) {
            return Array.isArray(t) ? t[0] : t
          }
          let yt = () => {
              const e = new t.Mesh(new t.PlaneGeometry(1, 1), dt)
              return (yt = () => e), e
            },
            At = () => {
              const e = new t.Mesh(new t.PlaneGeometry(1, 1, 32, 1), dt)
              return (At = () => e), e
            }
          const wt = { type: "syncstart" },
            kt = { type: "synccomplete" },
            Ct = [
              "font",
              "fontSize",
              "letterSpacing",
              "lineHeight",
              "maxWidth",
              "overflowWrap",
              "text",
              "direction",
              "textAlign",
              "textIndent",
              "whiteSpace",
              "anchorX",
              "anchorY",
              "colorRanges",
              "sdfGlyphSize",
            ],
            xt = Ct.concat(
              "material",
              "color",
              "depthOffset",
              "clipRect",
              "curveRadius",
              "orientation",
              "glyphGeometryDetail"
            )
          class St extends t.Mesh {
            constructor() {
              super(new ot(), null),
                (this.text = ""),
                (this.anchorX = 0),
                (this.anchorY = 0),
                (this.curveRadius = 0),
                (this.direction = "auto"),
                (this.font = null),
                (this.fontSize = 0.1),
                (this.letterSpacing = 0),
                (this.lineHeight = "normal"),
                (this.maxWidth = 1 / 0),
                (this.overflowWrap = "normal"),
                (this.textAlign = "left"),
                (this.textIndent = 0),
                (this.whiteSpace = "normal"),
                (this.material = null),
                (this.color = null),
                (this.colorRanges = null),
                (this.outlineWidth = 0),
                (this.outlineColor = 0),
                (this.outlineOpacity = 1),
                (this.outlineBlur = 0),
                (this.outlineOffsetX = 0),
                (this.outlineOffsetY = 0),
                (this.strokeWidth = 0),
                (this.strokeColor = ct),
                (this.strokeOpacity = 1),
                (this.fillOpacity = 1),
                (this.depthOffset = 0),
                (this.clipRect = null),
                (this.orientation = vt),
                (this.glyphGeometryDetail = 1),
                (this.sdfGlyphSize = null),
                (this.gpuAccelerateSDF = !0),
                (this.debugSDF = !1)
            }
            sync(t) {
              this._needsSync &&
                ((this._needsSync = !1),
                this._isSyncing
                  ? (this._queuedSyncs || (this._queuedSyncs = [])).push(t)
                  : ((this._isSyncing = !0),
                    this.dispatchEvent(wt),
                    Q(
                      {
                        text: this.text,
                        font: this.font,
                        fontSize: this.fontSize || 0.1,
                        letterSpacing: this.letterSpacing || 0,
                        lineHeight: this.lineHeight || "normal",
                        maxWidth: this.maxWidth,
                        direction: this.direction || "auto",
                        textAlign: this.textAlign,
                        textIndent: this.textIndent,
                        whiteSpace: this.whiteSpace,
                        overflowWrap: this.overflowWrap,
                        anchorX: this.anchorX,
                        anchorY: this.anchorY,
                        colorRanges: this.colorRanges,
                        includeCaretPositions: !0,
                        sdfGlyphSize: this.sdfGlyphSize,
                        gpuAccelerateSDF: this.gpuAccelerateSDF,
                      },
                      (e) => {
                        ;(this._isSyncing = !1),
                          (this._textRenderInfo = e),
                          this.geometry.updateGlyphs(
                            e.glyphBounds,
                            e.glyphAtlasIndices,
                            e.blockBounds,
                            e.chunkedBounds,
                            e.glyphColors
                          )
                        const i = this._queuedSyncs
                        i &&
                          ((this._queuedSyncs = null),
                          (this._needsSync = !0),
                          this.sync(() => {
                            i.forEach((t) => t && t())
                          })),
                          this.dispatchEvent(kt),
                          t && t()
                      }
                    )))
            }
            onBeforeRender(e, i, r, o, n, a) {
              this.sync(),
                n.isTroikaTextMaterial && this._prepareForRender(n),
                (n._hadOwnSide = n.hasOwnProperty("side")),
                this.geometry.setSide((n._actualSide = n.side)),
                (n.side = t.FrontSide)
            }
            onAfterRender(t, e, i, r, o, n) {
              o._hadOwnSide ? (o.side = o._actualSide) : delete o.side
            }
            dispose() {
              this.geometry.dispose()
            }
            get textRenderInfo() {
              return this._textRenderInfo || null
            }
            get material() {
              let e = this._derivedMaterial
              const i =
                this._baseMaterial ||
                this._defaultMaterial ||
                (this._defaultMaterial = dt.clone())
              if (
                ((e && e.baseMaterial === i) ||
                  ((e = this._derivedMaterial =
                    (function (e) {
                      const i = _(e, {
                        chained: !0,
                        extensions: { derivatives: !0 },
                        uniforms: {
                          uTroikaSDFTexture: { value: null },
                          uTroikaSDFTextureSize: { value: new t.Vector2() },
                          uTroikaSDFGlyphSize: { value: 0 },
                          uTroikaSDFExponent: { value: 0 },
                          uTroikaTotalBounds: {
                            value: new t.Vector4(0, 0, 0, 0),
                          },
                          uTroikaClipRect: { value: new t.Vector4(0, 0, 0, 0) },
                          uTroikaDistanceOffset: { value: 0 },
                          uTroikaOutlineOpacity: { value: 0 },
                          uTroikaFillOpacity: { value: 1 },
                          uTroikaPositionOffset: { value: new t.Vector2() },
                          uTroikaCurveRadius: { value: 0 },
                          uTroikaBlurRadius: { value: 0 },
                          uTroikaStrokeWidth: { value: 0 },
                          uTroikaStrokeColor: { value: new t.Color() },
                          uTroikaStrokeOpacity: { value: 1 },
                          uTroikaOrient: { value: new t.Matrix3() },
                          uTroikaUseGlyphColors: { value: !0 },
                          uTroikaSDFDebug: { value: !1 },
                        },
                        vertexDefs: at,
                        vertexTransform: st,
                        fragmentDefs: lt,
                        fragmentColorTransform: ut,
                        customRewriter({ vertexShader: t, fragmentShader: e }) {
                          let i = /\buniform\s+vec3\s+diffuse\b/
                          return (
                            i.test(e) &&
                              ((e = e
                                .replace(i, "varying vec3 vTroikaGlyphColor")
                                .replace(/\bdiffuse\b/g, "vTroikaGlyphColor")),
                              i.test(t) ||
                                (t = t.replace(
                                  b,
                                  "uniform vec3 diffuse;\n$&\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\n"
                                ))),
                            { vertexShader: t, fragmentShader: e }
                          )
                        },
                      })
                      return (
                        (i.transparent = !0),
                        Object.defineProperties(i, {
                          isTroikaTextMaterial: { value: !0 },
                          shadowSide: {
                            get() {
                              return this.side
                            },
                            set() {},
                          },
                        }),
                        i
                      )
                    })(i)),
                  i.addEventListener("dispose", function t() {
                    i.removeEventListener("dispose", t), e.dispose()
                  })),
                this.outlineWidth ||
                  this.outlineBlur ||
                  this.outlineOffsetX ||
                  this.outlineOffsetY)
              ) {
                let t = e._outlineMtl
                return (
                  t ||
                    ((t = e._outlineMtl =
                      Object.create(e, { id: { value: e.id + 0.1 } })),
                    (t.isTextOutlineMaterial = !0),
                    (t.depthWrite = !1),
                    (t.map = null),
                    e.addEventListener("dispose", function i() {
                      e.removeEventListener("dispose", i), t.dispose()
                    })),
                  [t, e]
                )
              }
              return e
            }
            set material(t) {
              t && t.isTroikaTextMaterial
                ? ((this._derivedMaterial = t),
                  (this._baseMaterial = t.baseMaterial))
                : (this._baseMaterial = t)
            }
            get glyphGeometryDetail() {
              return this.geometry.detail
            }
            set glyphGeometryDetail(t) {
              this.geometry.detail = t
            }
            get curveRadius() {
              return this.geometry.curveRadius
            }
            set curveRadius(t) {
              this.geometry.curveRadius = t
            }
            get customDepthMaterial() {
              return bt(this.material).getDepthMaterial()
            }
            get customDistanceMaterial() {
              return bt(this.material).getDistanceMaterial()
            }
            _prepareForRender(e) {
              const i = e.isTextOutlineMaterial,
                r = e.uniforms,
                o = this.textRenderInfo
              if (o) {
                const { sdfTexture: t, blockBounds: e } = o
                ;(r.uTroikaSDFTexture.value = t),
                  r.uTroikaSDFTextureSize.value.set(
                    t.image.width,
                    t.image.height
                  ),
                  (r.uTroikaSDFGlyphSize.value = o.sdfGlyphSize),
                  (r.uTroikaSDFExponent.value = o.sdfExponent),
                  r.uTroikaTotalBounds.value.fromArray(e),
                  (r.uTroikaUseGlyphColors.value = !i && !!o.glyphColors)
                let n,
                  a,
                  s,
                  l = 0,
                  u = 0,
                  d = 0,
                  c = 0,
                  h = 0
                if (i) {
                  let {
                    outlineWidth: t,
                    outlineOffsetX: e,
                    outlineOffsetY: i,
                    outlineBlur: r,
                    outlineOpacity: o,
                  } = this
                  ;(l = this._parsePercent(t) || 0),
                    (u = Math.max(0, this._parsePercent(r) || 0)),
                    (n = o),
                    (c = this._parsePercent(e) || 0),
                    (h = this._parsePercent(i) || 0)
                } else
                  (d = Math.max(0, this._parsePercent(this.strokeWidth) || 0)),
                    d &&
                      ((s = this.strokeColor),
                      r.uTroikaStrokeColor.value.set(null == s ? ct : s),
                      (a = this.strokeOpacity),
                      null == a && (a = 1)),
                    (n = this.fillOpacity)
                ;(r.uTroikaDistanceOffset.value = l),
                  r.uTroikaPositionOffset.value.set(c, h),
                  (r.uTroikaBlurRadius.value = u),
                  (r.uTroikaStrokeWidth.value = d),
                  (r.uTroikaStrokeOpacity.value = a),
                  (r.uTroikaFillOpacity.value = null == n ? 1 : n),
                  (r.uTroikaCurveRadius.value = this.curveRadius || 0)
                let f = this.clipRect
                if (f && Array.isArray(f) && 4 === f.length)
                  r.uTroikaClipRect.value.fromArray(f)
                else {
                  const t = 100 * (this.fontSize || 0.1)
                  r.uTroikaClipRect.value.set(
                    e[0] - t,
                    e[1] - t,
                    e[2] + t,
                    e[3] + t
                  )
                }
                this.geometry.applyClipRect(r.uTroikaClipRect.value)
              }
              ;(r.uTroikaSDFDebug.value = !!this.debugSDF),
                (e.polygonOffset = !!this.depthOffset),
                (e.polygonOffsetFactor = e.polygonOffsetUnits =
                  this.depthOffset || 0)
              const n = i ? this.outlineColor || 0 : this.color
              if (null == n) delete e.color
              else {
                const i = e.hasOwnProperty("color")
                  ? e.color
                  : (e.color = new t.Color())
                ;(n === i._input && "object" != typeof n) ||
                  i.set((i._input = n))
              }
              let a = this.orientation || vt
              if (a !== e._orientation) {
                let t = r.uTroikaOrient.value
                a = a.replace(/[^-+xyz]/g, "")
                let i = a !== vt && a.match(/^([-+])([xyz])([-+])([xyz])$/)
                if (i) {
                  let [, e, r, o, n] = i
                  ;(ft.set(0, 0, 0)[r] = "-" === e ? 1 : -1),
                    (gt.set(0, 0, 0)[n] = "-" === o ? -1 : 1),
                    ht.lookAt(mt, ft.cross(gt), gt),
                    t.setFromMatrix4(ht)
                } else t.identity()
                e._orientation = a
              }
            }
            _parsePercent(t) {
              if ("string" == typeof t) {
                let e = t.match(/^(-?[\d.]+)%$/),
                  i = e ? parseFloat(e[1]) : NaN
                t = (isNaN(i) ? 0 : i / 100) * this.fontSize
              }
              return t
            }
            localPositionToTextCoords(e, i = new t.Vector2()) {
              i.copy(e)
              const r = this.curveRadius
              return (
                r &&
                  (i.x =
                    Math.atan2(e.x, Math.abs(r) - Math.abs(e.z)) * Math.abs(r)),
                i
              )
            }
            worldPositionToTextCoords(e, i = new t.Vector2()) {
              return (
                ft.copy(e),
                this.localPositionToTextCoords(this.worldToLocal(ft), i)
              )
            }
            raycast(t, e) {
              const { textRenderInfo: i, curveRadius: r } = this
              if (i) {
                const o = i.blockBounds,
                  n = r ? At() : yt(),
                  a = n.geometry,
                  { position: s, uv: l } = a.attributes
                for (let t = 0; t < l.count; t++) {
                  let e = o[0] + l.getX(t) * (o[2] - o[0])
                  const i = o[1] + l.getY(t) * (o[3] - o[1])
                  let n = 0
                  r &&
                    ((n = r - Math.cos(e / r) * r), (e = Math.sin(e / r) * r)),
                    s.setXYZ(t, e, i, n)
                }
                ;(a.boundingSphere = this.geometry.boundingSphere),
                  (a.boundingBox = this.geometry.boundingBox),
                  (n.matrixWorld = this.matrixWorld),
                  (n.material.side = this.material.side),
                  (pt.length = 0),
                  n.raycast(t, pt)
                for (let t = 0; t < pt.length; t++)
                  (pt[t].object = this), e.push(pt[t])
              }
            }
            copy(t) {
              const e = this.geometry
              return (
                super.copy(t),
                (this.geometry = e),
                xt.forEach((e) => {
                  this[e] = t[e]
                }),
                this
              )
            }
            clone() {
              return new this.constructor().copy(this)
            }
          }
          Ct.forEach((t) => {
            const e = "_private_" + t
            Object.defineProperty(St.prototype, t, {
              get() {
                return this[e]
              },
              set(t) {
                t !== this[e] && ((this[e] = t), (this._needsSync = !0))
              },
            })
          })
          var _t = "troika-text"
          function Et(t) {
            return {
              default: t,
              parse: function (t) {
                return "string" == typeof t && t.indexOf("%") > 0
                  ? t
                  : ((t = +t), isNaN(t) ? 0 : t)
              },
              stringify: function (t) {
                return "" + t
              },
            }
          }
          n.default.registerComponent(_t, {
            schema: {
              align: {
                type: "string",
                default: "left",
                oneOf: ["left", "right", "center", "justify"],
              },
              anchor: {
                default: "center",
                oneOf: ["left", "right", "center", "align"],
              },
              baseline: {
                default: "center",
                oneOf: ["top", "center", "bottom"],
              },
              clipRect: {
                type: "string",
                default: "",
                parse: function (t) {
                  return (
                    t &&
                      (t = t.split(/[\s,]+/).reduce(function (t, e) {
                        return (e = +e), isNaN(e) || t.push(e), t
                      }, [])),
                    t && 4 === t.length ? t : null
                  )
                },
                stringify: function (t) {
                  return t ? t.join(" ") : ""
                },
              },
              color: { type: "color", default: "#FFF" },
              colorRanges: {
                type: "string",
                default: null,
                parse: function (t) {
                  return "string" == typeof t ? JSON.parse(t) : t
                },
                stringify: JSON.stringify,
              },
              curveRadius: { type: "number", default: 0 },
              depthOffset: { type: "number", default: 0 },
              direction: {
                type: "string",
                default: "auto",
                oneOf: ["auto", "ltr", "rtl"],
              },
              fillOpacity: { type: "number", default: 1 },
              font: { type: "string" },
              fontSize: { type: "number", default: 0.2 },
              letterSpacing: { type: "number", default: 0 },
              lineHeight: { type: "number" },
              maxWidth: { type: "number", default: 1 / 0 },
              outlineBlur: Et(0),
              outlineColor: { type: "color", default: "#000" },
              outlineOffsetX: Et(0),
              outlineOffsetY: Et(0),
              outlineOpacity: { type: "number", default: 1 },
              outlineWidth: Et(0),
              overflowWrap: {
                type: "string",
                default: "normal",
                oneOf: ["normal", "break-word"],
              },
              strokeColor: { type: "color", default: "grey" },
              strokeOpacity: { type: "number", default: 1 },
              strokeWidth: Et(0),
              textIndent: { type: "number", default: 0 },
              value: { type: "string" },
              whiteSpace: { default: "normal", oneOf: ["normal", "nowrap"] },
            },
            init: function () {
              var t
              "a-troika-text" === this.el.tagName.toLowerCase()
                ? (t = this.el)
                : ((t = document.createElement("a-entity")),
                  this.el.appendChild(t)),
                (this.troikaTextEntity = t)
              var e = (this.troikaTextMesh = new St())
              t.setObject3D("mesh", e)
            },
            update: function () {
              var t = this.data,
                e = this.troikaTextMesh,
                i = this.troikaTextEntity,
                r = t.font
              if (
                ((e.text = (t.value || "")
                  .replace(/\\n/g, "\n")
                  .replace(/\\t/g, "\t")),
                (e.textAlign = t.align),
                t.font.startsWith("#"))
              ) {
                r = document.querySelector(t.font).getAttribute("src")
              }
              if (
                ((e.anchorX =
                  Ut["align" === t.anchor ? t.align : t.anchor] || "center"),
                (e.anchorY = Ft[t.baseline] || "middle"),
                (e.color = t.color),
                (e.colorRanges = t.colorRanges),
                (e.clipRect = t.clipRect),
                (e.curveRadius = t.curveRadius),
                (e.depthOffset = t.depthOffset || 0),
                (e.direction = t.direction),
                (e.fillOpacity = t.fillOpacity),
                (e.font = r),
                (e.fontSize = t.fontSize),
                (e.letterSpacing = t.letterSpacing || 0),
                (e.lineHeight = t.lineHeight || "normal"),
                (e.outlineBlur = t.outlineBlur),
                (e.outlineColor = t.outlineColor),
                (e.outlineOffsetX = t.outlineOffsetX),
                (e.outlineOffsetY = t.outlineOffsetY),
                (e.outlineOpacity = t.outlineOpacity),
                (e.outlineWidth = t.outlineWidth),
                (e.overflowWrap = t.overflowWrap),
                (e.strokeColor = t.strokeColor),
                (e.strokeOpacity = t.strokeOpacity),
                (e.strokeWidth = t.strokeWidth),
                (e.textIndent = t.textIndent),
                (e.whiteSpace = t.whiteSpace),
                (e.maxWidth = t.maxWidth),
                e.sync(),
                i !== this.el)
              ) {
                var o = this.el.getAttribute("troika-text-material")
                o
                  ? i.setAttribute("material", o)
                  : i.removeAttribute("material")
              }
            },
            remove: function () {
              this.troikaTextMesh.dispose(),
                this.troikaTextEntity !== this.el &&
                  this.el.removeChild(this.troikaTextEntity)
            },
          })
          var Tt,
            Ut = { left: "left", center: "center", right: "right" },
            Ft = { top: "top", center: "middle", bottom: "bottom" },
            It = {},
            $t = n.default.components[_t].schema
          Object.keys($t).map(function (t) {
            var e = t.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()
            It[e] = _t + "." + t
          }),
            n.default.registerPrimitive("a-troika-text", {
              defaultComponents: { "troika-text": {} },
              mappings: It,
            }),
            (Tt = o).MathUtils || (Tt.MathUtils = Tt.Math)
        })(THREE, AFRAME)
      },
    },
    e = {}
  function i(r) {
    var o = e[r]
    if (void 0 !== o) return o.exports
    var n = (e[r] = { exports: {} })
    return t[r](n, n.exports, i), n.exports
  }
  ;(() => {
    if ("undefined" == typeof AFRAME)
      throw new Error(
        "Component attempted to register before AFRAME was available."
      )
    i(546),
      i(169),
      i(389),
      i(718),
      i(754),
      i(741),
      i(72),
      i(283),
      i(843),
      i(537),
      i(54),
      i(725),
      i(40),
      i(184),
      i(890),
      i(975),
      i(798),
      i(594),
      i(363),
      i(624),
      i(544),
      i(47)
  })()
})()
